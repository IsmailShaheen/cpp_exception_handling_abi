
app:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 0e                	add    %cl,(%esi)
 8048199:	ca 3d 2e             	lret   $0x2e3d
 804819c:	6c                   	insb   (%dx),%es:(%edi)
 804819d:	12 3e                	adc    (%esi),%bh
 804819f:	80 e5 3a             	and    $0x3a,%ch
 80481a2:	c4 b5 0b f5 6d d2    	les    -0x2d920af5(%ebp),%esi
 80481a8:	b8                   	.byte 0xb8
 80481a9:	32                   	.byte 0x32
 80481aa:	8c                   	.byte 0x8c
 80481ab:	7c                   	.byte 0x7c

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0e                   	push   %cs
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0e                	add    %cl,(%esi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x300>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	dc 00                	faddl  (%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	61                   	popa   
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 94 00 00 00 00 00 	add    %dl,0x0(%eax,%eax,1)
 8048202:	00 00                	add    %al,(%eax)
 8048204:	00 00                	add    %al,(%eax)
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	41                   	inc    %ecx
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 d7                	add    %dl,%bh
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 0f                	add    %cl,(%edi)
	...
 8048235:	00 00                	add    %al,(%eax)
 8048237:	00 20                	add    %ah,(%eax)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 d2                	add    %dl,%dl
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 86 00 00 00 00    	add    %al,0x0(%esi)
 8048251:	00 00                	add    %al,(%eax)
 8048253:	00 00                	add    %al,(%eax)
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 12                	add    %dl,(%edx)
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 e3                	add    %ah,%bl
	...
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 12                	add    %dl,(%edx)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 ab 00 00 00 00    	add    %ch,0x0(%ebx)
 8048271:	00 00                	add    %al,(%eax)
 8048273:	00 00                	add    %al,(%eax)
 8048275:	00 00                	add    %al,(%eax)
 8048277:	00 12                	add    %dl,(%edx)
 8048279:	00 00                	add    %al,(%eax)
 804827b:	00 1e                	add    %bl,(%esi)
	...
 8048285:	00 00                	add    %al,(%eax)
 8048287:	00 20                	add    %ah,(%eax)
 8048289:	00 00                	add    %al,(%eax)
 804828b:	00 32                	add    %dh,(%edx)
	...
 8048295:	00 00                	add    %al,(%eax)
 8048297:	00 12                	add    %dl,(%edx)
 8048299:	00 00                	add    %al,(%eax)
 804829b:	00 78 00             	add    %bh,0x0(%eax)
	...
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	12 00                	adc    (%eax),%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	c3                   	ret    
 80482ad:	00 00                	add    %al,(%eax)
 80482af:	00 a4 8c 04 08 04 00 	add    %ah,0x40804(%esp,%ecx,4)
 80482b6:	00 00                	add    %al,(%eax)
 80482b8:	11 00                	adc    %eax,(%eax)
 80482ba:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

080482bc <.dynstr>:
 80482bc:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482c0:	67 63 63 5f          	arpl   %sp,0x5f(%bp,%di)
 80482c4:	73 2e                	jae    80482f4 <_init-0x198>
 80482c6:	73 6f                	jae    8048337 <_init-0x155>
 80482c8:	2e 31 00             	xor    %eax,%cs:(%eax)
 80482cb:	5f                   	pop    %edi
 80482cc:	5f                   	pop    %edi
 80482cd:	67 6d                	insl   (%dx),%es:(%di)
 80482cf:	6f                   	outsl  %ds:(%esi),(%dx)
 80482d0:	6e                   	outsb  %ds:(%esi),(%dx)
 80482d1:	5f                   	pop    %edi
 80482d2:	73 74                	jae    8048348 <_init-0x144>
 80482d4:	61                   	popa   
 80482d5:	72 74                	jb     804834b <_init-0x141>
 80482d7:	5f                   	pop    %edi
 80482d8:	5f                   	pop    %edi
 80482d9:	00 5f 4a             	add    %bl,0x4a(%edi)
 80482dc:	76 5f                	jbe    804833d <_init-0x14f>
 80482de:	52                   	push   %edx
 80482df:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%bp,%di),%esi
 80482e6:	43 6c 
 80482e8:	61                   	popa   
 80482e9:	73 73                	jae    804835e <_init-0x12e>
 80482eb:	65                   	gs
 80482ec:	73 00                	jae    80482ee <_init-0x19e>
 80482ee:	5f                   	pop    %edi
 80482ef:	55                   	push   %ebp
 80482f0:	6e                   	outsb  %ds:(%esi),(%dx)
 80482f1:	77 69                	ja     804835c <_init-0x130>
 80482f3:	6e                   	outsb  %ds:(%esi),(%dx)
 80482f4:	64                   	fs
 80482f5:	5f                   	pop    %edi
 80482f6:	52                   	push   %edx
 80482f7:	65                   	gs
 80482f8:	73 75                	jae    804836f <_init-0x11d>
 80482fa:	6d                   	insl   (%dx),%es:(%edi)
 80482fb:	65 00 5f 55          	add    %bl,%gs:0x55(%edi)
 80482ff:	6e                   	outsb  %ds:(%esi),(%dx)
 8048300:	77 69                	ja     804836b <_init-0x121>
 8048302:	6e                   	outsb  %ds:(%esi),(%dx)
 8048303:	64                   	fs
 8048304:	5f                   	pop    %edi
 8048305:	47                   	inc    %edi
 8048306:	65                   	gs
 8048307:	74 4c                	je     8048355 <_init-0x137>
 8048309:	61                   	popa   
 804830a:	6e                   	outsb  %ds:(%esi),(%dx)
 804830b:	67 75 61             	addr16 jne 804836f <_init-0x11d>
 804830e:	67                   	addr16
 804830f:	65                   	gs
 8048310:	53                   	push   %ebx
 8048311:	70 65                	jo     8048378 <_init-0x114>
 8048313:	63 69 66             	arpl   %bp,0x66(%ecx)
 8048316:	69 63 44 61 74 61 00 	imul   $0x617461,0x44(%ebx),%esp
 804831d:	5f                   	pop    %edi
 804831e:	55                   	push   %ebp
 804831f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048320:	77 69                	ja     804838b <_init-0x101>
 8048322:	6e                   	outsb  %ds:(%esi),(%dx)
 8048323:	64                   	fs
 8048324:	5f                   	pop    %edi
 8048325:	47                   	inc    %edi
 8048326:	65                   	gs
 8048327:	74 52                	je     804837b <_init-0x111>
 8048329:	65 67 69 6f 6e 53 74 	imul   $0x72617453,%gs:0x6e(%bx),%ebp
 8048330:	61 72 
 8048332:	74 00                	je     8048334 <_init-0x158>
 8048334:	5f                   	pop    %edi
 8048335:	55                   	push   %ebp
 8048336:	6e                   	outsb  %ds:(%esi),(%dx)
 8048337:	77 69                	ja     80483a2 <_init-0xea>
 8048339:	6e                   	outsb  %ds:(%esi),(%dx)
 804833a:	64                   	fs
 804833b:	5f                   	pop    %edi
 804833c:	53                   	push   %ebx
 804833d:	65                   	gs
 804833e:	74 49                	je     8048389 <_init-0x103>
 8048340:	50                   	push   %eax
 8048341:	00 5f 55             	add    %bl,0x55(%edi)
 8048344:	6e                   	outsb  %ds:(%esi),(%dx)
 8048345:	77 69                	ja     80483b0 <_init-0xdc>
 8048347:	6e                   	outsb  %ds:(%esi),(%dx)
 8048348:	64                   	fs
 8048349:	5f                   	pop    %edi
 804834a:	47                   	inc    %edi
 804834b:	65                   	gs
 804834c:	74 49                	je     8048397 <_init-0xf5>
 804834e:	50                   	push   %eax
 804834f:	00 5f 55             	add    %bl,0x55(%edi)
 8048352:	6e                   	outsb  %ds:(%esi),(%dx)
 8048353:	77 69                	ja     80483be <_init-0xce>
 8048355:	6e                   	outsb  %ds:(%esi),(%dx)
 8048356:	64                   	fs
 8048357:	5f                   	pop    %edi
 8048358:	52                   	push   %edx
 8048359:	61                   	popa   
 804835a:	69 73 65 45 78 63 65 	imul   $0x65637845,0x65(%ebx),%esi
 8048361:	70 74                	jo     80483d7 <_init-0xb5>
 8048363:	69 6f 6e 00 5f 55 6e 	imul   $0x6e555f00,0x6e(%edi),%ebp
 804836a:	77 69                	ja     80483d5 <_init-0xb7>
 804836c:	6e                   	outsb  %ds:(%esi),(%dx)
 804836d:	64                   	fs
 804836e:	5f                   	pop    %edi
 804836f:	53                   	push   %ebx
 8048370:	65                   	gs
 8048371:	74 47                	je     80483ba <_init-0xd2>
 8048373:	52                   	push   %edx
 8048374:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048378:	63 2e                	arpl   %bp,(%esi)
 804837a:	73 6f                	jae    80483eb <_init-0xa1>
 804837c:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048381:	4f                   	dec    %edi
 8048382:	5f                   	pop    %edi
 8048383:	73 74                	jae    80483f9 <_init-0x93>
 8048385:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 804838c:	64 
 804838d:	00 65 78             	add    %ah,0x78(%ebp)
 8048390:	69 74 00 70 75 74 73 	imul   $0x737475,0x70(%eax,%eax,1),%esi
 8048397:	00 
 8048398:	70 72                	jo     804840c <_init-0x80>
 804839a:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 80483a1:	6c                   	insb   (%dx),%es:(%edi)
 80483a2:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80483a9:	72 74                	jb     804841f <_init-0x6d>
 80483ab:	5f                   	pop    %edi
 80483ac:	6d                   	insl   (%dx),%es:(%edi)
 80483ad:	61                   	popa   
 80483ae:	69 6e 00 47 43 43 5f 	imul   $0x5f434347,0x0(%esi),%ebp
 80483b5:	33 2e                	xor    (%esi),%ebp
 80483b7:	30 00                	xor    %al,(%eax)
 80483b9:	47                   	inc    %edi
 80483ba:	4c                   	dec    %esp
 80483bb:	49                   	dec    %ecx
 80483bc:	42                   	inc    %edx
 80483bd:	43                   	inc    %ebx
 80483be:	5f                   	pop    %edi
 80483bf:	32 2e                	xor    (%esi),%ch
 80483c1:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080483c4 <.gnu.version>:
 80483c4:	00 00                	add    %al,(%eax)
 80483c6:	02 00                	add    (%eax),%al
 80483c8:	03 00                	add    (%eax),%eax
 80483ca:	03 00                	add    (%eax),%eax
 80483cc:	03 00                	add    (%eax),%eax
 80483ce:	02 00                	add    (%eax),%al
 80483d0:	00 00                	add    %al,(%eax)
 80483d2:	02 00                	add    (%eax),%al
 80483d4:	03 00                	add    (%eax),%eax
 80483d6:	02 00                	add    (%eax),%al
 80483d8:	03 00                	add    (%eax),%eax
 80483da:	00 00                	add    %al,(%eax)
 80483dc:	03 00                	add    (%eax),%eax
 80483de:	03 00                	add    (%eax),%eax
 80483e0:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080483e4 <.gnu.version_r>:
 80483e4:	01 00                	add    %eax,(%eax)
 80483e6:	01 00                	add    %eax,(%eax)
 80483e8:	01 00                	add    %eax,(%eax)
 80483ea:	00 00                	add    %al,(%eax)
 80483ec:	10 00                	adc    %al,(%eax)
 80483ee:	00 00                	add    %al,(%eax)
 80483f0:	20 00                	and    %al,(%eax)
 80483f2:	00 00                	add    %al,(%eax)
 80483f4:	50                   	push   %eax
 80483f5:	26                   	es
 80483f6:	79 0b                	jns    8048403 <_init-0x89>
 80483f8:	00 00                	add    %al,(%eax)
 80483fa:	03 00                	add    (%eax),%eax
 80483fc:	f5                   	cmc    
 80483fd:	00 00                	add    %al,(%eax)
 80483ff:	00 00                	add    %al,(%eax)
 8048401:	00 00                	add    %al,(%eax)
 8048403:	00 01                	add    %al,(%ecx)
 8048405:	00 01                	add    %al,(%ecx)
 8048407:	00 b9 00 00 00 10    	add    %bh,0x10000000(%ecx)
 804840d:	00 00                	add    %al,(%eax)
 804840f:	00 00                	add    %al,(%eax)
 8048411:	00 00                	add    %al,(%eax)
 8048413:	00 10                	add    %dl,(%eax)
 8048415:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 804841c:	fd                   	std    
 804841d:	00 00                	add    %al,(%eax)
 804841f:	00 00                	add    %al,(%eax)
 8048421:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048424 <.rel.dyn>:
 8048424:	f0 af                	lock scas %es:(%edi),%eax
 8048426:	04 08                	add    $0x8,%al
 8048428:	06                   	push   %es
 8048429:	06                   	push   %es
	...

Disassembly of section .rel.plt:

0804842c <.rel.plt>:
 804842c:	00 b0 04 08 07 01    	add    %dh,0x1070804(%eax)
 8048432:	00 00                	add    %al,(%eax)
 8048434:	04 b0                	add    $0xb0,%al
 8048436:	04 08                	add    $0x8,%al
 8048438:	07                   	pop    %es
 8048439:	02 00                	add    (%eax),%al
 804843b:	00 08                	add    %cl,(%eax)
 804843d:	b0 04                	mov    $0x4,%al
 804843f:	08 07                	or     %al,(%edi)
 8048441:	03 00                	add    (%eax),%eax
 8048443:	00 0c b0             	add    %cl,(%eax,%esi,4)
 8048446:	04 08                	add    $0x8,%al
 8048448:	07                   	pop    %es
 8048449:	04 00                	add    $0x0,%al
 804844b:	00 10                	add    %dl,(%eax)
 804844d:	b0 04                	mov    $0x4,%al
 804844f:	08 07                	or     %al,(%edi)
 8048451:	05 00 00 14 b0       	add    $0xb0140000,%eax
 8048456:	04 08                	add    $0x8,%al
 8048458:	07                   	pop    %es
 8048459:	06                   	push   %es
 804845a:	00 00                	add    %al,(%eax)
 804845c:	18 b0 04 08 07 07    	sbb    %dh,0x7070804(%eax)
 8048462:	00 00                	add    %al,(%eax)
 8048464:	1c b0                	sbb    $0xb0,%al
 8048466:	04 08                	add    $0x8,%al
 8048468:	07                   	pop    %es
 8048469:	08 00                	or     %al,(%eax)
 804846b:	00 20                	add    %ah,(%eax)
 804846d:	b0 04                	mov    $0x4,%al
 804846f:	08 07                	or     %al,(%edi)
 8048471:	09 00                	or     %eax,(%eax)
 8048473:	00 24 b0             	add    %ah,(%eax,%esi,4)
 8048476:	04 08                	add    $0x8,%al
 8048478:	07                   	pop    %es
 8048479:	0a 00                	or     (%eax),%al
 804847b:	00 28                	add    %ch,(%eax)
 804847d:	b0 04                	mov    $0x4,%al
 804847f:	08 07                	or     %al,(%edi)
 8048481:	0c 00                	or     $0x0,%al
 8048483:	00 2c b0             	add    %ch,(%eax,%esi,4)
 8048486:	04 08                	add    $0x8,%al
 8048488:	07                   	pop    %es
 8048489:	0d                   	.byte 0xd
	...

Disassembly of section .init:

0804848c <_init>:
 804848c:	53                   	push   %ebx
 804848d:	83 ec 08             	sub    $0x8,%esp
 8048490:	e8 00 00 00 00       	call   8048495 <_init+0x9>
 8048495:	5b                   	pop    %ebx
 8048496:	81 c3 5f 2b 00 00    	add    $0x2b5f,%ebx
 804849c:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80484a2:	85 c0                	test   %eax,%eax
 80484a4:	74 05                	je     80484ab <_init+0x1f>
 80484a6:	e8 75 00 00 00       	call   8048520 <__gmon_start__@plt>
 80484ab:	e8 70 01 00 00       	call   8048620 <frame_dummy>
 80484b0:	e8 8b 07 00 00       	call   8048c40 <__do_global_ctors_aux>
 80484b5:	83 c4 08             	add    $0x8,%esp
 80484b8:	5b                   	pop    %ebx
 80484b9:	c3                   	ret    

Disassembly of section .plt:

080484c0 <printf@plt-0x10>:
 80484c0:	ff 35 f8 af 04 08    	pushl  0x804aff8
 80484c6:	ff 25 fc af 04 08    	jmp    *0x804affc
 80484cc:	00 00                	add    %al,(%eax)
	...

080484d0 <printf@plt>:
 80484d0:	ff 25 00 b0 04 08    	jmp    *0x804b000
 80484d6:	68 00 00 00 00       	push   $0x0
 80484db:	e9 e0 ff ff ff       	jmp    80484c0 <_init+0x34>

080484e0 <_Unwind_GetRegionStart@plt>:
 80484e0:	ff 25 04 b0 04 08    	jmp    *0x804b004
 80484e6:	68 08 00 00 00       	push   $0x8
 80484eb:	e9 d0 ff ff ff       	jmp    80484c0 <_init+0x34>

080484f0 <_Unwind_RaiseException@plt>:
 80484f0:	ff 25 08 b0 04 08    	jmp    *0x804b008
 80484f6:	68 10 00 00 00       	push   $0x10
 80484fb:	e9 c0 ff ff ff       	jmp    80484c0 <_init+0x34>

08048500 <_Unwind_GetLanguageSpecificData@plt>:
 8048500:	ff 25 0c b0 04 08    	jmp    *0x804b00c
 8048506:	68 18 00 00 00       	push   $0x18
 804850b:	e9 b0 ff ff ff       	jmp    80484c0 <_init+0x34>

08048510 <puts@plt>:
 8048510:	ff 25 10 b0 04 08    	jmp    *0x804b010
 8048516:	68 20 00 00 00       	push   $0x20
 804851b:	e9 a0 ff ff ff       	jmp    80484c0 <_init+0x34>

08048520 <__gmon_start__@plt>:
 8048520:	ff 25 14 b0 04 08    	jmp    *0x804b014
 8048526:	68 28 00 00 00       	push   $0x28
 804852b:	e9 90 ff ff ff       	jmp    80484c0 <_init+0x34>

08048530 <exit@plt>:
 8048530:	ff 25 18 b0 04 08    	jmp    *0x804b018
 8048536:	68 30 00 00 00       	push   $0x30
 804853b:	e9 80 ff ff ff       	jmp    80484c0 <_init+0x34>

08048540 <_Unwind_GetIP@plt>:
 8048540:	ff 25 1c b0 04 08    	jmp    *0x804b01c
 8048546:	68 38 00 00 00       	push   $0x38
 804854b:	e9 70 ff ff ff       	jmp    80484c0 <_init+0x34>

08048550 <__libc_start_main@plt>:
 8048550:	ff 25 20 b0 04 08    	jmp    *0x804b020
 8048556:	68 40 00 00 00       	push   $0x40
 804855b:	e9 60 ff ff ff       	jmp    80484c0 <_init+0x34>

08048560 <_Unwind_SetGR@plt>:
 8048560:	ff 25 24 b0 04 08    	jmp    *0x804b024
 8048566:	68 48 00 00 00       	push   $0x48
 804856b:	e9 50 ff ff ff       	jmp    80484c0 <_init+0x34>

08048570 <_Unwind_Resume@plt>:
 8048570:	ff 25 28 b0 04 08    	jmp    *0x804b028
 8048576:	68 50 00 00 00       	push   $0x50
 804857b:	e9 40 ff ff ff       	jmp    80484c0 <_init+0x34>

08048580 <_Unwind_SetIP@plt>:
 8048580:	ff 25 2c b0 04 08    	jmp    *0x804b02c
 8048586:	68 58 00 00 00       	push   $0x58
 804858b:	e9 30 ff ff ff       	jmp    80484c0 <_init+0x34>

Disassembly of section .text:

08048590 <_start>:
 8048590:	31 ed                	xor    %ebp,%ebp
 8048592:	5e                   	pop    %esi
 8048593:	89 e1                	mov    %esp,%ecx
 8048595:	83 e4 f0             	and    $0xfffffff0,%esp
 8048598:	50                   	push   %eax
 8048599:	54                   	push   %esp
 804859a:	52                   	push   %edx
 804859b:	68 30 8c 04 08       	push   $0x8048c30
 80485a0:	68 c0 8b 04 08       	push   $0x8048bc0
 80485a5:	51                   	push   %ecx
 80485a6:	56                   	push   %esi
 80485a7:	68 44 86 04 08       	push   $0x8048644
 80485ac:	e8 9f ff ff ff       	call   8048550 <__libc_start_main@plt>
 80485b1:	f4                   	hlt    
 80485b2:	90                   	nop
 80485b3:	90                   	nop
 80485b4:	90                   	nop
 80485b5:	90                   	nop
 80485b6:	90                   	nop
 80485b7:	90                   	nop
 80485b8:	90                   	nop
 80485b9:	90                   	nop
 80485ba:	90                   	nop
 80485bb:	90                   	nop
 80485bc:	90                   	nop
 80485bd:	90                   	nop
 80485be:	90                   	nop
 80485bf:	90                   	nop

080485c0 <__do_global_dtors_aux>:
 80485c0:	55                   	push   %ebp
 80485c1:	89 e5                	mov    %esp,%ebp
 80485c3:	53                   	push   %ebx
 80485c4:	83 ec 04             	sub    $0x4,%esp
 80485c7:	80 3d 40 b0 04 08 00 	cmpb   $0x0,0x804b040
 80485ce:	75 3f                	jne    804860f <__do_global_dtors_aux+0x4f>
 80485d0:	a1 44 b0 04 08       	mov    0x804b044,%eax
 80485d5:	bb 08 af 04 08       	mov    $0x804af08,%ebx
 80485da:	81 eb 04 af 04 08    	sub    $0x804af04,%ebx
 80485e0:	c1 fb 02             	sar    $0x2,%ebx
 80485e3:	83 eb 01             	sub    $0x1,%ebx
 80485e6:	39 d8                	cmp    %ebx,%eax
 80485e8:	73 1e                	jae    8048608 <__do_global_dtors_aux+0x48>
 80485ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485f0:	83 c0 01             	add    $0x1,%eax
 80485f3:	a3 44 b0 04 08       	mov    %eax,0x804b044
 80485f8:	ff 14 85 04 af 04 08 	call   *0x804af04(,%eax,4)
 80485ff:	a1 44 b0 04 08       	mov    0x804b044,%eax
 8048604:	39 d8                	cmp    %ebx,%eax
 8048606:	72 e8                	jb     80485f0 <__do_global_dtors_aux+0x30>
 8048608:	c6 05 40 b0 04 08 01 	movb   $0x1,0x804b040
 804860f:	83 c4 04             	add    $0x4,%esp
 8048612:	5b                   	pop    %ebx
 8048613:	5d                   	pop    %ebp
 8048614:	c3                   	ret    
 8048615:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048620 <frame_dummy>:
 8048620:	55                   	push   %ebp
 8048621:	89 e5                	mov    %esp,%ebp
 8048623:	83 ec 18             	sub    $0x18,%esp
 8048626:	a1 0c af 04 08       	mov    0x804af0c,%eax
 804862b:	85 c0                	test   %eax,%eax
 804862d:	74 12                	je     8048641 <frame_dummy+0x21>
 804862f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048634:	85 c0                	test   %eax,%eax
 8048636:	74 09                	je     8048641 <frame_dummy+0x21>
 8048638:	c7 04 24 0c af 04 08 	movl   $0x804af0c,(%esp)
 804863f:	ff d0                	call   *%eax
 8048641:	c9                   	leave  
 8048642:	c3                   	ret    
 8048643:	90                   	nop

08048644 <main>:
#include "throw.h"

int main()
{
 8048644:	55                   	push   %ebp
 8048645:	89 e5                	mov    %esp,%ebp
 8048647:	83 e4 f0             	and    $0xfffffff0,%esp
    seppuku();
 804864a:	e8 69 01 00 00       	call   80487b8 <seppuku>
    return 0;
 804864f:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048654:	c9                   	leave  
 8048655:	c3                   	ret    
 8048656:	90                   	nop
 8048657:	90                   	nop

08048658 <_Z5raisev>:
#include <stdio.h>
#include "throw.h"

struct Fake_Exception {};

void raise() {
 8048658:	55                   	push   %ebp
 8048659:	89 e5                	mov    %esp,%ebp
 804865b:	83 ec 18             	sub    $0x18,%esp
    throw Exception();
 804865e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048665:	e8 5e 01 00 00       	call   80487c8 <__cxa_allocate_exception>
 804866a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8048671:	00 
 8048672:	c7 44 24 04 98 8d 04 	movl   $0x8048d98,0x4(%esp)
 8048679:	08 
 804867a:	89 04 24             	mov    %eax,(%esp)
 804867d:	e8 7b 01 00 00       	call   80487fd <__cxa_throw>

08048682 <_Z18try_but_dont_catchv>:
}

void try_but_dont_catch() {
 8048682:	55                   	push   %ebp
 8048683:	89 e5                	mov    %esp,%ebp
 8048685:	53                   	push   %ebx
 8048686:	83 ec 24             	sub    $0x24,%esp
    try {
        printf("Running a try which will never throw.\n");
 8048689:	c7 04 24 a8 8c 04 08 	movl   $0x8048ca8,(%esp)
 8048690:	e8 7b fe ff ff       	call   8048510 <puts@plt>
    } catch(Fake_Exception&) {
        printf("Exception caught... with the wrong catch!\n");
    }

    try {
        raise();
 8048695:	e8 be ff ff ff       	call   8048658 <_Z5raisev>
    } catch(Fake_Exception&) {
        printf("Caught a Fake_Exception!\n");
    }

    printf("try_but_dont_catch handled the exception\n");
 804869a:	c7 04 24 d0 8c 04 08 	movl   $0x8048cd0,(%esp)
 80486a1:	e8 6a fe ff ff       	call   8048510 <puts@plt>
}
 80486a6:	83 c4 24             	add    $0x24,%esp
 80486a9:	5b                   	pop    %ebx
 80486aa:	5d                   	pop    %ebp
 80486ab:	c3                   	ret    
 80486ac:	89 c3                	mov    %eax,%ebx
}

void try_but_dont_catch() {
    try {
        printf("Running a try which will never throw.\n");
    } catch(Fake_Exception&) {
 80486ae:	e8 a7 01 00 00       	call   804885a <__cxa_end_catch>
 80486b3:	89 d8                	mov    %ebx,%eax
 80486b5:	89 04 24             	mov    %eax,(%esp)
 80486b8:	e8 b3 fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 80486bd:	83 fa 01             	cmp    $0x1,%edx
 80486c0:	74 08                	je     80486ca <_Z18try_but_dont_catchv+0x48>
 80486c2:	89 04 24             	mov    %eax,(%esp)
 80486c5:	e8 a6 fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 80486ca:	89 04 24             	mov    %eax,(%esp)
 80486cd:	e8 74 01 00 00       	call   8048846 <__cxa_begin_catch>
 80486d2:	89 45 f0             	mov    %eax,-0x10(%ebp)
        printf("Exception caught... with the wrong catch!\n");
 80486d5:	c7 04 24 fc 8c 04 08 	movl   $0x8048cfc,(%esp)
 80486dc:	e8 2f fe ff ff       	call   8048510 <puts@plt>
}

void try_but_dont_catch() {
    try {
        printf("Running a try which will never throw.\n");
    } catch(Fake_Exception&) {
 80486e1:	e8 74 01 00 00       	call   804885a <__cxa_end_catch>
 80486e6:	eb ad                	jmp    8048695 <_Z18try_but_dont_catchv+0x13>
 80486e8:	89 c3                	mov    %eax,%ebx
        printf("Exception caught... with the wrong catch!\n");
    }

    try {
        raise();
    } catch(Fake_Exception&) {
 80486ea:	e8 6b 01 00 00       	call   804885a <__cxa_end_catch>
 80486ef:	89 d8                	mov    %ebx,%eax
 80486f1:	89 04 24             	mov    %eax,(%esp)
 80486f4:	e8 77 fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 80486f9:	83 fa 01             	cmp    $0x1,%edx
 80486fc:	74 08                	je     8048706 <_Z18try_but_dont_catchv+0x84>
 80486fe:	89 04 24             	mov    %eax,(%esp)
 8048701:	e8 6a fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 8048706:	89 04 24             	mov    %eax,(%esp)
 8048709:	e8 38 01 00 00       	call   8048846 <__cxa_begin_catch>
 804870e:	89 45 f4             	mov    %eax,-0xc(%ebp)
        printf("Caught a Fake_Exception!\n");
 8048711:	c7 04 24 26 8d 04 08 	movl   $0x8048d26,(%esp)
 8048718:	e8 f3 fd ff ff       	call   8048510 <puts@plt>
        printf("Exception caught... with the wrong catch!\n");
    }

    try {
        raise();
    } catch(Fake_Exception&) {
 804871d:	e8 38 01 00 00       	call   804885a <__cxa_end_catch>
 8048722:	e9 73 ff ff ff       	jmp    804869a <_Z18try_but_dont_catchv+0x18>

08048727 <_Z7catchitv>:
    }

    printf("try_but_dont_catch handled the exception\n");
}

void catchit() {
 8048727:	55                   	push   %ebp
 8048728:	89 e5                	mov    %esp,%ebp
 804872a:	53                   	push   %ebx
 804872b:	83 ec 24             	sub    $0x24,%esp
    try {
        try_but_dont_catch();
 804872e:	e8 4f ff ff ff       	call   8048682 <_Z18try_but_dont_catchv>
        printf("Caught a Fake_Exception!\n");
    } catch(Exception&) {
        printf("Caught an Exception!\n");
    }

    printf("catchit handled the exception\n");
 8048733:	c7 04 24 3f 8d 04 08 	movl   $0x8048d3f,(%esp)
 804873a:	e8 d1 fd ff ff       	call   8048510 <puts@plt>
}
 804873f:	83 c4 24             	add    $0x24,%esp
 8048742:	5b                   	pop    %ebx
 8048743:	5d                   	pop    %ebp
 8048744:	c3                   	ret    
 8048745:	89 c3                	mov    %eax,%ebx
}

void catchit() {
    try {
        try_but_dont_catch();
    } catch(Fake_Exception&) {
 8048747:	e8 0e 01 00 00       	call   804885a <__cxa_end_catch>
 804874c:	89 d8                	mov    %ebx,%eax
 804874e:	89 04 24             	mov    %eax,(%esp)
 8048751:	e8 1a fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 8048756:	89 c3                	mov    %eax,%ebx
        printf("Caught a Fake_Exception!\n");
    } catch(Exception&) {
 8048758:	e8 fd 00 00 00       	call   804885a <__cxa_end_catch>
 804875d:	89 d8                	mov    %ebx,%eax
 804875f:	89 04 24             	mov    %eax,(%esp)
 8048762:	e8 09 fe ff ff       	call   8048570 <_Unwind_Resume@plt>
 8048767:	83 fa 01             	cmp    $0x1,%edx
 804876a:	74 0d                	je     8048779 <_Z7catchitv+0x52>
 804876c:	83 fa 02             	cmp    $0x2,%edx
 804876f:	74 26                	je     8048797 <_Z7catchitv+0x70>
 8048771:	89 04 24             	mov    %eax,(%esp)
 8048774:	e8 f7 fd ff ff       	call   8048570 <_Unwind_Resume@plt>
}

void catchit() {
    try {
        try_but_dont_catch();
    } catch(Fake_Exception&) {
 8048779:	89 04 24             	mov    %eax,(%esp)
 804877c:	e8 c5 00 00 00       	call   8048846 <__cxa_begin_catch>
 8048781:	89 45 f0             	mov    %eax,-0x10(%ebp)
        printf("Caught a Fake_Exception!\n");
 8048784:	c7 04 24 26 8d 04 08 	movl   $0x8048d26,(%esp)
 804878b:	e8 80 fd ff ff       	call   8048510 <puts@plt>
}

void catchit() {
    try {
        try_but_dont_catch();
    } catch(Fake_Exception&) {
 8048790:	e8 c5 00 00 00       	call   804885a <__cxa_end_catch>
 8048795:	eb 9c                	jmp    8048733 <_Z7catchitv+0xc>
        printf("Caught a Fake_Exception!\n");
    } catch(Exception&) {
 8048797:	89 04 24             	mov    %eax,(%esp)
 804879a:	e8 a7 00 00 00       	call   8048846 <__cxa_begin_catch>
 804879f:	89 45 f4             	mov    %eax,-0xc(%ebp)
        printf("Caught an Exception!\n");
 80487a2:	c7 04 24 5d 8d 04 08 	movl   $0x8048d5d,(%esp)
 80487a9:	e8 62 fd ff ff       	call   8048510 <puts@plt>
void catchit() {
    try {
        try_but_dont_catch();
    } catch(Fake_Exception&) {
        printf("Caught a Fake_Exception!\n");
    } catch(Exception&) {
 80487ae:	e8 a7 00 00 00       	call   804885a <__cxa_end_catch>
 80487b3:	e9 7b ff ff ff       	jmp    8048733 <_Z7catchitv+0xc>

080487b8 <seppuku>:

    printf("catchit handled the exception\n");
}

extern "C" {
    void seppuku() {
 80487b8:	55                   	push   %ebp
 80487b9:	89 e5                	mov    %esp,%ebp
 80487bb:	83 ec 08             	sub    $0x8,%esp
        catchit();
 80487be:	e8 64 ff ff ff       	call   8048727 <_Z7catchitv>
    }
 80487c3:	c9                   	leave  
 80487c4:	c3                   	ret    
 80487c5:	90                   	nop
 80487c6:	90                   	nop
 80487c7:	90                   	nop

080487c8 <__cxa_allocate_exception>:
char exception_buff[EXCEPTION_BUFF_SIZE];

extern "C" {

void* __cxa_allocate_exception(size_t thrown_size)
{
 80487c8:	55                   	push   %ebp
 80487c9:	89 e5                	mov    %esp,%ebp
 80487cb:	83 ec 18             	sub    $0x18,%esp
    printf("alloc ex %i\n", thrown_size);
 80487ce:	8b 45 08             	mov    0x8(%ebp),%eax
 80487d1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487d5:	c7 04 24 a0 8d 04 08 	movl   $0x8048da0,(%esp)
 80487dc:	e8 ef fc ff ff       	call   80484d0 <printf@plt>
    if (thrown_size > EXCEPTION_BUFF_SIZE) printf("Exception too big");
 80487e1:	81 7d 08 ff 00 00 00 	cmpl   $0xff,0x8(%ebp)
 80487e8:	76 0c                	jbe    80487f6 <__cxa_allocate_exception+0x2e>
 80487ea:	c7 04 24 ad 8d 04 08 	movl   $0x8048dad,(%esp)
 80487f1:	e8 da fc ff ff       	call   80484d0 <printf@plt>
    return &exception_buff;
 80487f6:	b8 80 b0 04 08       	mov    $0x804b080,%eax
}
 80487fb:	c9                   	leave  
 80487fc:	c3                   	ret    

080487fd <__cxa_throw>:
};

void __cxa_throw(void* thrown_exception,
                 std::type_info *tinfo,
                 void (*dest)(void*))
{
 80487fd:	55                   	push   %ebp
 80487fe:	89 e5                	mov    %esp,%ebp
 8048800:	83 ec 28             	sub    $0x28,%esp
    printf("__cxa_throw called\n");
 8048803:	c7 04 24 bf 8d 04 08 	movl   $0x8048dbf,(%esp)
 804880a:	e8 01 fd ff ff       	call   8048510 <puts@plt>

    __cxa_exception *header = ((__cxa_exception *) thrown_exception - 1);
 804880f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048812:	83 e8 50             	sub    $0x50,%eax
 8048815:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // We need to save the type info in the exception header _Unwind_ will
    // receive, otherwise we won't be able to know it when unwinding
    header->exceptionType = tinfo;
 8048818:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804881b:	8b 55 0c             	mov    0xc(%ebp),%edx
 804881e:	89 10                	mov    %edx,(%eax)

    _Unwind_RaiseException(&header->unwindHeader);
 8048820:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048823:	83 c0 30             	add    $0x30,%eax
 8048826:	89 04 24             	mov    %eax,(%esp)
 8048829:	e8 c2 fc ff ff       	call   80484f0 <_Unwind_RaiseException@plt>

    // __cxa_throw never returns
    printf("no one handled __cxa_throw, terminate!\n");
 804882e:	c7 04 24 d4 8d 04 08 	movl   $0x8048dd4,(%esp)
 8048835:	e8 d6 fc ff ff       	call   8048510 <puts@plt>
    exit(0);
 804883a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048841:	e8 ea fc ff ff       	call   8048530 <exit@plt>

08048846 <__cxa_begin_catch>:
}


void __cxa_begin_catch()
{
 8048846:	55                   	push   %ebp
 8048847:	89 e5                	mov    %esp,%ebp
 8048849:	83 ec 18             	sub    $0x18,%esp
    printf("begin FTW\n");
 804884c:	c7 04 24 fb 8d 04 08 	movl   $0x8048dfb,(%esp)
 8048853:	e8 b8 fc ff ff       	call   8048510 <puts@plt>
}
 8048858:	c9                   	leave  
 8048859:	c3                   	ret    

0804885a <__cxa_end_catch>:

void __cxa_end_catch()
{
 804885a:	55                   	push   %ebp
 804885b:	89 e5                	mov    %esp,%ebp
 804885d:	83 ec 18             	sub    $0x18,%esp
    printf("end FTW\n");
 8048860:	c7 04 24 05 8e 04 08 	movl   $0x8048e05,(%esp)
 8048867:	e8 a4 fc ff ff       	call   8048510 <puts@plt>
}
 804886c:	c9                   	leave  
 804886d:	c3                   	ret    

0804886e <__gxx_personality_v0>:
                             int version,
                             _Unwind_Action actions,
                             uint64_t exceptionClass,
                             _Unwind_Exception* unwind_exception,
                             _Unwind_Context* context)
{
 804886e:	55                   	push   %ebp
 804886f:	89 e5                	mov    %esp,%ebp
 8048871:	83 ec 78             	sub    $0x78,%esp
 8048874:	8b 45 10             	mov    0x10(%ebp),%eax
 8048877:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804887a:	8b 45 14             	mov    0x14(%ebp),%eax
 804887d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
    if (actions & _UA_SEARCH_PHASE)
 8048880:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048883:	83 e0 01             	and    $0x1,%eax
 8048886:	84 c0                	test   %al,%al
 8048888:	74 16                	je     80488a0 <__gxx_personality_v0+0x32>
    {
        printf("Personality function, lookup phase\n");
 804888a:	c7 04 24 10 8e 04 08 	movl   $0x8048e10,(%esp)
 8048891:	e8 7a fc ff ff       	call   8048510 <puts@plt>
        return _URC_HANDLER_FOUND;
 8048896:	b8 06 00 00 00       	mov    $0x6,%eax
 804889b:	e9 d3 01 00 00       	jmp    8048a73 <__gxx_personality_v0+0x205>
    } else if (actions & _UA_CLEANUP_PHASE) {
 80488a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488a3:	83 e0 02             	and    $0x2,%eax
 80488a6:	85 c0                	test   %eax,%eax
 80488a8:	0f 84 b4 01 00 00    	je     8048a62 <__gxx_personality_v0+0x1f4>
        printf("Personality function, cleanup\n");
 80488ae:	c7 04 24 33 8e 04 08 	movl   $0x8048e33,(%esp)
 80488b5:	e8 56 fc ff ff       	call   8048510 <puts@plt>

        // Calculate what the instruction pointer was just before the
        // exception was thrown for this stack frame
        uintptr_t throw_ip = _Unwind_GetIP(context) - 1;
 80488ba:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80488bd:	89 04 24             	mov    %eax,(%esp)
 80488c0:	e8 7b fc ff ff       	call   8048540 <_Unwind_GetIP@plt>
 80488c5:	83 e8 01             	sub    $0x1,%eax
 80488c8:	89 45 b4             	mov    %eax,-0x4c(%ebp)

        // Pointer to the beginning of the raw LSDA
        LSDA_ptr lsda = (uint8_t*)_Unwind_GetLanguageSpecificData(context);
 80488cb:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80488ce:	89 04 24             	mov    %eax,(%esp)
 80488d1:	e8 2a fc ff ff       	call   8048500 <_Unwind_GetLanguageSpecificData@plt>
 80488d6:	89 45 b0             	mov    %eax,-0x50(%ebp)

        // Read LSDA headerfor the LSDA
        LSDA_Header header(&lsda);
 80488d9:	8d 45 b0             	lea    -0x50(%ebp),%eax
 80488dc:	89 44 24 04          	mov    %eax,0x4(%esp)
 80488e0:	8d 45 f3             	lea    -0xd(%ebp),%eax
 80488e3:	89 04 24             	mov    %eax,(%esp)
 80488e6:	e8 01 02 00 00       	call   8048aec <_ZN11LSDA_HeaderC1EPPKh>

        // Get the start of the types table (it's actually the end of the
        // table, but since the action index will hold a negative index
        // for this table we can say it's the beginning
        const LSDA_ptr types_table_start = lsda + header.type_table_offset;
 80488eb:	8b 55 b0             	mov    -0x50(%ebp),%edx
 80488ee:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax
 80488f2:	0f b6 c0             	movzbl %al,%eax
 80488f5:	01 d0                	add    %edx,%eax
 80488f7:	89 45 b8             	mov    %eax,-0x48(%ebp)

        // Read the LSDA CS header
        LSDA_CS_Header cs_header(&lsda);
 80488fa:	8d 45 b0             	lea    -0x50(%ebp),%eax
 80488fd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048901:	8d 45 f6             	lea    -0xa(%ebp),%eax
 8048904:	89 04 24             	mov    %eax,(%esp)
 8048907:	e8 24 02 00 00       	call   8048b30 <_ZN14LSDA_CS_HeaderC1EPPKh>

        // Calculate where the end of the LSDA CS table is
        const LSDA_ptr lsda_cs_table_end = lsda + cs_header.length;
 804890c:	8b 55 b0             	mov    -0x50(%ebp),%edx
 804890f:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 8048913:	0f b6 c0             	movzbl %al,%eax
 8048916:	01 d0                	add    %edx,%eax
 8048918:	89 45 bc             	mov    %eax,-0x44(%ebp)

        // Get the start of action tables
        const LSDA_ptr action_tbl_start = lsda_cs_table_end;
 804891b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804891e:	89 45 c0             	mov    %eax,-0x40(%ebp)
        printf("%i\n", lsda_cs_table_end[1]);
        printf("%p\n", asd->name());
        */

        // Loop through each entry in the CS table
        while (lsda < lsda_cs_table_end)
 8048921:	e9 24 01 00 00       	jmp    8048a4a <__gxx_personality_v0+0x1dc>
        {
            LSDA_CS cs(&lsda);
 8048926:	8d 45 b0             	lea    -0x50(%ebp),%eax
 8048929:	89 44 24 04          	mov    %eax,0x4(%esp)
 804892d:	8d 45 ef             	lea    -0x11(%ebp),%eax
 8048930:	89 04 24             	mov    %eax,(%esp)
 8048933:	e8 2e 02 00 00       	call   8048b66 <_ZN7LSDA_CSC1EPPKh>

            // If there's no LP we can't handle this exception; move on
            if (not cs.lp) continue;
 8048938:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax
 804893c:	84 c0                	test   %al,%al
 804893e:	0f 84 ff 00 00 00    	je     8048a43 <__gxx_personality_v0+0x1d5>

            uintptr_t func_start = _Unwind_GetRegionStart(context);
 8048944:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048947:	89 04 24             	mov    %eax,(%esp)
 804894a:	e8 91 fb ff ff       	call   80484e0 <_Unwind_GetRegionStart@plt>
 804894f:	89 45 c4             	mov    %eax,-0x3c(%ebp)

            // Calculate the range of the instruction pointer valid for this
            // landing pad; if this LP can handle the current exception then
            // the IP for this stack frame must be in this range
            uintptr_t try_start = func_start + cs.start;
 8048952:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax
 8048956:	0f b6 c0             	movzbl %al,%eax
 8048959:	03 45 c4             	add    -0x3c(%ebp),%eax
 804895c:	89 45 c8             	mov    %eax,-0x38(%ebp)
            uintptr_t try_end = func_start + cs.start + cs.len;
 804895f:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax
 8048963:	0f b6 c0             	movzbl %al,%eax
 8048966:	89 c2                	mov    %eax,%edx
 8048968:	03 55 c4             	add    -0x3c(%ebp),%edx
 804896b:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
 804896f:	0f b6 c0             	movzbl %al,%eax
 8048972:	01 d0                	add    %edx,%eax
 8048974:	89 45 cc             	mov    %eax,-0x34(%ebp)

            // Check if this is the correct LP for the current try block
            if (throw_ip < try_start) continue;
 8048977:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804897a:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 804897d:	0f 82 c3 00 00 00    	jb     8048a46 <__gxx_personality_v0+0x1d8>
            if (throw_ip > try_end) continue;
 8048983:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8048986:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 8048989:	0f 87 ba 00 00 00    	ja     8048a49 <__gxx_personality_v0+0x1db>

            // Get the offset into the action table for this LP
            if (cs.action > 0)
 804898f:	0f b6 45 f2          	movzbl -0xe(%ebp),%eax
 8048993:	84 c0                	test   %al,%al
 8048995:	74 4b                	je     80489e2 <__gxx_personality_v0+0x174>
            {
                // cs.action is the offset + 1; that way cs.action == 0
                // means there is no associated entry in the action table
                const size_t action_offset = cs.action - 1;
 8048997:	0f b6 45 f2          	movzbl -0xe(%ebp),%eax
 804899b:	0f b6 c0             	movzbl %al,%eax
 804899e:	83 e8 01             	sub    $0x1,%eax
 80489a1:	89 45 d0             	mov    %eax,-0x30(%ebp)
                const LSDA_ptr action = action_tbl_start + action_offset;
 80489a4:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80489a7:	8b 55 c0             	mov    -0x40(%ebp),%edx
 80489aa:	01 d0                	add    %edx,%eax
 80489ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)

                // For a landing pad with a catch the action table will
                // hold an index to a list of types
                int type_index = action[0];
 80489af:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80489b2:	0f b6 00             	movzbl (%eax),%eax
 80489b5:	0f b6 c0             	movzbl %al,%eax
 80489b8:	89 45 d8             	mov    %eax,-0x28(%ebp)
                const void* catch_type = ((const void**)types_table_start) - type_index;
 80489bb:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80489be:	c1 e0 02             	shl    $0x2,%eax
 80489c1:	f7 d8                	neg    %eax
 80489c3:	03 45 b8             	add    -0x48(%ebp),%eax
 80489c6:	89 45 dc             	mov    %eax,-0x24(%ebp)

                const std::type_info *catch_ti = (const std::type_info *) catch_type;
 80489c9:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80489cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
            }
 80489cf:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80489d2:	89 04 24             	mov    %eax,(%esp)
 80489d5:	e8 ee 00 00 00       	call   8048ac8 <_ZNKSt9type_info4nameEv>
 80489da:	89 04 24             	mov    %eax,(%esp)
 80489dd:	e8 2e fb ff ff       	call   8048510 <puts@plt>

            // We found a landing pad for this exception; resume execution
            int r0 = __builtin_eh_return_data_regno(0);
            int r1 = __builtin_eh_return_data_regno(1);
 80489e2:	b8 00 00 00 00       	mov    $0x0,%eax
 80489e7:	89 45 e4             	mov    %eax,-0x1c(%ebp)

 80489ea:	b8 02 00 00 00       	mov    $0x2,%eax
 80489ef:	89 45 e8             	mov    %eax,-0x18(%ebp)
            _Unwind_SetGR(context, r0, (uintptr_t)(unwind_exception));
            _Unwind_SetGR(context, r1, (uintptr_t)(cs.action));
 80489f2:	8b 45 18             	mov    0x18(%ebp),%eax
 80489f5:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489f9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80489fc:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a00:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048a03:	89 04 24             	mov    %eax,(%esp)
 8048a06:	e8 55 fb ff ff       	call   8048560 <_Unwind_SetGR@plt>

 8048a0b:	0f b6 45 f2          	movzbl -0xe(%ebp),%eax
 8048a0f:	0f b6 c0             	movzbl %al,%eax
 8048a12:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a16:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048a19:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a1d:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048a20:	89 04 24             	mov    %eax,(%esp)
 8048a23:	e8 38 fb ff ff       	call   8048560 <_Unwind_SetGR@plt>
            _Unwind_SetIP(context, func_start + cs.lp);
            break;
 8048a28:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax
 8048a2c:	0f b6 c0             	movzbl %al,%eax
 8048a2f:	03 45 c4             	add    -0x3c(%ebp),%eax
 8048a32:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a36:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048a39:	89 04 24             	mov    %eax,(%esp)
 8048a3c:	e8 3f fb ff ff       	call   8048580 <_Unwind_SetIP@plt>
        }
 8048a41:	eb 18                	jmp    8048a5b <__gxx_personality_v0+0x1ed>
        while (lsda < lsda_cs_table_end)
        {
            LSDA_CS cs(&lsda);

            // If there's no LP we can't handle this exception; move on
            if (not cs.lp) continue;
 8048a43:	90                   	nop
 8048a44:	eb 04                	jmp    8048a4a <__gxx_personality_v0+0x1dc>
            // the IP for this stack frame must be in this range
            uintptr_t try_start = func_start + cs.start;
            uintptr_t try_end = func_start + cs.start + cs.len;

            // Check if this is the correct LP for the current try block
            if (throw_ip < try_start) continue;
 8048a46:	90                   	nop
 8048a47:	eb 01                	jmp    8048a4a <__gxx_personality_v0+0x1dc>
            if (throw_ip > try_end) continue;
 8048a49:	90                   	nop
        printf("%i\n", lsda_cs_table_end[1]);
        printf("%p\n", asd->name());
        */

        // Loop through each entry in the CS table
        while (lsda < lsda_cs_table_end)
 8048a4a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8048a4d:	3b 45 bc             	cmp    -0x44(%ebp),%eax
 8048a50:	0f 92 c0             	setb   %al
 8048a53:	84 c0                	test   %al,%al
 8048a55:	0f 85 cb fe ff ff    	jne    8048926 <__gxx_personality_v0+0xb8>
            _Unwind_SetIP(context, func_start + cs.lp);
            break;
        }

        return _URC_INSTALL_CONTEXT;
    } else {
 8048a5b:	b8 07 00 00 00       	mov    $0x7,%eax
 8048a60:	eb 11                	jmp    8048a73 <__gxx_personality_v0+0x205>
        printf("Personality function, error\n");
        return _URC_FATAL_PHASE1_ERROR;
 8048a62:	c7 04 24 51 8e 04 08 	movl   $0x8048e51,(%esp)
 8048a69:	e8 a2 fa ff ff       	call   8048510 <puts@plt>
    }
 8048a6e:	b8 03 00 00 00       	mov    $0x3,%eax
}

 8048a73:	c9                   	leave  
 8048a74:	c3                   	ret    

08048a75 <_Z41__static_initialization_and_destruction_0ii>:
}
 8048a75:	55                   	push   %ebp
 8048a76:	89 e5                	mov    %esp,%ebp
 8048a78:	83 ec 18             	sub    $0x18,%esp
 8048a7b:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8048a7f:	75 15                	jne    8048a96 <_Z41__static_initialization_and_destruction_0ii+0x21>
 8048a81:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 8048a88:	75 0c                	jne    8048a96 <_Z41__static_initialization_and_destruction_0ii+0x21>
#include <stdint.h>

namespace __cxxabiv1 {
    struct __class_type_info {
        virtual void foo() {}
    } ti;
 8048a8a:	c7 04 24 60 b0 04 08 	movl   $0x804b060,(%esp)
 8048a91:	e8 24 00 00 00       	call   8048aba <_ZN10__cxxabiv117__class_type_infoC1Ev>
        return _URC_FATAL_PHASE1_ERROR;
    }
}

}
 8048a96:	c9                   	leave  
 8048a97:	c3                   	ret    

08048a98 <_GLOBAL__sub_I__ZN10__cxxabiv12tiE>:
 8048a98:	55                   	push   %ebp
 8048a99:	89 e5                	mov    %esp,%ebp
 8048a9b:	83 ec 18             	sub    $0x18,%esp
 8048a9e:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 8048aa5:	00 
 8048aa6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048aad:	e8 c3 ff ff ff       	call   8048a75 <_Z41__static_initialization_and_destruction_0ii>
 8048ab2:	c9                   	leave  
 8048ab3:	c3                   	ret    

08048ab4 <_ZN10__cxxabiv117__class_type_info3fooEv>:
#include <stdlib.h>
#include <stdint.h>

namespace __cxxabiv1 {
    struct __class_type_info {
        virtual void foo() {}
 8048ab4:	55                   	push   %ebp
 8048ab5:	89 e5                	mov    %esp,%ebp
 8048ab7:	5d                   	pop    %ebp
 8048ab8:	c3                   	ret    
 8048ab9:	90                   	nop

08048aba <_ZN10__cxxabiv117__class_type_infoC1Ev>:
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

namespace __cxxabiv1 {
    struct __class_type_info {
 8048aba:	55                   	push   %ebp
 8048abb:	89 e5                	mov    %esp,%ebp
 8048abd:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ac0:	c7 00 78 8e 04 08    	movl   $0x8048e78,(%eax)
 8048ac6:	5d                   	pop    %ebp
 8048ac7:	c3                   	ret    

08048ac8 <_ZNKSt9type_info4nameEv>:
     *  the runtime-mandated type_info structures in the new-abi.  */
    virtual ~type_info();

    /** Returns an @e implementation-defined byte string; this is not
     *  portable between compilers!  */
    const char* name() const
 8048ac8:	55                   	push   %ebp
 8048ac9:	89 e5                	mov    %esp,%ebp
    { return __name[0] == '*' ? __name + 1 : __name; }
 8048acb:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ace:	8b 40 04             	mov    0x4(%eax),%eax
 8048ad1:	0f b6 00             	movzbl (%eax),%eax
 8048ad4:	3c 2a                	cmp    $0x2a,%al
 8048ad6:	75 0b                	jne    8048ae3 <_ZNKSt9type_info4nameEv+0x1b>
 8048ad8:	8b 45 08             	mov    0x8(%ebp),%eax
 8048adb:	8b 40 04             	mov    0x4(%eax),%eax
 8048ade:	83 c0 01             	add    $0x1,%eax
 8048ae1:	eb 06                	jmp    8048ae9 <_ZNKSt9type_info4nameEv+0x21>
 8048ae3:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ae6:	8b 40 04             	mov    0x4(%eax),%eax
 8048ae9:	5d                   	pop    %ebp
 8048aea:	c3                   	ret    
 8048aeb:	90                   	nop

08048aec <_ZN11LSDA_HeaderC1EPPKh>:
struct LSDA_Header {
    /**
     * Read the LSDA table into a struct; advances the lsda pointer
     * as many bytes as read
     */
    LSDA_Header(LSDA_ptr *lsda) {
 8048aec:	55                   	push   %ebp
 8048aed:	89 e5                	mov    %esp,%ebp
 8048aef:	83 ec 10             	sub    $0x10,%esp
        LSDA_ptr read_ptr = *lsda;
 8048af2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048af5:	8b 00                	mov    (%eax),%eax
 8048af7:	89 45 fc             	mov    %eax,-0x4(%ebp)

        // Copy the LSDA fields
        start_encoding = read_ptr[0];
 8048afa:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048afd:	0f b6 10             	movzbl (%eax),%edx
 8048b00:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b03:	88 10                	mov    %dl,(%eax)
        type_encoding = read_ptr[1];
 8048b05:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b08:	83 c0 01             	add    $0x1,%eax
 8048b0b:	0f b6 10             	movzbl (%eax),%edx
 8048b0e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b11:	88 50 01             	mov    %dl,0x1(%eax)
        type_table_offset = read_ptr[2];
 8048b14:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b17:	83 c0 02             	add    $0x2,%eax
 8048b1a:	0f b6 10             	movzbl (%eax),%edx
 8048b1d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b20:	88 50 02             	mov    %dl,0x2(%eax)

        // Advance the lsda pointer
        *lsda = read_ptr + sizeof(LSDA_Header);
 8048b23:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b26:	8d 50 03             	lea    0x3(%eax),%edx
 8048b29:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b2c:	89 10                	mov    %edx,(%eax)
    }
 8048b2e:	c9                   	leave  
 8048b2f:	c3                   	ret    

08048b30 <_ZN14LSDA_CS_HeaderC1EPPKh>:
    uint8_t type_table_offset;
};

struct LSDA_CS_Header {
    // Same as other LSDA constructors
    LSDA_CS_Header(LSDA_ptr *lsda) {
 8048b30:	55                   	push   %ebp
 8048b31:	89 e5                	mov    %esp,%ebp
 8048b33:	83 ec 10             	sub    $0x10,%esp
        LSDA_ptr read_ptr = *lsda;
 8048b36:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b39:	8b 00                	mov    (%eax),%eax
 8048b3b:	89 45 fc             	mov    %eax,-0x4(%ebp)
        encoding = read_ptr[0];
 8048b3e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b41:	0f b6 10             	movzbl (%eax),%edx
 8048b44:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b47:	88 10                	mov    %dl,(%eax)
        length = read_ptr[1];
 8048b49:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b4c:	83 c0 01             	add    $0x1,%eax
 8048b4f:	0f b6 10             	movzbl (%eax),%edx
 8048b52:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b55:	88 50 01             	mov    %dl,0x1(%eax)
        *lsda = read_ptr + sizeof(LSDA_CS_Header);
 8048b58:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b5b:	8d 50 02             	lea    0x2(%eax),%edx
 8048b5e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b61:	89 10                	mov    %edx,(%eax)
    }
 8048b63:	c9                   	leave  
 8048b64:	c3                   	ret    
 8048b65:	90                   	nop

08048b66 <_ZN7LSDA_CSC1EPPKh>:
    uint8_t length;
};

struct LSDA_CS {
    // Same as other LSDA constructors
    LSDA_CS(LSDA_ptr *lsda) {
 8048b66:	55                   	push   %ebp
 8048b67:	89 e5                	mov    %esp,%ebp
 8048b69:	83 ec 10             	sub    $0x10,%esp
        LSDA_ptr read_ptr = *lsda;
 8048b6c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b6f:	8b 00                	mov    (%eax),%eax
 8048b71:	89 45 fc             	mov    %eax,-0x4(%ebp)
        start = read_ptr[0];
 8048b74:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b77:	0f b6 10             	movzbl (%eax),%edx
 8048b7a:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b7d:	88 10                	mov    %dl,(%eax)
        len = read_ptr[1];
 8048b7f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b82:	83 c0 01             	add    $0x1,%eax
 8048b85:	0f b6 10             	movzbl (%eax),%edx
 8048b88:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b8b:	88 50 01             	mov    %dl,0x1(%eax)
        lp = read_ptr[2];
 8048b8e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048b91:	83 c0 02             	add    $0x2,%eax
 8048b94:	0f b6 10             	movzbl (%eax),%edx
 8048b97:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b9a:	88 50 02             	mov    %dl,0x2(%eax)
        action = read_ptr[3];
 8048b9d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048ba0:	83 c0 03             	add    $0x3,%eax
 8048ba3:	0f b6 10             	movzbl (%eax),%edx
 8048ba6:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ba9:	88 50 03             	mov    %dl,0x3(%eax)
        *lsda = read_ptr + sizeof(LSDA_CS);
 8048bac:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048baf:	8d 50 04             	lea    0x4(%eax),%edx
 8048bb2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048bb5:	89 10                	mov    %edx,(%eax)
    }
 8048bb7:	c9                   	leave  
 8048bb8:	c3                   	ret    
 8048bb9:	90                   	nop
 8048bba:	90                   	nop
 8048bbb:	90                   	nop
 8048bbc:	90                   	nop
 8048bbd:	90                   	nop
 8048bbe:	90                   	nop
 8048bbf:	90                   	nop

08048bc0 <__libc_csu_init>:
 8048bc0:	55                   	push   %ebp
 8048bc1:	57                   	push   %edi
 8048bc2:	56                   	push   %esi
 8048bc3:	53                   	push   %ebx
 8048bc4:	e8 69 00 00 00       	call   8048c32 <__i686.get_pc_thunk.bx>
 8048bc9:	81 c3 2b 24 00 00    	add    $0x242b,%ebx
 8048bcf:	83 ec 1c             	sub    $0x1c,%esp
 8048bd2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048bd6:	8d bb 08 ff ff ff    	lea    -0xf8(%ebx),%edi
 8048bdc:	e8 ab f8 ff ff       	call   804848c <_init>
 8048be1:	8d 83 04 ff ff ff    	lea    -0xfc(%ebx),%eax
 8048be7:	29 c7                	sub    %eax,%edi
 8048be9:	c1 ff 02             	sar    $0x2,%edi
 8048bec:	85 ff                	test   %edi,%edi
 8048bee:	74 29                	je     8048c19 <__libc_csu_init+0x59>
 8048bf0:	31 f6                	xor    %esi,%esi
 8048bf2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048bf8:	8b 44 24 38          	mov    0x38(%esp),%eax
 8048bfc:	89 2c 24             	mov    %ebp,(%esp)
 8048bff:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048c03:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048c07:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048c0b:	ff 94 b3 04 ff ff ff 	call   *-0xfc(%ebx,%esi,4)
 8048c12:	83 c6 01             	add    $0x1,%esi
 8048c15:	39 fe                	cmp    %edi,%esi
 8048c17:	75 df                	jne    8048bf8 <__libc_csu_init+0x38>
 8048c19:	83 c4 1c             	add    $0x1c,%esp
 8048c1c:	5b                   	pop    %ebx
 8048c1d:	5e                   	pop    %esi
 8048c1e:	5f                   	pop    %edi
 8048c1f:	5d                   	pop    %ebp
 8048c20:	c3                   	ret    
 8048c21:	eb 0d                	jmp    8048c30 <__libc_csu_fini>
 8048c23:	90                   	nop
 8048c24:	90                   	nop
 8048c25:	90                   	nop
 8048c26:	90                   	nop
 8048c27:	90                   	nop
 8048c28:	90                   	nop
 8048c29:	90                   	nop
 8048c2a:	90                   	nop
 8048c2b:	90                   	nop
 8048c2c:	90                   	nop
 8048c2d:	90                   	nop
 8048c2e:	90                   	nop
 8048c2f:	90                   	nop

08048c30 <__libc_csu_fini>:
 8048c30:	f3 c3                	repz ret 

08048c32 <__i686.get_pc_thunk.bx>:
 8048c32:	8b 1c 24             	mov    (%esp),%ebx
 8048c35:	c3                   	ret    
 8048c36:	90                   	nop
 8048c37:	90                   	nop
 8048c38:	90                   	nop
 8048c39:	90                   	nop
 8048c3a:	90                   	nop
 8048c3b:	90                   	nop
 8048c3c:	90                   	nop
 8048c3d:	90                   	nop
 8048c3e:	90                   	nop
 8048c3f:	90                   	nop

08048c40 <__do_global_ctors_aux>:
 8048c40:	55                   	push   %ebp
 8048c41:	89 e5                	mov    %esp,%ebp
 8048c43:	53                   	push   %ebx
 8048c44:	83 ec 04             	sub    $0x4,%esp
 8048c47:	a1 fc ae 04 08       	mov    0x804aefc,%eax
 8048c4c:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048c4f:	74 13                	je     8048c64 <__do_global_ctors_aux+0x24>
 8048c51:	bb fc ae 04 08       	mov    $0x804aefc,%ebx
 8048c56:	66 90                	xchg   %ax,%ax
 8048c58:	83 eb 04             	sub    $0x4,%ebx
 8048c5b:	ff d0                	call   *%eax
 8048c5d:	8b 03                	mov    (%ebx),%eax
 8048c5f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048c62:	75 f4                	jne    8048c58 <__do_global_ctors_aux+0x18>
 8048c64:	83 c4 04             	add    $0x4,%esp
 8048c67:	5b                   	pop    %ebx
 8048c68:	5d                   	pop    %ebp
 8048c69:	c3                   	ret    
 8048c6a:	90                   	nop
 8048c6b:	90                   	nop

Disassembly of section .fini:

08048c6c <_fini>:
 8048c6c:	53                   	push   %ebx
 8048c6d:	83 ec 08             	sub    $0x8,%esp
 8048c70:	e8 00 00 00 00       	call   8048c75 <_fini+0x9>
 8048c75:	5b                   	pop    %ebx
 8048c76:	81 c3 7f 23 00 00    	add    $0x237f,%ebx
 8048c7c:	e8 3f f9 ff ff       	call   80485c0 <__do_global_dtors_aux>
 8048c81:	83 c4 08             	add    $0x8,%esp
 8048c84:	5b                   	pop    %ebx
 8048c85:	c3                   	ret    

Disassembly of section .rodata:

08048ca0 <_fp_hw>:
 8048ca0:	03 00                	add    (%eax),%eax
	...

08048ca4 <_IO_stdin_used>:
 8048ca4:	01 00                	add    %eax,(%eax)
 8048ca6:	02 00                	add    (%eax),%al
 8048ca8:	52                   	push   %edx
 8048ca9:	75 6e                	jne    8048d19 <_IO_stdin_used+0x75>
 8048cab:	6e                   	outsb  %ds:(%esi),(%dx)
 8048cac:	69 6e 67 20 61 20 74 	imul   $0x74206120,0x67(%esi),%ebp
 8048cb3:	72 79                	jb     8048d2e <_IO_stdin_used+0x8a>
 8048cb5:	20 77 68             	and    %dh,0x68(%edi)
 8048cb8:	69 63 68 20 77 69 6c 	imul   $0x6c697720,0x68(%ebx),%esp
 8048cbf:	6c                   	insb   (%dx),%es:(%edi)
 8048cc0:	20 6e 65             	and    %ch,0x65(%esi)
 8048cc3:	76 65                	jbe    8048d2a <_IO_stdin_used+0x86>
 8048cc5:	72 20                	jb     8048ce7 <_IO_stdin_used+0x43>
 8048cc7:	74 68                	je     8048d31 <_IO_stdin_used+0x8d>
 8048cc9:	72 6f                	jb     8048d3a <_IO_stdin_used+0x96>
 8048ccb:	77 2e                	ja     8048cfb <_IO_stdin_used+0x57>
 8048ccd:	00 00                	add    %al,(%eax)
 8048ccf:	00 74 72 79          	add    %dh,0x79(%edx,%esi,2)
 8048cd3:	5f                   	pop    %edi
 8048cd4:	62 75 74             	bound  %esi,0x74(%ebp)
 8048cd7:	5f                   	pop    %edi
 8048cd8:	64 6f                	outsl  %fs:(%esi),(%dx)
 8048cda:	6e                   	outsb  %ds:(%esi),(%dx)
 8048cdb:	74 5f                	je     8048d3c <_IO_stdin_used+0x98>
 8048cdd:	63 61 74             	arpl   %sp,0x74(%ecx)
 8048ce0:	63 68 20             	arpl   %bp,0x20(%eax)
 8048ce3:	68 61 6e 64 6c       	push   $0x6c646e61
 8048ce8:	65 64 20 74 68 65    	gs and %dh,%fs:%gs:0x65(%eax,%ebp,2)
 8048cee:	20 65 78             	and    %ah,0x78(%ebp)
 8048cf1:	63 65 70             	arpl   %sp,0x70(%ebp)
 8048cf4:	74 69                	je     8048d5f <_IO_stdin_used+0xbb>
 8048cf6:	6f                   	outsl  %ds:(%esi),(%dx)
 8048cf7:	6e                   	outsb  %ds:(%esi),(%dx)
 8048cf8:	00 00                	add    %al,(%eax)
 8048cfa:	00 00                	add    %al,(%eax)
 8048cfc:	45                   	inc    %ebp
 8048cfd:	78 63                	js     8048d62 <_IO_stdin_used+0xbe>
 8048cff:	65                   	gs
 8048d00:	70 74                	jo     8048d76 <_ZTS14Fake_Exception+0x4>
 8048d02:	69 6f 6e 20 63 61 75 	imul   $0x75616320,0x6e(%edi),%ebp
 8048d09:	67 68 74 2e 2e 2e    	addr16 push $0x2e2e2e74
 8048d0f:	20 77 69             	and    %dh,0x69(%edi)
 8048d12:	74 68                	je     8048d7c <_ZTS14Fake_Exception+0xa>
 8048d14:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 8048d18:	20 77 72             	and    %dh,0x72(%edi)
 8048d1b:	6f                   	outsl  %ds:(%esi),(%dx)
 8048d1c:	6e                   	outsb  %ds:(%esi),(%dx)
 8048d1d:	67 20 63 61          	and    %ah,0x61(%bp,%di)
 8048d21:	74 63                	je     8048d86 <_ZTI14Fake_Exception+0x2>
 8048d23:	68 21 00 43 61       	push   $0x61430021
 8048d28:	75 67                	jne    8048d91 <_ZTS9Exception+0x5>
 8048d2a:	68 74 20 61 20       	push   $0x20612074
 8048d2f:	46                   	inc    %esi
 8048d30:	61                   	popa   
 8048d31:	6b 65 5f 45          	imul   $0x45,0x5f(%ebp),%esp
 8048d35:	78 63                	js     8048d9a <_ZTI9Exception+0x2>
 8048d37:	65                   	gs
 8048d38:	70 74                	jo     8048dae <_ZTI9Exception+0x16>
 8048d3a:	69 6f 6e 21 00 63 61 	imul   $0x61630021,0x6e(%edi),%ebp
 8048d41:	74 63                	je     8048da6 <_ZTI9Exception+0xe>
 8048d43:	68 69 74 20 68       	push   $0x68207469
 8048d48:	61                   	popa   
 8048d49:	6e                   	outsb  %ds:(%esi),(%dx)
 8048d4a:	64                   	fs
 8048d4b:	6c                   	insb   (%dx),%es:(%edi)
 8048d4c:	65 64 20 74 68 65    	gs and %dh,%fs:%gs:0x65(%eax,%ebp,2)
 8048d52:	20 65 78             	and    %ah,0x78(%ebp)
 8048d55:	63 65 70             	arpl   %sp,0x70(%ebp)
 8048d58:	74 69                	je     8048dc3 <_ZTI9Exception+0x2b>
 8048d5a:	6f                   	outsl  %ds:(%esi),(%dx)
 8048d5b:	6e                   	outsb  %ds:(%esi),(%dx)
 8048d5c:	00 43 61             	add    %al,0x61(%ebx)
 8048d5f:	75 67                	jne    8048dc8 <_ZTI9Exception+0x30>
 8048d61:	68 74 20 61 6e       	push   $0x6e612074
 8048d66:	20 45 78             	and    %al,0x78(%ebp)
 8048d69:	63 65 70             	arpl   %sp,0x70(%ebp)
 8048d6c:	74 69                	je     8048dd7 <_ZTI9Exception+0x3f>
 8048d6e:	6f                   	outsl  %ds:(%esi),(%dx)
 8048d6f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048d70:	21 00                	and    %eax,(%eax)

08048d72 <_ZTS14Fake_Exception>:
 8048d72:	31 34 46             	xor    %esi,(%esi,%eax,2)
 8048d75:	61                   	popa   
 8048d76:	6b 65 5f 45          	imul   $0x45,0x5f(%ebp),%esp
 8048d7a:	78 63                	js     8048ddf <_ZTI9Exception+0x47>
 8048d7c:	65                   	gs
 8048d7d:	70 74                	jo     8048df3 <_ZTI9Exception+0x5b>
 8048d7f:	69 6f 6e 00 00 78 8e 	imul   $0x8e780000,0x6e(%edi),%ebp

08048d84 <_ZTI14Fake_Exception>:
 8048d84:	78 8e                	js     8048d14 <_IO_stdin_used+0x70>
 8048d86:	04 08                	add    $0x8,%al
 8048d88:	72 8d                	jb     8048d17 <_IO_stdin_used+0x73>
 8048d8a:	04 08                	add    $0x8,%al

08048d8c <_ZTS9Exception>:
 8048d8c:	39 45 78             	cmp    %eax,0x78(%ebp)
 8048d8f:	63 65 70             	arpl   %sp,0x70(%ebp)
 8048d92:	74 69                	je     8048dfd <_ZTI9Exception+0x65>
 8048d94:	6f                   	outsl  %ds:(%esi),(%dx)
 8048d95:	6e                   	outsb  %ds:(%esi),(%dx)
	...

08048d98 <_ZTI9Exception>:
 8048d98:	78 8e                	js     8048d28 <_IO_stdin_used+0x84>
 8048d9a:	04 08                	add    $0x8,%al
 8048d9c:	8c 8d 04 08 61 6c    	mov    %cs,0x6c610804(%ebp)
 8048da2:	6c                   	insb   (%dx),%es:(%edi)
 8048da3:	6f                   	outsl  %ds:(%esi),(%dx)
 8048da4:	63 20                	arpl   %sp,(%eax)
 8048da6:	65                   	gs
 8048da7:	78 20                	js     8048dc9 <_ZTI9Exception+0x31>
 8048da9:	25 69 0a 00 45       	and    $0x45000a69,%eax
 8048dae:	78 63                	js     8048e13 <_ZTI9Exception+0x7b>
 8048db0:	65                   	gs
 8048db1:	70 74                	jo     8048e27 <_ZTI9Exception+0x8f>
 8048db3:	69 6f 6e 20 74 6f 6f 	imul   $0x6f6f7420,0x6e(%edi),%ebp
 8048dba:	20 62 69             	and    %ah,0x69(%edx)
 8048dbd:	67 00 5f 5f          	add    %bl,0x5f(%bx)
 8048dc1:	63 78 61             	arpl   %di,0x61(%eax)
 8048dc4:	5f                   	pop    %edi
 8048dc5:	74 68                	je     8048e2f <_ZTI9Exception+0x97>
 8048dc7:	72 6f                	jb     8048e38 <_ZTI9Exception+0xa0>
 8048dc9:	77 20                	ja     8048deb <_ZTI9Exception+0x53>
 8048dcb:	63 61 6c             	arpl   %sp,0x6c(%ecx)
 8048dce:	6c                   	insb   (%dx),%es:(%edi)
 8048dcf:	65 64 00 00          	gs add %al,%fs:%gs:(%eax)
 8048dd3:	00 6e 6f             	add    %ch,0x6f(%esi)
 8048dd6:	20 6f 6e             	and    %ch,0x6e(%edi)
 8048dd9:	65 20 68 61          	and    %ch,%gs:0x61(%eax)
 8048ddd:	6e                   	outsb  %ds:(%esi),(%dx)
 8048dde:	64                   	fs
 8048ddf:	6c                   	insb   (%dx),%es:(%edi)
 8048de0:	65 64 20 5f 5f       	gs and %bl,%fs:%gs:0x5f(%edi)
 8048de5:	63 78 61             	arpl   %di,0x61(%eax)
 8048de8:	5f                   	pop    %edi
 8048de9:	74 68                	je     8048e53 <_ZTI9Exception+0xbb>
 8048deb:	72 6f                	jb     8048e5c <_ZTI9Exception+0xc4>
 8048ded:	77 2c                	ja     8048e1b <_ZTI9Exception+0x83>
 8048def:	20 74 65 72          	and    %dh,0x72(%ebp,%eiz,2)
 8048df3:	6d                   	insl   (%dx),%es:(%edi)
 8048df4:	69 6e 61 74 65 21 00 	imul   $0x216574,0x61(%esi),%ebp
 8048dfb:	62 65 67             	bound  %esp,0x67(%ebp)
 8048dfe:	69 6e 20 46 54 57 00 	imul   $0x575446,0x20(%esi),%ebp
 8048e05:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048e07:	64 20 46 54          	and    %al,%fs:0x54(%esi)
 8048e0b:	57                   	push   %edi
 8048e0c:	00 00                	add    %al,(%eax)
 8048e0e:	00 00                	add    %al,(%eax)
 8048e10:	50                   	push   %eax
 8048e11:	65                   	gs
 8048e12:	72 73                	jb     8048e87 <_ZTSN10__cxxabiv117__class_type_infoE+0x7>
 8048e14:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e15:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e16:	61                   	popa   
 8048e17:	6c                   	insb   (%dx),%es:(%edi)
 8048e18:	69 74 79 20 66 75 6e 	imul   $0x636e7566,0x20(%ecx,%edi,2),%esi
 8048e1f:	63 
 8048e20:	74 69                	je     8048e8b <_ZTSN10__cxxabiv117__class_type_infoE+0xb>
 8048e22:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e23:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e24:	2c 20                	sub    $0x20,%al
 8048e26:	6c                   	insb   (%dx),%es:(%edi)
 8048e27:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e28:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e29:	6b 75 70 20          	imul   $0x20,0x70(%ebp),%esi
 8048e2d:	70 68                	jo     8048e97 <_ZTSN10__cxxabiv117__class_type_infoE+0x17>
 8048e2f:	61                   	popa   
 8048e30:	73 65                	jae    8048e97 <_ZTSN10__cxxabiv117__class_type_infoE+0x17>
 8048e32:	00 50 65             	add    %dl,0x65(%eax)
 8048e35:	72 73                	jb     8048eaa <_ZTIN10__cxxabiv117__class_type_infoE+0x6>
 8048e37:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e38:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e39:	61                   	popa   
 8048e3a:	6c                   	insb   (%dx),%es:(%edi)
 8048e3b:	69 74 79 20 66 75 6e 	imul   $0x636e7566,0x20(%ecx,%edi,2),%esi
 8048e42:	63 
 8048e43:	74 69                	je     8048eae <_ZTIN10__cxxabiv117__class_type_infoE+0xa>
 8048e45:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e46:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e47:	2c 20                	sub    $0x20,%al
 8048e49:	63 6c 65 61          	arpl   %bp,0x61(%ebp,%eiz,2)
 8048e4d:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e4e:	75 70                	jne    8048ec0 <_ZTIN10__cxxabiv117__class_type_infoE+0x1c>
 8048e50:	00 50 65             	add    %dl,0x65(%eax)
 8048e53:	72 73                	jb     8048ec8 <_ZTIN10__cxxabiv117__class_type_infoE+0x24>
 8048e55:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e56:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e57:	61                   	popa   
 8048e58:	6c                   	insb   (%dx),%es:(%edi)
 8048e59:	69 74 79 20 66 75 6e 	imul   $0x636e7566,0x20(%ecx,%edi,2),%esi
 8048e60:	63 
 8048e61:	74 69                	je     8048ecc <_ZTIN10__cxxabiv117__class_type_infoE+0x28>
 8048e63:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e64:	6e                   	outsb  %ds:(%esi),(%dx)
 8048e65:	2c 20                	sub    $0x20,%al
 8048e67:	65                   	gs
 8048e68:	72 72                	jb     8048edc <_ZTIN10__cxxabiv117__class_type_infoE+0x38>
 8048e6a:	6f                   	outsl  %ds:(%esi),(%dx)
 8048e6b:	72 00                	jb     8048e6d <_ZTI9Exception+0xd5>
 8048e6d:	00 00                	add    %al,(%eax)
	...

08048e70 <_ZTVN10__cxxabiv117__class_type_infoE>:
 8048e70:	00 00                	add    %al,(%eax)
 8048e72:	00 00                	add    %al,(%eax)
 8048e74:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8048e75:	8e 04 08             	mov    (%eax,%ecx,1),%es
 8048e78:	b4 8a                	mov    $0x8a,%ah
 8048e7a:	04 08                	add    $0x8,%al
 8048e7c:	00 00                	add    %al,(%eax)
	...

08048e80 <_ZTSN10__cxxabiv117__class_type_infoE>:
 8048e80:	4e                   	dec    %esi
 8048e81:	31 30                	xor    %esi,(%eax)
 8048e83:	5f                   	pop    %edi
 8048e84:	5f                   	pop    %edi
 8048e85:	63 78 78             	arpl   %di,0x78(%eax)
 8048e88:	61                   	popa   
 8048e89:	62 69 76             	bound  %ebp,0x76(%ecx)
 8048e8c:	31 31                	xor    %esi,(%ecx)
 8048e8e:	37                   	aaa    
 8048e8f:	5f                   	pop    %edi
 8048e90:	5f                   	pop    %edi
 8048e91:	63 6c 61 73          	arpl   %bp,0x73(%ecx,%eiz,2)
 8048e95:	73 5f                	jae    8048ef6 <_ZTIN10__cxxabiv117__class_type_infoE+0x52>
 8048e97:	74 79                	je     8048f12 <_ZTIN10__cxxabiv117__class_type_infoE+0x6e>
 8048e99:	70 65                	jo     8048f00 <_ZTIN10__cxxabiv117__class_type_infoE+0x5c>
 8048e9b:	5f                   	pop    %edi
 8048e9c:	69 6e 66 6f 45 00 00 	imul   $0x456f,0x66(%esi),%ebp
	...

08048ea4 <_ZTIN10__cxxabiv117__class_type_infoE>:
 8048ea4:	78 8e                	js     8048e34 <_ZTI9Exception+0x9c>
 8048ea6:	04 08                	add    $0x8,%al
 8048ea8:	80                   	.byte 0x80
 8048ea9:	8e 04 08             	mov    (%eax,%ecx,1),%es

Disassembly of section .eh_frame_hdr:

08048eac <.eh_frame_hdr>:
 8048eac:	01 1b                	add    %ebx,(%ebx)
 8048eae:	03 3b                	add    (%ebx),%edi
 8048eb0:	b8 00 00 00 16       	mov    $0x16000000,%eax
 8048eb5:	00 00                	add    %al,(%eax)
 8048eb7:	00 14 f6             	add    %dl,(%esi,%esi,8)
 8048eba:	ff                   	(bad)  
 8048ebb:	ff d4                	call   *%esp
 8048ebd:	00 00                	add    %al,(%eax)
 8048ebf:	00 98 f7 ff ff f8    	add    %bl,-0x7000009(%eax)
 8048ec5:	00 00                	add    %al,(%eax)
 8048ec7:	00 ac f7 ff ff 18 01 	add    %ch,0x118ffff(%edi,%esi,8)
 8048ece:	00 00                	add    %al,(%eax)
 8048ed0:	d6                   	(bad)  
 8048ed1:	f7 ff                	idiv   %edi
 8048ed3:	ff 54 01 00          	call   *0x0(%ecx,%eax,1)
 8048ed7:	00 7b f8             	add    %bh,-0x8(%ebx)
 8048eda:	ff                   	(bad)  
 8048edb:	ff 84 01 00 00 0c f9 	incl   -0x6f40000(%ecx,%eax,1)
 8048ee2:	ff                   	(bad)  
 8048ee3:	ff b4 01 00 00 1c f9 	pushl  -0x6e40000(%ecx,%eax,1)
 8048eea:	ff                   	(bad)  
 8048eeb:	ff 14 02             	call   *(%edx,%eax,1)
 8048eee:	00 00                	add    %al,(%eax)
 8048ef0:	51                   	push   %ecx
 8048ef1:	f9                   	stc    
 8048ef2:	ff                   	(bad)  
 8048ef3:	ff 54 02 00          	call   *0x0(%edx,%eax,1)
 8048ef7:	00 9a f9 ff ff 70    	add    %bl,0x70fffff9(%edx)
 8048efd:	02 00                	add    (%eax),%al
 8048eff:	00 ae f9 ff ff 90    	add    %ch,-0x6f000007(%esi)
 8048f05:	02 00                	add    (%eax),%al
 8048f07:	00 c2                	add    %al,%dl
 8048f09:	f9                   	stc    
 8048f0a:	ff                   	(bad)  
 8048f0b:	ff 10                	call   *(%eax)
 8048f0d:	03 00                	add    (%eax),%eax
 8048f0f:	00 c9                	add    %cl,%cl
 8048f11:	fb                   	sti    
 8048f12:	ff                   	(bad)  
 8048f13:	ff 30                	pushl  (%eax)
 8048f15:	03 00                	add    (%eax),%eax
 8048f17:	00 ec                	add    %ch,%ah
 8048f19:	fb                   	sti    
 8048f1a:	ff                   	(bad)  
 8048f1b:	ff 50 03             	call   *0x3(%eax)
 8048f1e:	00 00                	add    %al,(%eax)
 8048f20:	08 fc                	or     %bh,%ah
 8048f22:	ff                   	(bad)  
 8048f23:	ff d4                	call   *%esp
 8048f25:	01 00                	add    %eax,(%eax)
 8048f27:	00 0e                	add    %cl,(%esi)
 8048f29:	fc                   	cld    
 8048f2a:	ff                   	(bad)  
 8048f2b:	ff f4                	push   %esp
 8048f2d:	01 00                	add    %eax,(%eax)
 8048f2f:	00 1c fc             	add    %bl,(%esp,%edi,8)
 8048f32:	ff                   	(bad)  
 8048f33:	ff 34 02             	pushl  (%edx,%eax,1)
 8048f36:	00 00                	add    %al,(%eax)
 8048f38:	40                   	inc    %eax
 8048f39:	fc                   	cld    
 8048f3a:	ff                   	(bad)  
 8048f3b:	ff b0 02 00 00 84    	pushl  -0x7bfffffe(%eax)
 8048f41:	fc                   	cld    
 8048f42:	ff                   	(bad)  
 8048f43:	ff d0                	call   *%eax
 8048f45:	02 00                	add    (%eax),%al
 8048f47:	00 ba fc ff ff f0    	add    %bh,-0xf000004(%edx)
 8048f4d:	02 00                	add    (%eax),%al
 8048f4f:	00 14 fd ff ff 70 03 	add    %dl,0x370ffff(,%edi,8)
 8048f56:	00 00                	add    %al,(%eax)
 8048f58:	84 fd                	test   %bh,%ch
 8048f5a:	ff                   	(bad)  
 8048f5b:	ff ac 03 00 00 86 fd 	ljmp   *-0x27a0000(%ebx,%eax,1)
 8048f62:	ff                   	(bad)  
 8048f63:	ff c0                	inc    %eax
 8048f65:	03 00                	add    (%eax),%eax
	...

Disassembly of section .eh_frame:

08048f68 <__FRAME_END__-0x318>:
 8048f68:	14 00                	adc    $0x0,%al
 8048f6a:	00 00                	add    %al,(%eax)
 8048f6c:	00 00                	add    %al,(%eax)
 8048f6e:	00 00                	add    %al,(%eax)
 8048f70:	01 7a 52             	add    %edi,0x52(%edx)
 8048f73:	00 01                	add    %al,(%ecx)
 8048f75:	7c 08                	jl     8048f7f <_ZTIN10__cxxabiv117__class_type_infoE+0xdb>
 8048f77:	01 1b                	add    %ebx,(%ebx)
 8048f79:	0c 04                	or     $0x4,%al
 8048f7b:	04 88                	add    $0x88,%al
 8048f7d:	01 00                	add    %eax,(%eax)
 8048f7f:	00 20                	add    %ah,(%eax)
 8048f81:	00 00                	add    %al,(%eax)
 8048f83:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048f86:	00 00                	add    %al,(%eax)
 8048f88:	38 f5                	cmp    %dh,%ch
 8048f8a:	ff                   	(bad)  
 8048f8b:	ff d0                	call   *%eax
 8048f8d:	00 00                	add    %al,(%eax)
 8048f8f:	00 00                	add    %al,(%eax)
 8048f91:	0e                   	push   %cs
 8048f92:	08 46 0e             	or     %al,0xe(%esi)
 8048f95:	0c 4a                	or     $0x4a,%al
 8048f97:	0f 0b                	ud2    
 8048f99:	74 04                	je     8048f9f <_ZTIN10__cxxabiv117__class_type_infoE+0xfb>
 8048f9b:	78 00                	js     8048f9d <_ZTIN10__cxxabiv117__class_type_infoE+0xf9>
 8048f9d:	3f                   	aas    
 8048f9e:	1a 3b                	sbb    (%ebx),%bh
 8048fa0:	2a 32                	sub    (%edx),%dh
 8048fa2:	24 22                	and    $0x22,%al
 8048fa4:	1c 00                	sbb    $0x0,%al
 8048fa6:	00 00                	add    %al,(%eax)
 8048fa8:	40                   	inc    %eax
 8048fa9:	00 00                	add    %al,(%eax)
 8048fab:	00 98 f6 ff ff 12    	add    %bl,0x12fffff6(%eax)
 8048fb1:	00 00                	add    %al,(%eax)
 8048fb3:	00 00                	add    %al,(%eax)
 8048fb5:	41                   	inc    %ecx
 8048fb6:	0e                   	push   %cs
 8048fb7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048fbd:	4e                   	dec    %esi
 8048fbe:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048fc1:	04 00                	add    $0x0,%al
 8048fc3:	00 18                	add    %bl,(%eax)
 8048fc5:	00 00                	add    %al,(%eax)
 8048fc7:	00 60 00             	add    %ah,0x0(%eax)
 8048fca:	00 00                	add    %al,(%eax)
 8048fcc:	8c f6                	mov    %?,%esi
 8048fce:	ff                   	(bad)  
 8048fcf:	ff 2a                	ljmp   *(%edx)
 8048fd1:	00 00                	add    %al,(%eax)
 8048fd3:	00 00                	add    %al,(%eax)
 8048fd5:	41                   	inc    %ecx
 8048fd6:	0e                   	push   %cs
 8048fd7:	08 40 85             	or     %al,-0x7b(%eax)
 8048fda:	02 42 0d             	add    0xd(%edx),%al
 8048fdd:	05 00 00 1c 00       	add    $0x1c0000,%eax
 8048fe2:	00 00                	add    %al,(%eax)
 8048fe4:	00 00                	add    %al,(%eax)
 8048fe6:	00 00                	add    %al,(%eax)
 8048fe8:	01 7a 50             	add    %edi,0x50(%edx)
 8048feb:	4c                   	dec    %esp
 8048fec:	52                   	push   %edx
 8048fed:	00 01                	add    %al,(%ecx)
 8048fef:	7c 08                	jl     8048ff9 <_ZTIN10__cxxabiv117__class_type_infoE+0x155>
 8048ff1:	07                   	pop    %es
 8048ff2:	00 6e 88             	add    %ch,-0x78(%esi)
 8048ff5:	04 08                	add    $0x8,%al
 8048ff7:	00 1b                	add    %bl,(%ebx)
 8048ff9:	0c 04                	or     $0x4,%al
 8048ffb:	04 88                	add    $0x88,%al
 8048ffd:	01 00                	add    %eax,(%eax)
 8048fff:	00 2c 00             	add    %ch,(%eax,%eax,1)
 8049002:	00 00                	add    %al,(%eax)
 8049004:	24 00                	and    $0x0,%al
 8049006:	00 00                	add    %al,(%eax)
 8049008:	7a f6                	jp     8049000 <_ZTIN10__cxxabiv117__class_type_infoE+0x15c>
 804900a:	ff                   	(bad)  
 804900b:	ff a5 00 00 00 04    	jmp    *0x4000000(%ebp)
 8049011:	84 92 04 08 41 0e    	test   %dl,0xe410804(%edx)
 8049017:	08 40 85             	or     %al,-0x7b(%eax)
 804901a:	02 42 0d             	add    0xd(%edx),%al
 804901d:	05 4b 83 03 5a       	add    $0x5a03834b,%eax
 8049022:	0a 40 c3             	or     -0x3d(%eax),%al
 8049025:	41                   	inc    %ecx
 8049026:	0c 04                	or     $0x4,%al
 8049028:	04 40                	add    $0x40,%al
 804902a:	c5 41 0b             	lds    0xb(%ecx),%eax
 804902d:	00 00                	add    %al,(%eax)
 804902f:	00 2c 00             	add    %ch,(%eax,%eax,1)
 8049032:	00 00                	add    %al,(%eax)
 8049034:	54                   	push   %esp
 8049035:	00 00                	add    %al,(%eax)
 8049037:	00 ef                	add    %ch,%bh
 8049039:	f6 ff                	idiv   %bh
 804903b:	ff 91 00 00 00 04    	call   *0x4000000(%ecx)
 8049041:	a8 92                	test   $0x92,%al
 8049043:	04 08                	add    $0x8,%al
 8049045:	41                   	inc    %ecx
 8049046:	0e                   	push   %cs
 8049047:	08 40 85             	or     %al,-0x7b(%eax)
 804904a:	02 42 0d             	add    0xd(%edx),%al
 804904d:	05 44 83 03 55       	add    $0x55038344,%eax
 8049052:	0a 40 c3             	or     -0x3d(%eax),%al
 8049055:	41                   	inc    %ecx
 8049056:	0c 04                	or     $0x4,%al
 8049058:	04 40                	add    $0x40,%al
 804905a:	c5 41 0b             	lds    0xb(%ecx),%eax
 804905d:	00 00                	add    %al,(%eax)
 804905f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8049062:	00 00                	add    %al,(%eax)
 8049064:	fc                   	cld    
 8049065:	00 00                	add    %al,(%eax)
 8049067:	00 50 f7             	add    %dl,-0x9(%eax)
 804906a:	ff                   	(bad)  
 804906b:	ff 0d 00 00 00 00    	decl   0x0
 8049071:	41                   	inc    %ecx
 8049072:	0e                   	push   %cs
 8049073:	08 40 85             	or     %al,-0x7b(%eax)
 8049076:	02 42 0d             	add    0xd(%edx),%al
 8049079:	05 49 c5 40 0c       	add    $0xc40c549,%eax
 804907e:	04 04                	add    $0x4,%al
 8049080:	1c 00                	sbb    $0x0,%al
 8049082:	00 00                	add    %al,(%eax)
 8049084:	1c 01                	sbb    $0x1,%al
 8049086:	00 00                	add    %al,(%eax)
 8049088:	2c fa                	sub    $0xfa,%al
 804908a:	ff                   	(bad)  
 804908b:	ff 05 00 00 00 00    	incl   0x0
 8049091:	41                   	inc    %ecx
 8049092:	0e                   	push   %cs
 8049093:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049099:	41                   	inc    %ecx
 804909a:	0c 04                	or     $0x4,%al
 804909c:	04 c5                	add    $0xc5,%al
 804909e:	00 00                	add    %al,(%eax)
 80490a0:	1c 00                	sbb    $0x0,%al
 80490a2:	00 00                	add    %al,(%eax)
 80490a4:	3c 01                	cmp    $0x1,%al
 80490a6:	00 00                	add    %al,(%eax)
 80490a8:	12 fa                	adc    %dl,%bh
 80490aa:	ff                   	(bad)  
 80490ab:	ff 0e                	decl   (%esi)
 80490ad:	00 00                	add    %al,(%eax)
 80490af:	00 00                	add    %al,(%eax)
 80490b1:	41                   	inc    %ecx
 80490b2:	0e                   	push   %cs
 80490b3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80490b9:	4a                   	dec    %edx
 80490ba:	0c 04                	or     $0x4,%al
 80490bc:	04 c5                	add    $0xc5,%al
 80490be:	00 00                	add    %al,(%eax)
 80490c0:	1c 00                	sbb    $0x0,%al
 80490c2:	00 00                	add    %al,(%eax)
 80490c4:	5c                   	pop    %esp
 80490c5:	01 00                	add    %eax,(%eax)
 80490c7:	00 00                	add    %al,(%eax)
 80490c9:	f7 ff                	idiv   %edi
 80490cb:	ff 35 00 00 00 00    	pushl  0x0
 80490d1:	41                   	inc    %ecx
 80490d2:	0e                   	push   %cs
 80490d3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80490d9:	71 c5                	jno    80490a0 <_ZTIN10__cxxabiv117__class_type_infoE+0x1fc>
 80490db:	0c 04                	or     $0x4,%al
 80490dd:	04 00                	add    $0x0,%al
 80490df:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80490e2:	00 00                	add    %al,(%eax)
 80490e4:	7c 01                	jl     80490e7 <_ZTIN10__cxxabiv117__class_type_infoE+0x243>
 80490e6:	00 00                	add    %al,(%eax)
 80490e8:	e0 f9                	loopne 80490e3 <_ZTIN10__cxxabiv117__class_type_infoE+0x23f>
 80490ea:	ff                   	(bad)  
 80490eb:	ff 23                	jmp    *(%ebx)
 80490ed:	00 00                	add    %al,(%eax)
 80490ef:	00 00                	add    %al,(%eax)
 80490f1:	41                   	inc    %ecx
 80490f2:	0e                   	push   %cs
 80490f3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80490f9:	5f                   	pop    %edi
 80490fa:	0c 04                	or     $0x4,%al
 80490fc:	04 c5                	add    $0xc5,%al
 80490fe:	00 00                	add    %al,(%eax)
 8049100:	18 00                	sbb    %al,(%eax)
 8049102:	00 00                	add    %al,(%eax)
 8049104:	9c                   	pushf  
 8049105:	01 00                	add    %eax,(%eax)
 8049107:	00 f5                	add    %dh,%ch
 8049109:	f6 ff                	idiv   %bh
 804910b:	ff 49 00             	decl   0x0(%ecx)
 804910e:	00 00                	add    %al,(%eax)
 8049110:	00 41 0e             	add    %al,0xe(%ecx)
 8049113:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049119:	00 00                	add    %al,(%eax)
 804911b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804911e:	00 00                	add    %al,(%eax)
 8049120:	b8 01 00 00 22       	mov    $0x22000001,%eax
 8049125:	f7 ff                	idiv   %edi
 8049127:	ff 14 00             	call   *(%eax,%eax,1)
 804912a:	00 00                	add    %al,(%eax)
 804912c:	00 41 0e             	add    %al,0xe(%ecx)
 804912f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049135:	50                   	push   %eax
 8049136:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8049139:	04 00                	add    $0x0,%al
 804913b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804913e:	00 00                	add    %al,(%eax)
 8049140:	d8 01                	fadds  (%ecx)
 8049142:	00 00                	add    %al,(%eax)
 8049144:	16                   	push   %ss
 8049145:	f7 ff                	idiv   %edi
 8049147:	ff 14 00             	call   *(%eax,%eax,1)
 804914a:	00 00                	add    %al,(%eax)
 804914c:	00 41 0e             	add    %al,0xe(%ecx)
 804914f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049155:	50                   	push   %eax
 8049156:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8049159:	04 00                	add    $0x0,%al
 804915b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804915e:	00 00                	add    %al,(%eax)
 8049160:	f8                   	clc    
 8049161:	01 00                	add    %eax,(%eax)
 8049163:	00 88 f9 ff ff 44    	add    %cl,0x44fffff9(%eax)
 8049169:	00 00                	add    %al,(%eax)
 804916b:	00 00                	add    %al,(%eax)
 804916d:	41                   	inc    %ecx
 804916e:	0e                   	push   %cs
 804916f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049175:	02 40 c5             	add    -0x3b(%eax),%al
 8049178:	0c 04                	or     $0x4,%al
 804917a:	04 00                	add    $0x0,%al
 804917c:	1c 00                	sbb    $0x0,%al
 804917e:	00 00                	add    %al,(%eax)
 8049180:	18 02                	sbb    %al,(%edx)
 8049182:	00 00                	add    %al,(%eax)
 8049184:	ac                   	lods   %ds:(%esi),%al
 8049185:	f9                   	stc    
 8049186:	ff                   	(bad)  
 8049187:	ff 35 00 00 00 00    	pushl  0x0
 804918d:	41                   	inc    %ecx
 804918e:	0e                   	push   %cs
 804918f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049195:	71 c5                	jno    804915c <_ZTIN10__cxxabiv117__class_type_infoE+0x2b8>
 8049197:	0c 04                	or     $0x4,%al
 8049199:	04 00                	add    $0x0,%al
 804919b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804919e:	00 00                	add    %al,(%eax)
 80491a0:	38 02                	cmp    %al,(%edx)
 80491a2:	00 00                	add    %al,(%eax)
 80491a4:	c2 f9 ff             	ret    $0xfff9
 80491a7:	ff 53 00             	call   *0x0(%ebx)
 80491aa:	00 00                	add    %al,(%eax)
 80491ac:	00 41 0e             	add    %al,0xe(%ecx)
 80491af:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80491b5:	02 4f c5             	add    -0x3b(%edi),%cl
 80491b8:	0c 04                	or     $0x4,%al
 80491ba:	04 00                	add    $0x0,%al
 80491bc:	1c 00                	sbb    $0x0,%al
 80491be:	00 00                	add    %al,(%eax)
 80491c0:	58                   	pop    %eax
 80491c1:	02 00                	add    (%eax),%al
 80491c3:	00 aa f6 ff ff 07    	add    %ch,0x7fffff6(%edx)
 80491c9:	02 00                	add    (%eax),%al
 80491cb:	00 00                	add    %al,(%eax)
 80491cd:	41                   	inc    %ecx
 80491ce:	0e                   	push   %cs
 80491cf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80491d5:	03 03                	add    (%ebx),%eax
 80491d7:	02 c5                	add    %ch,%al
 80491d9:	0c 04                	or     $0x4,%al
 80491db:	04 1c                	add    $0x1c,%al
 80491dd:	00 00                	add    %al,(%eax)
 80491df:	00 78 02             	add    %bh,0x2(%eax)
 80491e2:	00 00                	add    %al,(%eax)
 80491e4:	91                   	xchg   %eax,%ecx
 80491e5:	f8                   	clc    
 80491e6:	ff                   	(bad)  
 80491e7:	ff 23                	jmp    *(%ebx)
 80491e9:	00 00                	add    %al,(%eax)
 80491eb:	00 00                	add    %al,(%eax)
 80491ed:	41                   	inc    %ecx
 80491ee:	0e                   	push   %cs
 80491ef:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80491f5:	5f                   	pop    %edi
 80491f6:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 80491f9:	04 00                	add    $0x0,%al
 80491fb:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80491fe:	00 00                	add    %al,(%eax)
 8049200:	98                   	cwtl   
 8049201:	02 00                	add    (%eax),%al
 8049203:	00 94 f8 ff ff 1c 00 	add    %dl,0x1cffff(%eax,%edi,8)
 804920a:	00 00                	add    %al,(%eax)
 804920c:	00 41 0e             	add    %al,0xe(%ecx)
 804920f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8049215:	58                   	pop    %eax
 8049216:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8049219:	04 00                	add    $0x0,%al
 804921b:	00 38                	add    %bh,(%eax)
 804921d:	00 00                	add    %al,(%eax)
 804921f:	00 b8 02 00 00 9c    	add    %bh,-0x63fffffe(%eax)
 8049225:	f9                   	stc    
 8049226:	ff                   	(bad)  
 8049227:	ff 61 00             	jmp    *0x0(%ecx)
 804922a:	00 00                	add    %al,(%eax)
 804922c:	00 41 0e             	add    %al,0xe(%ecx)
 804922f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8049235:	87 03                	xchg   %eax,(%ebx)
 8049237:	41                   	inc    %ecx
 8049238:	0e                   	push   %cs
 8049239:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804923f:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 8049246:	0e                   	push   %cs
 8049247:	14 41                	adc    $0x41,%al
 8049249:	0e                   	push   %cs
 804924a:	10 c3                	adc    %al,%bl
 804924c:	41                   	inc    %ecx
 804924d:	0e                   	push   %cs
 804924e:	0c c6                	or     $0xc6,%al
 8049250:	41                   	inc    %ecx
 8049251:	0e                   	push   %cs
 8049252:	08 c7                	or     %al,%bh
 8049254:	41                   	inc    %ecx
 8049255:	0e                   	push   %cs
 8049256:	04 c5                	add    $0xc5,%al
 8049258:	10 00                	adc    %al,(%eax)
 804925a:	00 00                	add    %al,(%eax)
 804925c:	f4                   	hlt    
 804925d:	02 00                	add    (%eax),%al
 804925f:	00 d0                	add    %dl,%al
 8049261:	f9                   	stc    
 8049262:	ff                   	(bad)  
 8049263:	ff 02                	incl   (%edx)
 8049265:	00 00                	add    %al,(%eax)
 8049267:	00 00                	add    %al,(%eax)
 8049269:	00 00                	add    %al,(%eax)
 804926b:	00 10                	add    %dl,(%eax)
 804926d:	00 00                	add    %al,(%eax)
 804926f:	00 08                	add    %cl,(%eax)
 8049271:	03 00                	add    (%eax),%eax
 8049273:	00 be f9 ff ff 04    	add    %bh,0x4fffff9(%esi)
 8049279:	00 00                	add    %al,(%eax)
 804927b:	00 00                	add    %al,(%eax)
 804927d:	00 00                	add    %al,(%eax)
	...

08049280 <__FRAME_END__>:
 8049280:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gcc_except_table:

08049284 <.gcc_except_table>:
 8049284:	ff 00                	incl   (%eax)
 8049286:	21 01                	and    %eax,(%ecx)
 8049288:	19 0e                	sbb    %ecx,(%esi)
 804928a:	05 3b 01 13 05       	add    $0x513013b,%eax
 804928f:	77 01                	ja     8049292 <__FRAME_END__+0x12>
 8049291:	1f                   	pop    %ds
 8049292:	29 00                	sub    %eax,(%eax)
 8049294:	00 5a 05             	add    %bl,0x5(%edx)
 8049297:	2a 00                	sub    (%eax),%al
 8049299:	72 12                	jb     80492ad <__FRAME_END__+0x2d>
 804929b:	00 00                	add    %al,(%eax)
 804929d:	96                   	xchg   %eax,%esi
 804929e:	01 05 66 00 01 00    	add    %eax,0x10066
 80492a4:	84 8d 04 08 ff 00    	test   %cl,0xff0804(%ebp)
 80492aa:	21 01                	and    %eax,(%ecx)
 80492ac:	11 07                	adc    %eax,(%edi)
 80492ae:	05 40 03 13 3f       	add    $0x3f130340,%eax
 80492b3:	00 00                	add    %al,(%eax)
 80492b5:	64                   	fs
 80492b6:	05 1e 00 82 01       	add    $0x182001e,%eax
 80492bb:	05 2f 00 02 00       	add    $0x2002f,%eax
 80492c0:	01 7d 00             	add    %edi,0x0(%ebp)
 80492c3:	00 98 8d 04 08 84    	add    %bl,-0x7bf7fb73(%eax)
 80492c9:	8d 04 08             	lea    (%eax,%ecx,1),%eax

Disassembly of section .init_array:

0804aef8 <__init_array_start>:
 804aef8:	98                   	cwtl   
 804aef9:	8a 04 08             	mov    (%eax,%ecx,1),%al

Disassembly of section .ctors:

0804aefc <__CTOR_LIST__>:
 804aefc:	ff                   	(bad)  
 804aefd:	ff                   	(bad)  
 804aefe:	ff                   	(bad)  
 804aeff:	ff 00                	incl   (%eax)

0804af00 <__CTOR_END__>:
 804af00:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

0804af04 <__DTOR_LIST__>:
 804af04:	ff                   	(bad)  
 804af05:	ff                   	(bad)  
 804af06:	ff                   	(bad)  
 804af07:	ff 00                	incl   (%eax)

0804af08 <__DTOR_END__>:
 804af08:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

0804af0c <__JCR_END__>:
 804af0c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

0804af10 <_DYNAMIC>:
 804af10:	01 00                	add    %eax,(%eax)
 804af12:	00 00                	add    %al,(%eax)
 804af14:	01 00                	add    %eax,(%eax)
 804af16:	00 00                	add    %al,(%eax)
 804af18:	01 00                	add    %eax,(%eax)
 804af1a:	00 00                	add    %al,(%eax)
 804af1c:	b9 00 00 00 0c       	mov    $0xc000000,%ecx
 804af21:	00 00                	add    %al,(%eax)
 804af23:	00 8c 84 04 08 0d 00 	add    %cl,0xd0804(%esp,%eax,4)
 804af2a:	00 00                	add    %al,(%eax)
 804af2c:	6c                   	insb   (%dx),%es:(%edi)
 804af2d:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 804af30:	19 00                	sbb    %eax,(%eax)
 804af32:	00 00                	add    %al,(%eax)
 804af34:	f8                   	clc    
 804af35:	ae                   	scas   %es:(%edi),%al
 804af36:	04 08                	add    $0x8,%al
 804af38:	1b 00                	sbb    (%eax),%eax
 804af3a:	00 00                	add    %al,(%eax)
 804af3c:	04 00                	add    $0x0,%al
 804af3e:	00 00                	add    %al,(%eax)
 804af40:	f5                   	cmc    
 804af41:	fe                   	(bad)  
 804af42:	ff 6f ac             	ljmp   *-0x54(%edi)
 804af45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 804af4c:	bc 82 04 08 06       	mov    $0x6080482,%esp
 804af51:	00 00                	add    %al,(%eax)
 804af53:	00 cc                	add    %cl,%ah
 804af55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 804af5c:	07                   	pop    %es
 804af5d:	01 00                	add    %eax,(%eax)
 804af5f:	00 0b                	add    %cl,(%ebx)
 804af61:	00 00                	add    %al,(%eax)
 804af63:	00 10                	add    %dl,(%eax)
 804af65:	00 00                	add    %al,(%eax)
 804af67:	00 15 00 00 00 00    	add    %dl,0x0
 804af6d:	00 00                	add    %al,(%eax)
 804af6f:	00 03                	add    %al,(%ebx)
 804af71:	00 00                	add    %al,(%eax)
 804af73:	00 f4                	add    %dh,%ah
 804af75:	af                   	scas   %es:(%edi),%eax
 804af76:	04 08                	add    $0x8,%al
 804af78:	02 00                	add    (%eax),%al
 804af7a:	00 00                	add    %al,(%eax)
 804af7c:	60                   	pusha  
 804af7d:	00 00                	add    %al,(%eax)
 804af7f:	00 14 00             	add    %dl,(%eax,%eax,1)
 804af82:	00 00                	add    %al,(%eax)
 804af84:	11 00                	adc    %eax,(%eax)
 804af86:	00 00                	add    %al,(%eax)
 804af88:	17                   	pop    %ss
 804af89:	00 00                	add    %al,(%eax)
 804af8b:	00 2c 84             	add    %ch,(%esp,%eax,4)
 804af8e:	04 08                	add    $0x8,%al
 804af90:	11 00                	adc    %eax,(%eax)
 804af92:	00 00                	add    %al,(%eax)
 804af94:	24 84                	and    $0x84,%al
 804af96:	04 08                	add    $0x8,%al
 804af98:	12 00                	adc    (%eax),%al
 804af9a:	00 00                	add    %al,(%eax)
 804af9c:	08 00                	or     %al,(%eax)
 804af9e:	00 00                	add    %al,(%eax)
 804afa0:	13 00                	adc    (%eax),%eax
 804afa2:	00 00                	add    %al,(%eax)
 804afa4:	08 00                	or     %al,(%eax)
 804afa6:	00 00                	add    %al,(%eax)
 804afa8:	fe                   	(bad)  
 804afa9:	ff                   	(bad)  
 804afaa:	ff 6f e4             	ljmp   *-0x1c(%edi)
 804afad:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 804afb1:	ff                   	(bad)  
 804afb2:	ff 6f 02             	ljmp   *0x2(%edi)
 804afb5:	00 00                	add    %al,(%eax)
 804afb7:	00 f0                	add    %dh,%al
 804afb9:	ff                   	(bad)  
 804afba:	ff 6f c4             	ljmp   *-0x3c(%edi)
 804afbd:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

0804aff0 <.got>:
 804aff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804aff4 <_GLOBAL_OFFSET_TABLE_>:
 804aff4:	10 af 04 08 00 00    	adc    %ch,0x804(%edi)
 804affa:	00 00                	add    %al,(%eax)
 804affc:	00 00                	add    %al,(%eax)
 804affe:	00 00                	add    %al,(%eax)
 804b000:	d6                   	(bad)  
 804b001:	84 04 08             	test   %al,(%eax,%ecx,1)
 804b004:	e6 84                	out    %al,$0x84
 804b006:	04 08                	add    $0x8,%al
 804b008:	f6 84 04 08 06 85 04 	testb  $0x8,0x4850608(%esp,%eax,1)
 804b00f:	08 
 804b010:	16                   	push   %ss
 804b011:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804b014:	26 85 04 08          	test   %eax,%es:(%eax,%ecx,1)
 804b018:	36 85 04 08          	test   %eax,%ss:(%eax,%ecx,1)
 804b01c:	46                   	inc    %esi
 804b01d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804b020:	56                   	push   %esi
 804b021:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804b024:	66 85 04 08          	test   %ax,(%eax,%ecx,1)
 804b028:	76 85                	jbe    804afaf <_DYNAMIC+0x9f>
 804b02a:	04 08                	add    $0x8,%al
 804b02c:	86                   	.byte 0x86
 804b02d:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .data:

0804b030 <__data_start>:
 804b030:	00 00                	add    %al,(%eax)
	...

0804b034 <__dso_handle>:
 804b034:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804b040 <completed.6159>:
 804b040:	00 00                	add    %al,(%eax)
	...

0804b044 <dtor_idx.6161>:
	...

0804b060 <_ZN10__cxxabiv12tiE>:
	...

0804b080 <exception_buff>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048414>
   a:	74 75                	je     81 <_init-0x804840b>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80483f6>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	44                   	inc    %esp
  11:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  14:	12 00                	adc    (%eax),%al
	...
  1e:	00 00                	add    %al,(%eax)
  20:	1c 00                	sbb    $0x0,%al
  22:	00 00                	add    %al,(%eax)
  24:	02 00                	add    (%eax),%al
  26:	45                   	inc    %ebp
  27:	00 00                	add    %al,(%eax)
  29:	00 04 00             	add    %al,(%eax,%eax,1)
  2c:	00 00                	add    %al,(%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	58                   	pop    %eax
  31:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  34:	6d                   	insl   (%dx),%es:(%edi)
  35:	01 00                	add    %eax,(%eax)
	...
  3f:	00 4c 00 00          	add    %cl,0x0(%eax,%eax,1)
  43:	00 02                	add    %al,(%edx)
  45:	00 96 01 00 00 04    	add    %dl,0x4000001(%esi)
  4b:	00 00                	add    %al,(%eax)
  4d:	00 00                	add    %al,(%eax)
  4f:	00 c8                	add    %cl,%al
  51:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
  54:	ec                   	in     (%dx),%al
  55:	02 00                	add    (%eax),%al
  57:	00 b4 8a 04 08 05 00 	add    %dh,0x50804(%edx,%ecx,4)
  5e:	00 00                	add    %al,(%eax)
  60:	ba 8a 04 08 0e       	mov    $0xe08048a,%edx
  65:	00 00                	add    %al,(%eax)
  67:	00 c8                	add    %cl,%al
  69:	8a 04 08             	mov    (%eax,%ecx,1),%al
  6c:	23 00                	and    (%eax),%eax
  6e:	00 00                	add    %al,(%eax)
  70:	ec                   	in     (%dx),%al
  71:	8a 04 08             	mov    (%eax,%ecx,1),%al
  74:	44                   	inc    %esp
  75:	00 00                	add    %al,(%eax)
  77:	00 30                	add    %dh,(%eax)
  79:	8b 04 08             	mov    (%eax,%ecx,1),%eax
  7c:	35 00 00 00 66       	xor    $0x66000000,%eax
  81:	8b 04 08             	mov    (%eax,%ecx,1),%eax
  84:	53                   	push   %ebx
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	41                   	inc    %ecx
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	01 41 00             	add    %eax,0x0(%ecx)
  13:	00 00                	add    %al,(%eax)
  15:	0c 00                	or     $0x0,%al
  17:	00 00                	add    %al,(%eax)
  19:	44                   	inc    %esp
  1a:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  1d:	56                   	push   %esi
  1e:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  21:	00 00                	add    %al,(%eax)
  23:	00 00                	add    %al,(%eax)
  25:	02 01                	add    (%ecx),%al
  27:	48                   	dec    %eax
  28:	00 00                	add    %al,(%eax)
  2a:	00 01                	add    %al,(%ecx)
  2c:	03 3d 00 00 00 44    	add    0x44000000,%edi
  32:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  35:	56                   	push   %esi
  36:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  39:	00 00                	add    %al,(%eax)
  3b:	00 00                	add    %al,(%eax)
  3d:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  44:	00 4d 01             	add    %cl,0x1(%ebp)
  47:	00 00                	add    %al,(%eax)
  49:	02 00                	add    (%eax),%al
  4b:	34 00                	xor    $0x0,%al
  4d:	00 00                	add    %al,(%eax)
  4f:	04 01                	add    $0x1,%al
  51:	b3 00                	mov    $0x0,%bl
  53:	00 00                	add    %al,(%eax)
  55:	04 8f                	add    $0x8f,%al
  57:	00 00                	add    %al,(%eax)
  59:	00 0c 00             	add    %cl,(%eax,%eax,1)
  5c:	00 00                	add    %al,(%eax)
  5e:	58                   	pop    %eax
  5f:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  62:	c5 87 04 08 37 00    	lds    0x370804(%edi),%eax
  68:	00 00                	add    %al,(%eax)
  6a:	02 04 07             	add    (%edi,%eax,1),%al
  6d:	82                   	(bad)  
  6e:	00 00                	add    %al,(%eax)
  70:	00 02                	add    %al,(%edx)
  72:	01 08                	add    %ecx,(%eax)
  74:	a5                   	movsl  %ds:(%esi),%es:(%edi)
  75:	00 00                	add    %al,(%eax)
  77:	00 02                	add    %al,(%edx)
  79:	02 07                	add    (%edi),%al
  7b:	d9 00                	flds   (%eax)
  7d:	00 00                	add    %al,(%eax)
  7f:	02 04 07             	add    (%edi,%eax,1),%al
  82:	7d 00                	jge    84 <_init-0x8048408>
  84:	00 00                	add    %al,(%eax)
  86:	02 01                	add    (%ecx),%al
  88:	06                   	push   %es
  89:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
  8a:	00 00                	add    %al,(%eax)
  8c:	00 02                	add    %al,(%edx)
  8e:	02 05 09 01 00 00    	add    0x109,%al
  94:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  9b:	02 08                	add    (%eax),%cl
  9d:	05 4d 00 00 00       	add    $0x4d,%eax
  a2:	02 08                	add    (%eax),%cl
  a4:	07                   	pop    %es
  a5:	78 00                	js     a7 <_init-0x80483e5>
  a7:	00 00                	add    %al,(%eax)
  a9:	02 04 05 52 00 00 00 	add    0x52(,%eax,1),%al
  b0:	02 01                	add    (%ecx),%al
  b2:	06                   	push   %es
  b3:	ae                   	scas   %es:(%edi),%al
  b4:	00 00                	add    %al,(%eax)
  b6:	00 04 40             	add    %al,(%eax,%eax,2)
  b9:	03 00                	add    (%eax),%eax
  bb:	00 01                	add    %al,(%ecx)
  bd:	02 01                	add    (%ecx),%al
  bf:	04 f4                	add    $0xf4,%al
  c1:	00 00                	add    %al,(%eax)
  c3:	00 01                	add    %al,(%ecx)
  c5:	01 04 05 01 03 01 00 	add    %eax,0x10301(,%eax,1)
  cc:	00 01                	add    %al,(%ecx)
  ce:	06                   	push   %es
  cf:	5b                   	pop    %ebx
  d0:	00 00                	add    %al,(%eax)
  d2:	00 58 86             	add    %bl,-0x7a(%eax)
  d5:	04 08                	add    $0x8,%al
  d7:	82                   	(bad)  
  d8:	86 04 08             	xchg   %al,(%eax,%ecx,1)
  db:	38 00                	cmp    %al,(%eax)
  dd:	00 00                	add    %al,(%eax)
  df:	06                   	push   %es
  e0:	01 65 00             	add    %esp,0x0(%ebp)
  e3:	00 00                	add    %al,(%eax)
  e5:	01 0a                	add    %ecx,(%edx)
  e7:	c1 00 00             	roll   $0x0,(%eax)
  ea:	00 82 86 04 08 27    	add    %al,0x27080486(%edx)
  f0:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
  f3:	64 00 00             	add    %al,%fs:(%eax)
  f6:	00 df                	add    %bl,%bh
  f8:	00 00                	add    %al,(%eax)
  fa:	00 07                	add    %al,(%edi)
  fc:	ae                   	scas   %es:(%edi),%al
  fd:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 100:	ea 86 04 08 cc 00 00 	ljmp   $0x0,$0xcc080486
 107:	00 08                	add    %cl,(%eax)
 109:	df 00                	fild   (%eax)
 10b:	00 00                	add    %al,(%eax)
 10d:	02 91 68 00 09 ea    	add    -0x15f6ff98(%ecx),%dl
 113:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 116:	27                   	daa    
 117:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 11a:	08 ea                	or     %ch,%dl
 11c:	00 00                	add    %al,(%eax)
 11e:	00 02                	add    %al,(%edx)
 120:	91                   	xchg   %eax,%ecx
 121:	6c                   	insb   (%dx),%es:(%edi)
 122:	00 00                	add    %al,(%eax)
 124:	0a e4                	or     %ah,%ah
 126:	00 00                	add    %al,(%eax)
 128:	00 0b                	add    %cl,(%ebx)
 12a:	04 7a                	add    $0x7a,%al
 12c:	00 00                	add    %al,(%eax)
 12e:	00 0a                	add    %cl,(%edx)
 130:	e4 00                	in     $0x0,%al
 132:	00 00                	add    %al,(%eax)
 134:	06                   	push   %es
 135:	01 13                	add    %edx,(%ebx)
 137:	01 00                	add    %eax,(%eax)
 139:	00 01                	add    %al,(%ecx)
 13b:	1a 99 00 00 00 27    	sbb    0x27000000(%ecx),%bl
 141:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 144:	b8 87 04 08 a8       	mov    $0xa8080487,%eax
 149:	00 00                	add    %al,(%eax)
 14b:	00 2c 01             	add    %ch,(%ecx,%eax,1)
 14e:	00 00                	add    %al,(%eax)
 150:	0c 00                	or     $0x0,%al
 152:	00 00                	add    %al,(%eax)
 154:	00 1d 01 00 00 08    	add    %bl,0x8000001
 15a:	2c 01                	sub    $0x1,%al
 15c:	00 00                	add    %al,(%eax)
 15e:	02 91 68 00 0d 18    	add    0x180d0068(%ecx),%dl
 164:	00 00                	add    %al,(%eax)
 166:	00 08                	add    %cl,(%eax)
 168:	31 01                	xor    %eax,(%ecx)
 16a:	00 00                	add    %al,(%eax)
 16c:	02 91 6c 00 00 0a    	add    0xa00006c(%ecx),%dl
 172:	e4 00                	in     $0x0,%al
 174:	00 00                	add    %al,(%eax)
 176:	0a 36                	or     (%esi),%dh
 178:	01 00                	add    %eax,(%eax)
 17a:	00 0b                	add    %cl,(%ebx)
 17c:	04 72                	add    $0x72,%al
 17e:	00 00                	add    %al,(%eax)
 180:	00 0e                	add    %cl,(%esi)
 182:	01 ec                	add    %ebp,%esp
 184:	00 00                	add    %al,(%eax)
 186:	00 01                	add    %al,(%ecx)
 188:	27                   	daa    
 189:	b8 87 04 08 c5       	mov    $0xc5080487,%eax
 18e:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 191:	ec                   	in     (%dx),%al
 192:	00 00                	add    %al,(%eax)
 194:	00 00                	add    %al,(%eax)
 196:	3d 09 00 00 02       	cmp    $0x2000009,%eax
 19b:	00 e9                	add    %ch,%cl
 19d:	00 00                	add    %al,(%eax)
 19f:	00 04 01             	add    %al,(%ecx,%eax,1)
 1a2:	b3 00                	mov    $0x0,%bl
 1a4:	00 00                	add    %al,(%eax)
 1a6:	04 fe                	add    $0xfe,%al
 1a8:	01 00                	add    %eax,(%eax)
 1aa:	00 0c 00             	add    %cl,(%eax,%eax,1)
	...
 1b5:	00 00                	add    %al,(%eax)
 1b7:	30 00                	xor    %al,(%eax)
 1b9:	00 00                	add    %al,(%eax)
 1bb:	a0 00 00 00 02       	mov    0x2000000,%al
 1c0:	01 08                	add    %ecx,(%eax)
 1c2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 1c3:	00 00                	add    %al,(%eax)
 1c5:	00 02                	add    %al,(%edx)
 1c7:	02 07                	add    (%edi),%al
 1c9:	d9 00                	flds   (%eax)
 1cb:	00 00                	add    %al,(%eax)
 1cd:	02 04 07             	add    (%edi,%eax,1),%al
 1d0:	82                   	(bad)  
 1d1:	00 00                	add    %al,(%eax)
 1d3:	00 02                	add    %al,(%edx)
 1d5:	04 07                	add    $0x7,%al
 1d7:	7d 00                	jge    1d9 <_init-0x80482b3>
 1d9:	00 00                	add    %al,(%eax)
 1db:	02 01                	add    (%ecx),%al
 1dd:	06                   	push   %es
 1de:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 1df:	00 00                	add    %al,(%eax)
 1e1:	00 02                	add    %al,(%edx)
 1e3:	02 05 09 01 00 00    	add    0x109,%al
 1e9:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
 1f0:	02 08                	add    (%eax),%cl
 1f2:	05 4d 00 00 00       	add    $0x4d,%eax
 1f7:	02 08                	add    (%eax),%cl
 1f9:	07                   	pop    %es
 1fa:	78 00                	js     1fc <_init-0x8048290>
 1fc:	00 00                	add    %al,(%eax)
 1fe:	02 04 05 52 00 00 00 	add    0x52(,%eax,1),%al
 205:	04 04                	add    $0x4,%al
 207:	02 01                	add    (%ecx),%al
 209:	06                   	push   %es
 20a:	ae                   	scas   %es:(%edi),%al
 20b:	00 00                	add    %al,(%eax)
 20d:	00 05 89 01 00 00    	add    %al,0x189
 213:	03 d4                	add    %esp,%edx
 215:	37                   	aaa    
 216:	00 00                	add    %al,(%eax)
 218:	00 06                	add    %al,(%esi)
 21a:	04 89                	add    $0x89,%al
 21c:	00 00                	add    %al,(%eax)
 21e:	00 07                	add    %al,(%edi)
 220:	71 00                	jno    222 <_init-0x804826a>
 222:	00 00                	add    %al,(%eax)
 224:	06                   	push   %es
 225:	04 94                	add    $0x94,%al
 227:	00 00                	add    %al,(%eax)
 229:	00 08                	add    %cl,(%eax)
 22b:	05 57 02 00 00       	add    $0x257,%eax
 230:	04 31                	add    $0x31,%al
 232:	29 00                	sub    %eax,(%eax)
 234:	00 00                	add    %al,(%eax)
 236:	05 6e 01 00 00       	add    $0x16e,%eax
 23b:	04 3b                	add    $0x3b,%al
 23d:	61                   	popa   
 23e:	00 00                	add    %al,(%eax)
 240:	00 05 5f 02 00 00    	add    %al,0x25f
 246:	04 81                	add    $0x81,%al
 248:	37                   	aaa    
 249:	00 00                	add    %al,(%eax)
 24b:	00 05 ee 03 00 00    	add    %al,0x3ee
 251:	05 2b 37 00 00       	add    $0x372b,%eax
 256:	00 05 ff 04 00 00    	add    %al,0x4ff
 25c:	05 38 61 00 00       	add    $0x6138,%eax
 261:	00 09                	add    %cl,(%ecx)
 263:	04 05                	add    $0x5,%al
 265:	3d 7f 05 00 00       	cmp    $0x57f,%eax
 26a:	0f 01 00             	sgdtl  (%eax)
 26d:	00 0a                	add    %cl,(%edx)
 26f:	17                   	pop    %ss
 270:	05 00 00 00 0a       	add    $0xa000000,%eax
 275:	04 04                	add    $0x4,%al
 277:	00 00                	add    %al,(%eax)
 279:	01 0a                	add    %ecx,(%edx)
 27b:	e6 01                	out    %al,$0x1
 27d:	00 00                	add    %al,(%eax)
 27f:	02 0a                	add    (%edx),%cl
 281:	c1 05 00 00 03 0a d0 	roll   $0xd0,0xa030000
 288:	02 00                	add    (%eax),%al
 28a:	00 04 0a             	add    %al,(%edx,%ecx,1)
 28d:	69 02 00 00 05 0a    	imul   $0xa050000,(%edx),%eax
 293:	0b 02                	or     (%edx),%eax
 295:	00 00                	add    %al,(%eax)
 297:	06                   	push   %es
 298:	0a aa 01 00 00 07    	or     0x7000001(%edx),%ch
 29e:	0a 66 03             	or     0x3(%esi),%ah
 2a1:	00 00                	add    %al,(%eax)
 2a3:	08 00                	or     %al,(%eax)
 2a5:	05 81 05 00 00       	add    $0x581,%eax
 2aa:	05 47 cc 00 00       	add    $0xcc47,%eax
 2af:	00 05 e3 05 00 00    	add    %al,0x5e3
 2b5:	05 52 25 01 00       	add    $0x12552,%eax
 2ba:	00 06                	add    %al,(%esi)
 2bc:	04 2b                	add    $0x2b,%al
 2be:	01 00                	add    %eax,(%eax)
 2c0:	00 0b                	add    %cl,(%ebx)
 2c2:	3b 01                	cmp    (%ecx),%eax
 2c4:	00 00                	add    %al,(%eax)
 2c6:	0c 0f                	or     $0xf,%al
 2c8:	01 00                	add    %eax,(%eax)
 2ca:	00 0c 3b             	add    %cl,(%ebx,%edi,1)
 2cd:	01 00                	add    %eax,(%eax)
 2cf:	00 00                	add    %al,(%eax)
 2d1:	06                   	push   %es
 2d2:	04 41                	add    $0x41,%al
 2d4:	01 00                	add    %eax,(%eax)
 2d6:	00 0d 38 03 00 00    	add    %cl,0x338
 2dc:	20 05 55 86 01 00    	and    %al,0x18655
 2e2:	00 0e                	add    %cl,(%esi)
 2e4:	6b 04 00 00          	imul   $0x0,(%eax,%eax,1),%eax
 2e8:	05 57 c1 00 00       	add    $0xc157,%eax
 2ed:	00 02                	add    %al,(%edx)
 2ef:	23 00                	and    (%eax),%eax
 2f1:	0e                   	push   %cs
 2f2:	88 02                	mov    %al,(%edx)
 2f4:	00 00                	add    %al,(%eax)
 2f6:	05 58 1a 01 00       	add    $0x11a58,%eax
 2fb:	00 02                	add    %al,(%edx)
 2fd:	23 08                	and    (%eax),%ecx
 2ff:	0e                   	push   %cs
 300:	5c                   	pop    %esp
 301:	03 00                	add    (%eax),%eax
 303:	00 05 59 b6 00 00    	add    %al,0xb659
 309:	00 02                	add    %al,(%edx)
 30b:	23 0c 0e             	and    (%esi,%ecx,1),%ecx
 30e:	e4 03                	in     $0x3,%al
 310:	00 00                	add    %al,(%eax)
 312:	05 5a b6 00 00       	add    $0xb65a,%eax
 317:	00 02                	add    %al,(%edx)
 319:	23 10                	and    (%eax),%edx
 31b:	00 05 5d 06 00 00    	add    %al,0x65d
 321:	05 64 53 00 00       	add    $0x5364,%eax
 326:	00 06                	add    %al,(%esi)
 328:	04 97                	add    $0x97,%al
 32a:	01 00                	add    %eax,(%eax)
 32c:	00 0f                	add    %cl,(%edi)
 32e:	95                   	xchg   %eax,%ebp
 32f:	05 00 00 01 05       	add    $0x5010000,%eax
 334:	26 01 00             	add    %eax,%es:(%eax)
 337:	00 01                	add    %al,(%ecx)
 339:	1f                   	pop    %ds
 33a:	a8 01                	test   $0x1,%al
 33c:	00 00                	add    %al,(%eax)
 33e:	06                   	push   %es
 33f:	04 ae                	add    $0xae,%al
 341:	01 00                	add    %eax,(%eax)
 343:	00 10                	add    %dl,(%eax)
 345:	05 4a 03 00 00       	add    $0x34a,%eax
 34a:	01 20                	add    %esp,(%eax)
 34c:	a8 01                	test   $0x1,%al
 34e:	00 00                	add    %al,(%eax)
 350:	0d 90 01 00 00       	or     $0x190,%eax
 355:	50                   	push   %eax
 356:	01 22                	add    %esp,(%edx)
 358:	6f                   	outsl  %ds:(%esi),(%dx)
 359:	02 00                	add    (%eax),%al
 35b:	00 0e                	add    %cl,(%esi)
 35d:	16                   	push   %ss
 35e:	03 00                	add    (%eax),%eax
 360:	00 01                	add    %al,(%ecx)
 362:	23 9e 02 00 00 02    	and    0x2000002(%esi),%ebx
 368:	23 00                	and    (%eax),%eax
 36a:	0e                   	push   %cs
 36b:	1e                   	push   %ds
 36c:	02 00                	add    (%eax),%al
 36e:	00 01                	add    %al,(%ecx)
 370:	24 af                	and    $0xaf,%al
 372:	02 00                	add    (%eax),%al
 374:	00 02                	add    %al,(%edx)
 376:	23 04 0e             	and    (%esi,%ecx,1),%eax
 379:	39 04 00             	cmp    %eax,(%eax,%eax,1)
 37c:	00 01                	add    %al,(%ecx)
 37e:	25 9d 01 00 00       	and    $0x19d,%eax
 383:	02 23                	add    (%ebx),%ah
 385:	08 0e                	or     %cl,(%esi)
 387:	e1 02                	loope  38b <_init-0x8048101>
 389:	00 00                	add    %al,(%eax)
 38b:	01 26                	add    %esp,(%esi)
 38d:	af                   	scas   %es:(%edi),%eax
 38e:	01 00                	add    %eax,(%eax)
 390:	00 02                	add    %al,(%edx)
 392:	23 0c 0e             	and    (%esi,%ecx,1),%ecx
 395:	0a 06                	or     (%esi),%al
 397:	00 00                	add    %al,(%eax)
 399:	01 27                	add    %esp,(%edi)
 39b:	b5 02                	mov    $0x2,%ch
 39d:	00 00                	add    %al,(%eax)
 39f:	02 23                	add    (%ebx),%ah
 3a1:	10 0e                	adc    %cl,(%esi)
 3a3:	4a                   	dec    %edx
 3a4:	02 00                	add    (%eax),%al
 3a6:	00 01                	add    %al,(%ecx)
 3a8:	29 53 00             	sub    %edx,0x0(%ebx)
 3ab:	00 00                	add    %al,(%eax)
 3ad:	02 23                	add    (%ebx),%ah
 3af:	14 0e                	adc    $0xe,%al
 3b1:	d6                   	(bad)  
 3b2:	04 00                	add    $0x0,%al
 3b4:	00 01                	add    %al,(%ecx)
 3b6:	2a 53 00             	sub    0x0(%ebx),%dl
 3b9:	00 00                	add    %al,(%eax)
 3bb:	02 23                	add    (%ebx),%ah
 3bd:	18 0e                	sbb    %cl,(%esi)
 3bf:	e9 04 00 00 01       	jmp    10003c8 <_init-0x70480c4>
 3c4:	2b 83 00 00 00 02    	sub    0x2000000(%ebx),%eax
 3ca:	23 1c 0e             	and    (%esi,%ecx,1),%ebx
 3cd:	36                   	ss
 3ce:	06                   	push   %es
 3cf:	00 00                	add    %al,(%eax)
 3d1:	01 2c 83             	add    %ebp,(%ebx,%eax,4)
 3d4:	00 00                	add    %al,(%eax)
 3d6:	00 02                	add    %al,(%edx)
 3d8:	23 20                	and    (%eax),%esp
 3da:	0e                   	push   %cs
 3db:	d9 05 00 00 01 2d    	flds   0x2d010000
 3e1:	6f                   	outsl  %ds:(%esi),(%dx)
 3e2:	00 00                	add    %al,(%eax)
 3e4:	00 02                	add    %al,(%edx)
 3e6:	23 24 0e             	and    (%esi,%ecx,1),%esp
 3e9:	54                   	push   %esp
 3ea:	04 00                	add    $0x0,%al
 3ec:	00 01                	add    %al,(%ecx)
 3ee:	2e 6f                	outsl  %cs:(%esi),(%dx)
 3f0:	00 00                	add    %al,(%eax)
 3f2:	00 02                	add    %al,(%edx)
 3f4:	23 28                	and    (%eax),%ebp
 3f6:	0e                   	push   %cs
 3f7:	7b 02                	jnp    3fb <_init-0x8048091>
 3f9:	00 00                	add    %al,(%eax)
 3fb:	01 30                	add    %esi,(%eax)
 3fd:	41                   	inc    %ecx
 3fe:	01 00                	add    %eax,(%eax)
 400:	00 02                	add    %al,(%edx)
 402:	23 30                	and    (%eax),%esi
 404:	00 11                	add    %dl,(%ecx)
 406:	73 74                	jae    47c <_init-0x8048010>
 408:	64 00 06             	add    %al,%fs:(%esi)
 40b:	00 9e 02 00 00 12    	add    %bl,0x12000002(%esi)
 411:	40                   	inc    %eax
 412:	02 00                	add    (%eax),%al
 414:	00 01                	add    %al,(%ecx)
 416:	13 01                	adc    (%ecx),%eax
 418:	33 03                	xor    (%ebx),%eax
 41a:	00 00                	add    %al,(%eax)
 41c:	02 66 bf             	add    -0x41(%esi),%ah
 41f:	01 00                	add    %eax,(%eax)
 421:	00 83 00 00 00 01    	add    %al,0x1000000(%ebx)
 427:	95                   	xchg   %eax,%ebp
 428:	02 00                	add    (%eax),%al
 42a:	00 14 2b             	add    %dl,(%ebx,%ebp,1)
 42d:	05 00 00 01 00       	add    $0x10000,%eax
 432:	00 00                	add    %al,(%eax)
 434:	06                   	push   %es
 435:	04 7a                	add    $0x7a,%al
 437:	02 00                	add    (%eax),%al
 439:	00 0b                	add    %cl,(%ebx)
 43b:	af                   	scas   %es:(%edi),%eax
 43c:	02 00                	add    (%eax),%al
 43e:	00 0c 6f             	add    %cl,(%edi,%ebp,2)
 441:	00 00                	add    %al,(%eax)
 443:	00 00                	add    %al,(%eax)
 445:	06                   	push   %es
 446:	04 a4                	add    $0xa4,%al
 448:	02 00                	add    (%eax),%al
 44a:	00 06                	add    %al,(%esi)
 44c:	04 ba                	add    $0xba,%al
 44e:	01 00                	add    %eax,(%eax)
 450:	00 05 f6 04 00 00    	add    %al,0x4f6
 456:	01 5b c6             	add    %ebx,-0x3a(%ebx)
 459:	02 00                	add    (%eax),%al
 45b:	00 06                	add    %al,(%esi)
 45d:	04 cc                	add    $0xcc,%al
 45f:	02 00                	add    (%eax),%al
 461:	00 07                	add    %al,(%edi)
 463:	95                   	xchg   %eax,%ebp
 464:	00 00                	add    %al,(%eax)
 466:	00 0d a5 05 00 00    	add    %cl,0x5a5
 46c:	03 01                	add    (%ecx),%eax
 46e:	5d                   	pop    %ebp
 46f:	21 03                	and    %eax,(%ebx)
 471:	00 00                	add    %al,(%eax)
 473:	0e                   	push   %cs
 474:	2a 04 00             	sub    (%eax,%eax,1),%al
 477:	00 01                	add    %al,(%ecx)
 479:	6e                   	outsb  %ds:(%esi),(%dx)
 47a:	95                   	xchg   %eax,%ebp
 47b:	00 00                	add    %al,(%eax)
 47d:	00 02                	add    %al,(%edx)
 47f:	23 00                	and    (%eax),%eax
 481:	0e                   	push   %cs
 482:	55                   	push   %ebp
 483:	01 00                	add    %eax,(%eax)
 485:	00 01                	add    %al,(%ecx)
 487:	6f                   	outsl  %ds:(%esi),(%dx)
 488:	95                   	xchg   %eax,%ebp
 489:	00 00                	add    %al,(%eax)
 48b:	00 02                	add    %al,(%edx)
 48d:	23 01                	and    (%ecx),%eax
 48f:	0e                   	push   %cs
 490:	4b                   	dec    %ebx
 491:	06                   	push   %es
 492:	00 00                	add    %al,(%eax)
 494:	01 70 95             	add    %esi,-0x6b(%eax)
 497:	00 00                	add    %al,(%eax)
 499:	00 02                	add    %al,(%edx)
 49b:	23 02                	and    (%edx),%eax
 49d:	15 01 a5 05 00       	adc    $0x5a501,%eax
 4a2:	00 01                	add    %al,(%ecx)
 4a4:	62 01                	bound  %eax,(%ecx)
 4a6:	14 03                	adc    $0x3,%al
 4a8:	00 00                	add    %al,(%eax)
 4aa:	14 21                	adc    $0x21,%al
 4ac:	03 00                	add    (%eax),%eax
 4ae:	00 01                	add    %al,(%ecx)
 4b0:	0c 27                	or     $0x27,%al
 4b2:	03 00                	add    (%eax),%eax
 4b4:	00 00                	add    %al,(%eax)
 4b6:	00 06                	add    %al,(%esi)
 4b8:	04 d1                	add    $0xd1,%al
 4ba:	02 00                	add    (%eax),%al
 4bc:	00 06                	add    %al,(%esi)
 4be:	04 bb                	add    $0xbb,%al
 4c0:	02 00                	add    (%eax),%al
 4c2:	00 0d 26 05 00 00    	add    %cl,0x526
 4c8:	02 01                	add    (%ecx),%al
 4ca:	73 6f                	jae    53b <_init-0x8047f51>
 4cc:	03 00                	add    (%eax),%eax
 4ce:	00 0e                	add    %cl,(%esi)
 4d0:	5a                   	pop    %edx
 4d1:	01 00                	add    %eax,(%eax)
 4d3:	00 01                	add    %al,(%ecx)
 4d5:	7c 95                	jl     46c <_init-0x8048020>
 4d7:	00 00                	add    %al,(%eax)
 4d9:	00 02                	add    %al,(%edx)
 4db:	23 00                	and    (%eax),%eax
 4dd:	0e                   	push   %cs
 4de:	9a 02 00 00 01 7d 95 	lcall  $0x957d,$0x1000002
 4e5:	00 00                	add    %al,(%eax)
 4e7:	00 02                	add    %al,(%edx)
 4e9:	23 01                	and    (%ecx),%eax
 4eb:	15 01 26 05 00       	adc    $0x52601,%eax
 4f0:	00 01                	add    %al,(%ecx)
 4f2:	75 01                	jne    4f5 <_init-0x8047f97>
 4f4:	62 03                	bound  %eax,(%ebx)
 4f6:	00 00                	add    %al,(%eax)
 4f8:	14 6f                	adc    $0x6f,%al
 4fa:	03 00                	add    (%eax),%eax
 4fc:	00 01                	add    %al,(%ecx)
 4fe:	0c 27                	or     $0x27,%al
 500:	03 00                	add    (%eax),%eax
 502:	00 00                	add    %al,(%eax)
 504:	00 06                	add    %al,(%esi)
 506:	04 2d                	add    $0x2d,%al
 508:	03 00                	add    (%eax),%eax
 50a:	00 0d 22 04 00 00    	add    %cl,0x422
 510:	04 01                	add    $0x1,%al
 512:	80 d2 03             	adc    $0x3,%dl
 515:	00 00                	add    %al,(%eax)
 517:	0e                   	push   %cs
 518:	65                   	gs
 519:	04 00                	add    $0x0,%al
 51b:	00 01                	add    %al,(%ecx)
 51d:	90                   	nop
 51e:	95                   	xchg   %eax,%ebp
 51f:	00 00                	add    %al,(%eax)
 521:	00 02                	add    %al,(%edx)
 523:	23 00                	and    (%eax),%eax
 525:	16                   	push   %ss
 526:	6c                   	insb   (%dx),%es:(%edi)
 527:	65 6e                	outsb  %gs:(%esi),(%dx)
 529:	00 01                	add    %al,(%ecx)
 52b:	92                   	xchg   %eax,%edx
 52c:	95                   	xchg   %eax,%ebp
 52d:	00 00                	add    %al,(%eax)
 52f:	00 02                	add    %al,(%edx)
 531:	23 01                	and    (%ecx),%eax
 533:	16                   	push   %ss
 534:	6c                   	insb   (%dx),%es:(%edi)
 535:	70 00                	jo     537 <_init-0x8047f55>
 537:	01 94 95 00 00 00 02 	add    %edx,0x2000000(%ebp,%edx,4)
 53e:	23 02                	and    (%edx),%eax
 540:	0e                   	push   %cs
 541:	b2 02                	mov    $0x2,%dl
 543:	00 00                	add    %al,(%eax)
 545:	01 97 95 00 00 00    	add    %edx,0x95(%edi)
 54b:	02 23                	add    (%ebx),%ah
 54d:	03 15 01 22 04 00    	add    0x42201,%edx
 553:	00 01                	add    %al,(%ecx)
 555:	82                   	(bad)  
 556:	01 c5                	add    %eax,%ebp
 558:	03 00                	add    (%eax),%eax
 55a:	00 14 d2             	add    %dl,(%edx,%edx,8)
 55d:	03 00                	add    (%eax),%eax
 55f:	00 01                	add    %al,(%ecx)
 561:	0c 27                	or     $0x27,%al
 563:	03 00                	add    (%eax),%eax
 565:	00 00                	add    %al,(%eax)
 567:	00 06                	add    %al,(%esi)
 569:	04 75                	add    $0x75,%al
 56b:	03 00                	add    (%eax),%eax
 56d:	00 17                	add    %dl,(%edi)
 56f:	63 01                	arpl   %ax,(%ecx)
 571:	00 00                	add    %al,(%eax)
 573:	06                   	push   %es
 574:	00 fa                	add    %bh,%dl
 576:	03 00                	add    (%eax),%eax
 578:	00 0f                	add    %cl,(%edi)
 57a:	38 02                	cmp    %al,(%edx)
 57c:	00 00                	add    %al,(%eax)
 57e:	01 18                	add    %ebx,(%eax)
 580:	74 69                	je     5eb <_init-0x8047ea1>
 582:	00 01                	add    %al,(%ecx)
 584:	0a c5                	or     %ch,%al
 586:	03 00                	add    (%eax),%eax
 588:	00 fa                	add    %bh,%dl
 58a:	03 00                	add    (%eax),%eax
 58c:	00 01                	add    %al,(%ecx)
 58e:	01 00                	add    %eax,(%eax)
 590:	19 e3                	sbb    %esp,%ebx
 592:	03 00                	add    (%eax),%eax
 594:	00 04 01             	add    %al,(%ecx,%eax,1)
 597:	08 fa                	or     %bh,%dl
 599:	03 00                	add    (%eax),%eax
 59b:	00 6b 04             	add    %ch,0x4(%ebx)
 59e:	00 00                	add    %al,(%eax)
 5a0:	1a 32                	sbb    (%edx),%dh
 5a2:	02 00                	add    (%eax),%al
 5a4:	00 76 04             	add    %dh,0x4(%esi)
 5a7:	00 00                	add    %al,(%eax)
 5a9:	02 23                	add    (%ebx),%ah
 5ab:	00 01                	add    %al,(%ecx)
 5ad:	1b 01                	sbb    (%ecx),%eax
 5af:	38 02                	cmp    %al,(%edx)
 5b1:	00 00                	add    %al,(%eax)
 5b3:	01 01                	add    %eax,(%ecx)
 5b5:	27                   	daa    
 5b6:	04 00                	add    $0x0,%al
 5b8:	00 33                	add    %dh,(%ebx)
 5ba:	04 00                	add    $0x0,%al
 5bc:	00 14 86             	add    %dl,(%esi,%eax,4)
 5bf:	04 00                	add    $0x0,%al
 5c1:	00 01                	add    %al,(%ecx)
 5c3:	0c 8c                	or     $0x8c,%al
 5c5:	04 00                	add    $0x0,%al
 5c7:	00 00                	add    %al,(%eax)
 5c9:	1b 01                	sbb    (%ecx),%eax
 5cb:	38 02                	cmp    %al,(%edx)
 5cd:	00 00                	add    %al,(%eax)
 5cf:	01 01                	add    %eax,(%ecx)
 5d1:	43                   	inc    %ebx
 5d2:	04 00                	add    $0x0,%al
 5d4:	00 4a 04             	add    %cl,0x4(%edx)
 5d7:	00 00                	add    %al,(%eax)
 5d9:	14 86                	adc    $0x86,%al
 5db:	04 00                	add    $0x0,%al
 5dd:	00 01                	add    %al,(%ecx)
 5df:	00 1c 01             	add    %bl,(%ecx,%eax,1)
 5e2:	66 6f                	outsw  %ds:(%esi),(%dx)
 5e4:	6f                   	outsl  %ds:(%esi),(%dx)
 5e5:	00 01                	add    %al,(%ecx)
 5e7:	09 7b 03             	or     %edi,0x3(%ebx)
 5ea:	00 00                	add    %al,(%eax)
 5ec:	01 02                	add    %eax,(%edx)
 5ee:	10 00                	adc    %al,(%eax)
 5f0:	fa                   	cli    
 5f1:	03 00                	add    (%eax),%eax
 5f3:	00 01                	add    %al,(%ecx)
 5f5:	63 04 00             	arpl   %ax,(%eax,%eax,1)
 5f8:	00 14 86             	add    %dl,(%esi,%eax,4)
 5fb:	04 00                	add    $0x0,%al
 5fd:	00 01                	add    %al,(%ecx)
 5ff:	00 00                	add    %al,(%eax)
 601:	1d 53 00 00 00       	sbb    $0x53,%eax
 606:	76 04                	jbe    60c <_init-0x8047e80>
 608:	00 00                	add    %al,(%eax)
 60a:	1e                   	push   %ds
 60b:	00 06                	add    %al,(%esi)
 60d:	04 7c                	add    $0x7c,%al
 60f:	04 00                	add    $0x0,%al
 611:	00 1f                	add    %bl,(%edi)
 613:	04 b1                	add    $0xb1,%al
 615:	05 00 00 6b 04       	add    $0x46b0000,%eax
 61a:	00 00                	add    %al,(%eax)
 61c:	06                   	push   %es
 61d:	04 fa                	add    $0xfa,%al
 61f:	03 00                	add    (%eax),%eax
 621:	00 20                	add    %ah,(%eax)
 623:	04 92                	add    $0x92,%al
 625:	04 00                	add    $0x0,%al
 627:	00 07                	add    %al,(%edi)
 629:	fa                   	cli    
 62a:	03 00                	add    (%eax),%eax
 62c:	00 21                	add    %ah,(%ecx)
 62e:	4a                   	dec    %edx
 62f:	04 00                	add    $0x0,%al
 631:	00 b4 8a 04 08 b9 8a 	add    %dh,-0x7546f7fc(%edx,%ecx,4)
 638:	04 08                	add    $0x8,%al
 63a:	24 01                	and    $0x1,%al
 63c:	00 00                	add    %al,(%eax)
 63e:	b0 04                	mov    $0x4,%al
 640:	00 00                	add    %al,(%eax)
 642:	be 04 00 00 22       	mov    $0x22000004,%esi
 647:	86 04 00             	xchg   %al,(%eax,%eax,1)
 64a:	00 be 04 00 00 01    	add    %bh,0x1000004(%esi)
 650:	02 91 00 00 07 86    	add    -0x79f90000(%ecx),%dl
 656:	04 00                	add    $0x0,%al
 658:	00 23                	add    %ah,(%ebx)
 65a:	33 04 00             	xor    (%eax,%eax,1),%eax
 65d:	00 01                	add    %al,(%ecx)
 65f:	08 02                	or     %al,(%edx)
 661:	d3 04 00             	roll   %cl,(%eax,%eax,1)
 664:	00 de                	add    %bl,%dh
 666:	04 00                	add    $0x0,%al
 668:	00 24 86             	add    %ah,(%esi,%eax,4)
 66b:	04 00                	add    $0x0,%al
 66d:	00 be 04 00 00 01    	add    %bh,0x1000004(%esi)
 673:	00 25 c3 04 00 00    	add    %ah,0x4c3
 679:	ba 8a 04 08 c8       	mov    $0xc808048a,%edx
 67e:	8a 04 08             	mov    (%eax,%ecx,1),%al
 681:	5c                   	pop    %esp
 682:	01 00                	add    %eax,(%eax)
 684:	00 f7                	add    %dh,%bh
 686:	04 00                	add    $0x0,%al
 688:	00 00                	add    %al,(%eax)
 68a:	05 00 00 26 d3       	add    $0xd3260000,%eax
 68f:	04 00                	add    $0x0,%al
 691:	00 02                	add    %al,(%edx)
 693:	91                   	xchg   %eax,%ecx
 694:	00 00                	add    %al,(%eax)
 696:	27                   	daa    
 697:	01 56 05             	add    %edx,0x5(%esi)
 69a:	00 00                	add    %al,(%eax)
 69c:	01 12                	add    %edx,(%edx)
 69e:	6f                   	outsl  %ds:(%esi),(%dx)
 69f:	00 00                	add    %al,(%eax)
 6a1:	00 c8                	add    %cl,%al
 6a3:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 6a6:	fd                   	std    
 6a7:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 6aa:	94                   	xchg   %eax,%esp
 6ab:	01 00                	add    %eax,(%eax)
 6ad:	00 2b                	add    %ch,(%ebx)
 6af:	05 00 00 28 8b       	add    $0x8b280000,%eax
 6b4:	04 00                	add    $0x0,%al
 6b6:	00 01                	add    %al,(%ecx)
 6b8:	12 78 00             	adc    0x0(%eax),%bh
 6bb:	00 00                	add    %al,(%eax)
 6bd:	02 91 00 00 06 04    	add    0x4060000(%ecx),%dl
 6c3:	31 05 00 00 07 7a    	xor    %eax,0x7a070000
 6c9:	02 00                	add    (%eax),%al
 6cb:	00 21                	add    %ah,(%ecx)
 6cd:	80 02 00             	addb   $0x0,(%edx)
 6d0:	00 c8                	add    %cl,%al
 6d2:	8a 04 08             	mov    (%eax,%ecx,1),%al
 6d5:	eb 8a                	jmp    661 <_init-0x8047e2b>
 6d7:	04 08                	add    $0x8,%al
 6d9:	cc                   	int3   
 6da:	01 00                	add    %eax,(%eax)
 6dc:	00 4f 05             	add    %cl,0x5(%edi)
 6df:	00 00                	add    %al,(%eax)
 6e1:	5d                   	pop    %ebp
 6e2:	05 00 00 22 86       	add    $0x86220000,%eax
 6e7:	04 00                	add    $0x0,%al
 6e9:	00 5d 05             	add    %bl,0x5(%ebp)
 6ec:	00 00                	add    %al,(%eax)
 6ee:	01 02                	add    %eax,(%edx)
 6f0:	91                   	xchg   %eax,%ecx
 6f1:	00 00                	add    %al,(%eax)
 6f3:	07                   	pop    %es
 6f4:	2b 05 00 00 29 01    	sub    0x1290000,%eax
 6fa:	18 06                	sbb    %al,(%esi)
 6fc:	00 00                	add    %al,(%eax)
 6fe:	01 33                	add    %esi,(%ebx)
 700:	fd                   	std    
 701:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 704:	46                   	inc    %esi
 705:	88 04 08             	mov    %al,(%eax,%ecx,1)
 708:	04 02                	add    $0x2,%al
 70a:	00 00                	add    %al,(%eax)
 70c:	bd 05 00 00 28       	mov    $0x28000005,%ebp
 711:	a1 02 00 00 01       	mov    0x1000002,%eax
 716:	33 6f 00             	xor    0x0(%edi),%ebp
 719:	00 00                	add    %al,(%eax)
 71b:	02 91 00 28 ca 02    	add    0x2ca2800(%ecx),%dl
 721:	00 00                	add    %al,(%eax)
 723:	01 34 9e             	add    %esi,(%esi,%ebx,4)
 726:	02 00                	add    (%eax),%al
 728:	00 02                	add    %al,(%edx)
 72a:	91                   	xchg   %eax,%ecx
 72b:	04 28                	add    $0x28,%al
 72d:	50                   	push   %eax
 72e:	01 00                	add    %eax,(%eax)
 730:	00 01                	add    %al,(%ecx)
 732:	35 af 02 00 00       	xor    $0x2af,%eax
 737:	02 91 08 2a 03 88    	add    -0x77fcd5f8(%ecx),%dl
 73d:	04 08                	add    $0x8,%al
 73f:	46                   	inc    %esi
 740:	88 04 08             	mov    %al,(%eax,%ecx,1)
 743:	2b 03                	sub    (%ebx),%eax
 745:	06                   	push   %es
 746:	00 00                	add    %al,(%eax)
 748:	01 39                	add    %edi,(%ecx)
 74a:	bd 05 00 00 02       	mov    $0x2000005,%ebp
 74f:	91                   	xchg   %eax,%ecx
 750:	6c                   	insb   (%dx),%es:(%edi)
 751:	00 00                	add    %al,(%eax)
 753:	06                   	push   %es
 754:	04 ba                	add    $0xba,%al
 756:	01 00                	add    %eax,(%eax)
 758:	00 2c 01             	add    %ch,(%ecx,%eax,1)
 75b:	24 06                	and    $0x6,%al
 75d:	00 00                	add    %al,(%eax)
 75f:	01 47 46             	add    %eax,0x46(%edi)
 762:	88 04 08             	mov    %al,(%eax,%ecx,1)
 765:	5a                   	pop    %edx
 766:	88 04 08             	mov    %al,(%eax,%ecx,1)
 769:	30 02                	xor    %al,(%edx)
 76b:	00 00                	add    %al,(%eax)
 76d:	2c 01                	sub    $0x1,%al
 76f:	46                   	inc    %esi
 770:	05 00 00 01 4c       	add    $0x4c010000,%eax
 775:	5a                   	pop    %edx
 776:	88 04 08             	mov    %al,(%eax,%ecx,1)
 779:	6e                   	outsb  %ds:(%esi),(%dx)
 77a:	88 04 08             	mov    %al,(%eax,%ecx,1)
 77d:	68 02 00 00 2d       	push   $0x2d000002
 782:	07                   	pop    %es
 783:	03 00                	add    (%eax),%eax
 785:	00 02                	add    %al,(%edx)
 787:	f9                   	stc    
 788:	05 00 00 1c 06       	add    $0x61c0000,%eax
 78d:	00 00                	add    %al,(%eax)
 78f:	24 86                	and    $0x86,%al
 791:	04 00                	add    $0x0,%al
 793:	00 1c 06             	add    %bl,(%esi,%eax,1)
 796:	00 00                	add    %al,(%eax)
 798:	01 2e                	add    %ebp,(%esi)
 79a:	08 03                	or     %al,(%ebx)
 79c:	00 00                	add    %al,(%eax)
 79e:	01 62 27             	add    %esp,0x27(%edx)
 7a1:	03 00                	add    (%eax),%eax
 7a3:	00 2f                	add    %ch,(%edi)
 7a5:	30 4b 04             	xor    %cl,0x4(%ebx)
 7a8:	00 00                	add    %al,(%eax)
 7aa:	01 63 bb             	add    %esp,-0x45(%ebx)
 7ad:	02 00                	add    (%eax),%al
 7af:	00 00                	add    %al,(%eax)
 7b1:	00 07                	add    %al,(%edi)
 7b3:	21 03                	and    %eax,(%ebx)
 7b5:	00 00                	add    %al,(%eax)
 7b7:	25 eb 05 00 00       	and    $0x5eb,%eax
 7bc:	ec                   	in     (%dx),%al
 7bd:	8a 04 08             	mov    (%eax,%ecx,1),%al
 7c0:	30 8b 04 08 a0 02    	xor    %cl,0x2a00804(%ebx)
 7c6:	00 00                	add    %al,(%eax)
 7c8:	3a 06                	cmp    (%esi),%al
 7ca:	00 00                	add    %al,(%eax)
 7cc:	5d                   	pop    %ebp
 7cd:	06                   	push   %es
 7ce:	00 00                	add    %al,(%eax)
 7d0:	26                   	es
 7d1:	f9                   	stc    
 7d2:	05 00 00 02 91       	add    $0x91020000,%eax
 7d7:	00 26                	add    %ah,(%esi)
 7d9:	03 06                	add    (%esi),%eax
 7db:	00 00                	add    %al,(%eax)
 7dd:	02 91 04 2a f2 8a    	add    -0x750dd5fc(%ecx),%dl
 7e3:	04 08                	add    $0x8,%al
 7e5:	2e 8b 04 08          	mov    %cs:(%eax,%ecx,1),%eax
 7e9:	31 0f                	xor    %ecx,(%edi)
 7eb:	06                   	push   %es
 7ec:	00 00                	add    %al,(%eax)
 7ee:	02 91 74 00 00 2d    	add    0x2d000074(%ecx),%dl
 7f4:	55                   	push   %ebp
 7f5:	03 00                	add    (%eax),%eax
 7f7:	00 02                	add    %al,(%edx)
 7f9:	6b 06 00             	imul   $0x0,(%esi),%eax
 7fc:	00 8e 06 00 00 24    	add    %cl,0x24000006(%esi)
 802:	86 04 00             	xchg   %al,(%eax,%eax,1)
 805:	00 8e 06 00 00 01    	add    %cl,0x1000006(%esi)
 80b:	2e 08 03             	or     %al,%cs:(%ebx)
 80e:	00 00                	add    %al,(%eax)
 810:	01 75 27             	add    %esi,0x27(%ebp)
 813:	03 00                	add    (%eax),%eax
 815:	00 2f                	add    %ch,(%edi)
 817:	30 4b 04             	xor    %cl,0x4(%ebx)
 81a:	00 00                	add    %al,(%eax)
 81c:	01 76 bb             	add    %esi,-0x45(%esi)
 81f:	02 00                	add    (%eax),%al
 821:	00 00                	add    %al,(%eax)
 823:	00 07                	add    %al,(%edi)
 825:	6f                   	outsl  %ds:(%esi),(%dx)
 826:	03 00                	add    (%eax),%eax
 828:	00 25 5d 06 00 00    	add    %ah,0x65d
 82e:	30 8b 04 08 65 8b    	xor    %cl,-0x749af7fc(%ebx)
 834:	04 08                	add    $0x8,%al
 836:	d8 02                	fadds  (%edx)
 838:	00 00                	add    %al,(%eax)
 83a:	ac                   	lods   %ds:(%esi),%al
 83b:	06                   	push   %es
 83c:	00 00                	add    %al,(%eax)
 83e:	cf                   	iret   
 83f:	06                   	push   %es
 840:	00 00                	add    %al,(%eax)
 842:	26 6b 06 00          	imul   $0x0,%es:(%esi),%eax
 846:	00 02                	add    %al,(%edx)
 848:	91                   	xchg   %eax,%ecx
 849:	00 26                	add    %ah,(%esi)
 84b:	75 06                	jne    853 <_init-0x8047c39>
 84d:	00 00                	add    %al,(%eax)
 84f:	02 91 04 2a 36 8b    	add    -0x74c9d5fc(%ecx),%dl
 855:	04 08                	add    $0x8,%al
 857:	63 8b 04 08 31 81    	arpl   %cx,-0x7ecef7fc(%ebx)
 85d:	06                   	push   %es
 85e:	00 00                	add    %al,(%eax)
 860:	02 91 74 00 00 2d    	add    0x2d000074(%ecx),%dl
 866:	b8 03 00 00 02       	mov    $0x2000003,%eax
 86b:	dd 06                	fldl   (%esi)
 86d:	00 00                	add    %al,(%eax)
 86f:	00 07                	add    %al,(%edi)
 871:	00 00                	add    %al,(%eax)
 873:	24 86                	and    $0x86,%al
 875:	04 00                	add    $0x0,%al
 877:	00 00                	add    %al,(%eax)
 879:	07                   	pop    %es
 87a:	00 00                	add    %al,(%eax)
 87c:	01 2e                	add    %ebp,(%esi)
 87e:	08 03                	or     %al,(%ebx)
 880:	00 00                	add    %al,(%eax)
 882:	01 82 27 03 00 00    	add    %eax,0x327(%edx)
 888:	2f                   	das    
 889:	30 4b 04             	xor    %cl,0x4(%ebx)
 88c:	00 00                	add    %al,(%eax)
 88e:	01 83 bb 02 00 00    	add    %eax,0x2bb(%ebx)
 894:	00 00                	add    %al,(%eax)
 896:	07                   	pop    %es
 897:	d2 03                	rolb   %cl,(%ebx)
 899:	00 00                	add    %al,(%eax)
 89b:	25 cf 06 00 00       	and    $0x6cf,%eax
 8a0:	66 8b 04 08          	mov    (%eax,%ecx,1),%ax
 8a4:	b9 8b 04 08 10       	mov    $0x1008048b,%ecx
 8a9:	03 00                	add    (%eax),%eax
 8ab:	00 1e                	add    %bl,(%esi)
 8ad:	07                   	pop    %es
 8ae:	00 00                	add    %al,(%eax)
 8b0:	41                   	inc    %ecx
 8b1:	07                   	pop    %es
 8b2:	00 00                	add    %al,(%eax)
 8b4:	26 dd 06             	fldl   %es:(%esi)
 8b7:	00 00                	add    %al,(%eax)
 8b9:	02 91 00 26 e7 06    	add    0x6e72600(%ecx),%dl
 8bf:	00 00                	add    %al,(%eax)
 8c1:	02 91 04 2a 6c 8b    	add    -0x7493d5fc(%ecx),%dl
 8c7:	04 08                	add    $0x8,%al
 8c9:	b7 8b                	mov    $0x8b,%bh
 8cb:	04 08                	add    $0x8,%al
 8cd:	31 f3                	xor    %esi,%ebx
 8cf:	06                   	push   %es
 8d0:	00 00                	add    %al,(%eax)
 8d2:	02 91 74 00 00 27    	add    0x27000074(%ecx),%dl
 8d8:	01 97 04 00 00 01    	add    %edx,0x1000004(%edi)
 8de:	9d                   	popf   
 8df:	0f 01 00             	sgdtl  (%eax)
 8e2:	00 6e 88             	add    %ch,-0x78(%esi)
 8e5:	04 08                	add    $0x8,%al
 8e7:	75 8a                	jne    873 <_init-0x8047c19>
 8e9:	04 08                	add    $0x8,%al
 8eb:	48                   	dec    %eax
 8ec:	03 00                	add    (%eax),%eax
 8ee:	00 c2                	add    %al,%dl
 8f0:	08 00                	or     %al,(%eax)
 8f2:	00 28                	add    %ch,(%eax)
 8f4:	39 01                	cmp    %eax,(%ecx)
 8f6:	00 00                	add    %al,(%eax)
 8f8:	01 9e 53 00 00 00    	add    %ebx,0x53(%esi)
 8fe:	02 91 00 28 77 05    	add    0x5772800(%ecx),%dl
 904:	00 00                	add    %al,(%eax)
 906:	01 9f 86 01 00 00    	add    %ebx,0x186(%edi)
 90c:	02 91 04 28 d7 01    	add    0x1d72804(%ecx),%dl
 912:	00 00                	add    %al,(%eax)
 914:	01 a0 a0 00 00 00    	add    %esp,0xa0(%eax)
 91a:	03 91 98 7f 28 35    	add    0x35287f98(%ecx),%edx
 920:	05 00 00 01 a1       	add    $0xa1010000,%eax
 925:	3b 01                	cmp    (%ecx),%eax
 927:	00 00                	add    %al,(%eax)
 929:	02 91 10 28 f2 02    	add    0x2f22810(%ecx),%dl
 92f:	00 00                	add    %al,(%eax)
 931:	01 a2 91 01 00 00    	add    %esp,0x191(%edx)
 937:	02 91 14 2a ae 88    	add    -0x7751d5ec(%ecx),%dl
 93d:	04 08                	add    $0x8,%al
 93f:	62 8a 04 08 2b 0d    	bound  %ecx,0xd2b0804(%edx)
 945:	03 00                	add    (%eax),%eax
 947:	00 01                	add    %al,(%ecx)
 949:	ad                   	lods   %ds:(%esi),%eax
 94a:	ab                   	stos   %eax,%es:(%edi)
 94b:	00 00                	add    %al,(%eax)
 94d:	00 03                	add    %al,(%ebx)
 94f:	91                   	xchg   %eax,%ecx
 950:	ac                   	lods   %ds:(%esi),%al
 951:	7f 2b                	jg     97e <_init-0x8047b0e>
 953:	08 03                	or     %al,(%ebx)
 955:	00 00                	add    %al,(%eax)
 957:	01 b0 bb 02 00 00    	add    %esi,0x2bb(%eax)
 95d:	03 91 a8 7f 2b 03    	add    0x32b7fa8(%ecx),%edx
 963:	06                   	push   %es
 964:	00 00                	add    %al,(%eax)
 966:	01 b3 d1 02 00 00    	add    %esi,0x2d1(%ebx)
 96c:	02 91 6b 2b a4 03    	add    0x3a42b6b(%ecx),%dl
 972:	00 00                	add    %al,(%eax)
 974:	01 b8 c2 08 00 00    	add    %edi,0x8c2(%eax)
 97a:	03 91 b0 7f 2b 00    	add    0x2b7fb0(%ecx),%edx
 980:	06                   	push   %es
 981:	00 00                	add    %al,(%eax)
 983:	01 bb 2d 03 00 00    	add    %edi,0x32d(%ebx)
 989:	02 91 6e 2b 77 01    	add    0x1772b6e(%ecx),%dl
 98f:	00 00                	add    %al,(%eax)
 991:	01 be c2 08 00 00    	add    %edi,0x8c2(%esi)
 997:	03 91 b4 7f 2b b9    	add    -0x46d4804c(%ecx),%edx
 99d:	02 00                	add    (%eax),%al
 99f:	00 01                	add    %al,(%ecx)
 9a1:	c1 c2 08             	rol    $0x8,%edx
 9a4:	00 00                	add    %al,(%eax)
 9a6:	03 91 b8 7f 2a 26    	add    0x262a7fb8(%ecx),%edx
 9ac:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 9af:	4a                   	dec    %edx
 9b0:	8a 04 08             	mov    (%eax,%ecx,1),%al
 9b3:	32 63 73             	xor    0x73(%ebx),%ah
 9b6:	00 01                	add    %al,(%ecx)
 9b8:	d1                   	(bad)  
 9b9:	75 03                	jne    9be <_init-0x8047ace>
 9bb:	00 00                	add    %al,(%eax)
 9bd:	02 91 67 2b 60 04    	add    0x4602b67(%ecx),%dl
 9c3:	00 00                	add    %al,(%eax)
 9c5:	01 d6                	add    %edx,%esi
 9c7:	ab                   	stos   %eax,%es:(%edi)
 9c8:	00 00                	add    %al,(%eax)
 9ca:	00 03                	add    %al,(%ebx)
 9cc:	91                   	xchg   %eax,%ecx
 9cd:	bc 7f 2b a0 01       	mov    $0x1a02b7f,%esp
 9d2:	00 00                	add    %al,(%eax)
 9d4:	01 db                	add    %ebx,%ebx
 9d6:	ab                   	stos   %eax,%es:(%edi)
 9d7:	00 00                	add    %al,(%eax)
 9d9:	00 02                	add    %al,(%edx)
 9db:	91                   	xchg   %eax,%ecx
 9dc:	40                   	inc    %eax
 9dd:	2b 6f 05             	sub    0x5(%edi),%ebp
 9e0:	00 00                	add    %al,(%eax)
 9e2:	01 dc                	add    %ebx,%esp
 9e4:	ab                   	stos   %eax,%es:(%edi)
 9e5:	00 00                	add    %al,(%eax)
 9e7:	00 02                	add    %al,(%edx)
 9e9:	91                   	xchg   %eax,%ecx
 9ea:	44                   	inc    %esp
 9eb:	32 72 30             	xor    0x30(%edx),%dh
 9ee:	00 01                	add    %al,(%ecx)
 9f0:	f4                   	hlt    
 9f1:	53                   	push   %ebx
 9f2:	00 00                	add    %al,(%eax)
 9f4:	00 02                	add    %al,(%edx)
 9f6:	91                   	xchg   %eax,%ecx
 9f7:	5c                   	pop    %esp
 9f8:	32 72 31             	xor    0x31(%edx),%dh
 9fb:	00 01                	add    %al,(%ecx)
 9fd:	f5                   	cmc    
 9fe:	53                   	push   %ebx
 9ff:	00 00                	add    %al,(%eax)
 a01:	00 02                	add    %al,(%edx)
 a03:	91                   	xchg   %eax,%ecx
 a04:	60                   	pusha  
 a05:	2a 97 89 04 08 e2    	sub    -0x1df7fb77(%edi),%dl
 a0b:	89 04 08             	mov    %eax,(%eax,%ecx,1)
 a0e:	2b fa                	sub    %edx,%edi
 a10:	02 00                	add    (%eax),%al
 a12:	00 01                	add    %al,(%ecx)
 a14:	e7 c7                	out    %eax,$0xc7
 a16:	08 00                	or     %al,(%eax)
 a18:	00 02                	add    %al,(%edx)
 a1a:	91                   	xchg   %eax,%ecx
 a1b:	48                   	dec    %eax
 a1c:	2b b2 02 00 00 01    	sub    0x1000002(%edx),%esi
 a22:	e8 c2 08 00 00       	call   12e9 <_init-0x80471a3>
 a27:	02 91 4c 2b 1b 01    	add    0x11b2b4c(%ecx),%dl
 a2d:	00 00                	add    %al,(%eax)
 a2f:	01 ec                	add    %ebp,%esp
 a31:	53                   	push   %ebx
 a32:	00 00                	add    %al,(%eax)
 a34:	00 02                	add    %al,(%edx)
 a36:	91                   	xchg   %eax,%ecx
 a37:	50                   	push   %eax
 a38:	2b d9                	sub    %ecx,%ebx
 a3a:	03 00                	add    (%eax),%eax
 a3c:	00 01                	add    %al,(%ecx)
 a3e:	ed                   	in     (%dx),%eax
 a3f:	8e 00                	mov    (%eax),%es
 a41:	00 00                	add    %al,(%eax)
 a43:	02 91 54 2b fb 03    	add    0x3fb2b54(%ecx),%dl
 a49:	00 00                	add    %al,(%eax)
 a4b:	01 ef                	add    %ebp,%edi
 a4d:	2b 05 00 00 02 91    	sub    0x91020000,%eax
 a53:	58                   	pop    %eax
 a54:	00 00                	add    %al,(%eax)
 a56:	00 00                	add    %al,(%eax)
 a58:	07                   	pop    %es
 a59:	bb 02 00 00 07       	mov    $0x7000002,%ebx
 a5e:	78 00                	js     a60 <_init-0x8047a2c>
 a60:	00 00                	add    %al,(%eax)
 a62:	33 ac 04 00 00 01 75 	xor    0x75010000(%esp,%eax,1),%ebp
 a69:	8a 04 08             	mov    (%eax,%ecx,1),%al
 a6c:	98                   	cwtl   
 a6d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 a70:	80 03 00             	addb   $0x0,(%ebx)
 a73:	00 01                	add    %al,(%ecx)
 a75:	09 00                	or     %eax,(%eax)
 a77:	00 34 24             	add    %dh,(%esp)
 a7a:	03 00                	add    (%eax),%eax
 a7c:	00 01                	add    %al,(%ecx)
 a7e:	05 01 53 00 00       	add    $0x5301,%eax
 a83:	00 02                	add    %al,(%edx)
 a85:	91                   	xchg   %eax,%ecx
 a86:	00 34 7b             	add    %dh,(%ebx,%edi,2)
 a89:	04 00                	add    $0x0,%al
 a8b:	00 01                	add    %al,(%ecx)
 a8d:	05 01 53 00 00       	add    $0x5301,%eax
 a92:	00 02                	add    %al,(%edx)
 a94:	91                   	xchg   %eax,%ecx
 a95:	04 00                	add    $0x0,%al
 a97:	35 b6 03 00 00       	xor    $0x3b6,%eax
 a9c:	01 98 8a 04 08 b4    	add    %ebx,-0x4bf7fb76(%eax)
 aa2:	8a 04 08             	mov    (%eax,%ecx,1),%al
 aa5:	b8 03 00 00 36       	mov    $0x36000003,%eax
 aaa:	71 00                	jno    aac <_init-0x80479e0>
 aac:	00 00                	add    %al,(%eax)
 aae:	23 09                	and    (%ecx),%ecx
 ab0:	00 00                	add    %al,(%eax)
 ab2:	37                   	aaa    
 ab3:	37                   	aaa    
 ab4:	00 00                	add    %al,(%eax)
 ab6:	00 fe                	add    %bh,%dh
 ab8:	00 38                	add    %bh,(%eax)
 aba:	41                   	inc    %ecx
 abb:	01 00                	add    %eax,(%eax)
 abd:	00 01                	add    %al,(%ecx)
 abf:	0e                   	push   %cs
 ac0:	13 09                	adc    (%ecx),%ecx
 ac2:	00 00                	add    %al,(%eax)
 ac4:	01 05 03 80 b0 04    	add    %eax,0x4b08003
 aca:	08 39                	or     %bh,(%ecx)
 acc:	e9 03 00 00 05       	jmp    5000ad4 <_init-0x30479b8>
 ad1:	03 60 b0             	add    -0x50(%eax),%esp
 ad4:	04 08                	add    $0x8,%al
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 01                	adc    (%ecx),%al
   f:	10 06                	adc    %al,(%esi)
  11:	00 00                	add    %al,(%eax)
  13:	02 2e                	add    (%esi),%ch
  15:	00 3f                	add    %bh,(%edi)
  17:	0c 03                	or     $0x3,%al
  19:	0e                   	push   %cs
  1a:	3a 0b                	cmp    (%ebx),%cl
  1c:	3b 0b                	cmp    (%ebx),%ecx
  1e:	49                   	dec    %ecx
  1f:	13 11                	adc    (%ecx),%edx
  21:	01 12                	add    %edx,(%edx)
  23:	01 40 06             	add    %eax,0x6(%eax)
  26:	00 00                	add    %al,(%eax)
  28:	03 24 00             	add    (%eax,%eax,1),%esp
  2b:	0b 0b                	or     (%ebx),%ecx
  2d:	3e 0b 03             	or     %ds:(%ebx),%eax
  30:	08 00                	or     %al,(%eax)
  32:	00 00                	add    %al,(%eax)
  34:	01 11                	add    %edx,(%ecx)
  36:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
  3c:	0e                   	push   %cs
  3d:	1b 0e                	sbb    (%esi),%ecx
  3f:	11 01                	adc    %eax,(%ecx)
  41:	12 01                	adc    (%ecx),%al
  43:	10 06                	adc    %al,(%esi)
  45:	00 00                	add    %al,(%eax)
  47:	02 24 00             	add    (%eax,%eax,1),%ah
  4a:	0b 0b                	or     (%ebx),%ecx
  4c:	3e 0b 03             	or     %ds:(%ebx),%eax
  4f:	0e                   	push   %cs
  50:	00 00                	add    %al,(%eax)
  52:	03 24 00             	add    (%eax,%eax,1),%esp
  55:	0b 0b                	or     (%ebx),%ecx
  57:	3e 0b 03             	or     %ds:(%ebx),%eax
  5a:	08 00                	or     %al,(%eax)
  5c:	00 04 13             	add    %al,(%ebx,%edx,1)
  5f:	00 03                	add    %al,(%ebx)
  61:	0e                   	push   %cs
  62:	0b 0b                	or     (%ebx),%ecx
  64:	3a 0b                	cmp    (%ebx),%cl
  66:	3b 0b                	cmp    (%ebx),%ecx
  68:	00 00                	add    %al,(%eax)
  6a:	05 2e 00 3f 0c       	add    $0xc3f002e,%eax
  6f:	03 0e                	add    (%esi),%ecx
  71:	3a 0b                	cmp    (%ebx),%cl
  73:	3b 0b                	cmp    (%ebx),%ecx
  75:	87 40 0e             	xchg   %eax,0xe(%eax)
  78:	11 01                	adc    %eax,(%ecx)
  7a:	12 01                	adc    (%ecx),%al
  7c:	40                   	inc    %eax
  7d:	06                   	push   %es
  7e:	00 00                	add    %al,(%eax)
  80:	06                   	push   %es
  81:	2e 01 3f             	add    %edi,%cs:(%edi)
  84:	0c 03                	or     $0x3,%al
  86:	0e                   	push   %cs
  87:	3a 0b                	cmp    (%ebx),%cl
  89:	3b 0b                	cmp    (%ebx),%ecx
  8b:	87 40 0e             	xchg   %eax,0xe(%eax)
  8e:	11 01                	adc    %eax,(%ecx)
  90:	12 01                	adc    (%ecx),%al
  92:	40                   	inc    %eax
  93:	06                   	push   %es
  94:	01 13                	add    %edx,(%ebx)
  96:	00 00                	add    %al,(%eax)
  98:	07                   	pop    %es
  99:	0b 01                	or     (%ecx),%eax
  9b:	11 01                	adc    %eax,(%ecx)
  9d:	12 01                	adc    (%ecx),%al
  9f:	01 13                	add    %edx,(%ebx)
  a1:	00 00                	add    %al,(%eax)
  a3:	08 34 00             	or     %dh,(%eax,%eax,1)
  a6:	49                   	dec    %ecx
  a7:	13 02                	adc    (%edx),%eax
  a9:	0a 00                	or     (%eax),%al
  ab:	00 09                	add    %cl,(%ecx)
  ad:	0b 01                	or     (%ecx),%eax
  af:	11 01                	adc    %eax,(%ecx)
  b1:	12 01                	adc    (%ecx),%al
  b3:	00 00                	add    %al,(%eax)
  b5:	0a 26                	or     (%esi),%ah
  b7:	00 49 13             	add    %cl,0x13(%ecx)
  ba:	00 00                	add    %al,(%eax)
  bc:	0b 10                	or     (%eax),%edx
  be:	00 0b                	add    %cl,(%ebx)
  c0:	0b 49 13             	or     0x13(%ecx),%ecx
  c3:	00 00                	add    %al,(%eax)
  c5:	0c 0b                	or     $0xb,%al
  c7:	01 55 06             	add    %edx,0x6(%ebp)
  ca:	01 13                	add    %edx,(%ebx)
  cc:	00 00                	add    %al,(%eax)
  ce:	0d 0b 01 55 06       	or     $0x655010b,%eax
  d3:	00 00                	add    %al,(%eax)
  d5:	0e                   	push   %cs
  d6:	2e 00 3f             	add    %bh,%cs:(%edi)
  d9:	0c 03                	or     $0x3,%al
  db:	0e                   	push   %cs
  dc:	3a 0b                	cmp    (%ebx),%cl
  de:	3b 0b                	cmp    (%ebx),%ecx
  e0:	11 01                	adc    %eax,(%ecx)
  e2:	12 01                	adc    (%ecx),%al
  e4:	40                   	inc    %eax
  e5:	06                   	push   %es
  e6:	00 00                	add    %al,(%eax)
  e8:	00 01                	add    %al,(%ecx)
  ea:	11 01                	adc    %eax,(%ecx)
  ec:	25 0e 13 0b 03       	and    $0x30b130e,%eax
  f1:	0e                   	push   %cs
  f2:	1b 0e                	sbb    (%esi),%ecx
  f4:	11 01                	adc    %eax,(%ecx)
  f6:	52                   	push   %edx
  f7:	01 55 06             	add    %edx,0x6(%ebp)
  fa:	10 06                	adc    %al,(%esi)
  fc:	00 00                	add    %al,(%eax)
  fe:	02 24 00             	add    (%eax,%eax,1),%ah
 101:	0b 0b                	or     (%ebx),%ecx
 103:	3e 0b 03             	or     %ds:(%ebx),%eax
 106:	0e                   	push   %cs
 107:	00 00                	add    %al,(%eax)
 109:	03 24 00             	add    (%eax,%eax,1),%esp
 10c:	0b 0b                	or     (%ebx),%ecx
 10e:	3e 0b 03             	or     %ds:(%ebx),%eax
 111:	08 00                	or     %al,(%eax)
 113:	00 04 0f             	add    %al,(%edi,%ecx,1)
 116:	00 0b                	add    %cl,(%ebx)
 118:	0b 00                	or     (%eax),%eax
 11a:	00 05 16 00 03 0e    	add    %al,0xe030016
 120:	3a 0b                	cmp    (%ebx),%cl
 122:	3b 0b                	cmp    (%ebx),%ecx
 124:	49                   	dec    %ecx
 125:	13 00                	adc    (%eax),%eax
 127:	00 06                	add    %al,(%esi)
 129:	0f 00 0b             	str    (%ebx)
 12c:	0b 49 13             	or     0x13(%ecx),%ecx
 12f:	00 00                	add    %al,(%eax)
 131:	07                   	pop    %es
 132:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 136:	00 00                	add    %al,(%eax)
 138:	08 26                	or     %ah,(%esi)
 13a:	00 00                	add    %al,(%eax)
 13c:	00 09                	add    %cl,(%ecx)
 13e:	04 01                	add    $0x1,%al
 140:	0b 0b                	or     (%ebx),%ecx
 142:	3a 0b                	cmp    (%ebx),%cl
 144:	3b 0b                	cmp    (%ebx),%ecx
 146:	87 40 0e             	xchg   %eax,0xe(%eax)
 149:	01 13                	add    %edx,(%ebx)
 14b:	00 00                	add    %al,(%eax)
 14d:	0a 28                	or     (%eax),%ch
 14f:	00 03                	add    %al,(%ebx)
 151:	0e                   	push   %cs
 152:	1c 0d                	sbb    $0xd,%al
 154:	00 00                	add    %al,(%eax)
 156:	0b 15 01 01 13 00    	or     0x130101,%edx
 15c:	00 0c 05 00 49 13 00 	add    %cl,0x134900(,%eax,1)
 163:	00 0d 13 01 03 0e    	add    %cl,0xe030113
 169:	0b 0b                	or     (%ebx),%ecx
 16b:	3a 0b                	cmp    (%ebx),%cl
 16d:	3b 0b                	cmp    (%ebx),%ecx
 16f:	01 13                	add    %edx,(%ebx)
 171:	00 00                	add    %al,(%eax)
 173:	0e                   	push   %cs
 174:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
 179:	0b 3b                	or     (%ebx),%edi
 17b:	0b 49 13             	or     0x13(%ecx),%ecx
 17e:	38 0a                	cmp    %cl,(%edx)
 180:	00 00                	add    %al,(%eax)
 182:	0f 13 00             	movlps %xmm0,(%eax)
 185:	03 0e                	add    (%esi),%ecx
 187:	3c 0c                	cmp    $0xc,%al
 189:	00 00                	add    %al,(%eax)
 18b:	10 15 00 00 00 11    	adc    %dl,0x11000000
 191:	39 01                	cmp    %eax,(%ecx)
 193:	03 08                	add    (%eax),%ecx
 195:	3a 0b                	cmp    (%ebx),%cl
 197:	3b 0b                	cmp    (%ebx),%ecx
 199:	01 13                	add    %edx,(%ebx)
 19b:	00 00                	add    %al,(%eax)
 19d:	12 02                	adc    (%edx),%al
 19f:	01 03                	add    %eax,(%ebx)
 1a1:	0e                   	push   %cs
 1a2:	3c 0c                	cmp    $0xc,%al
 1a4:	00 00                	add    %al,(%eax)
 1a6:	13 2e                	adc    (%esi),%ebp
 1a8:	01 3f                	add    %edi,(%edi)
 1aa:	0c 03                	or     $0x3,%al
 1ac:	0e                   	push   %cs
 1ad:	3a 0b                	cmp    (%ebx),%cl
 1af:	3b 0b                	cmp    (%ebx),%ecx
 1b1:	87 40 0e             	xchg   %eax,0xe(%eax)
 1b4:	49                   	dec    %ecx
 1b5:	13 3c 0c             	adc    (%esp,%ecx,1),%edi
 1b8:	64 13 00             	adc    %fs:(%eax),%eax
 1bb:	00 14 05 00 49 13 34 	add    %dl,0x34134900(,%eax,1)
 1c2:	0c 00                	or     $0x0,%al
 1c4:	00 15 2e 01 3f 0c    	add    %dl,0xc3f012e
 1ca:	03 0e                	add    (%esi),%ecx
 1cc:	3a 0b                	cmp    (%ebx),%cl
 1ce:	3b 0b                	cmp    (%ebx),%ecx
 1d0:	3c 0c                	cmp    $0xc,%al
 1d2:	64 13 00             	adc    %fs:(%eax),%eax
 1d5:	00 16                	add    %dl,(%esi)
 1d7:	0d 00 03 08 3a       	or     $0x3a080300,%eax
 1dc:	0b 3b                	or     (%ebx),%edi
 1de:	0b 49 13             	or     0x13(%ecx),%ecx
 1e1:	38 0a                	cmp    %cl,(%edx)
 1e3:	00 00                	add    %al,(%eax)
 1e5:	17                   	pop    %ss
 1e6:	39 01                	cmp    %eax,(%ecx)
 1e8:	03 0e                	add    (%esi),%ecx
 1ea:	3a 0b                	cmp    (%ebx),%cl
 1ec:	3b 0b                	cmp    (%ebx),%ecx
 1ee:	01 13                	add    %edx,(%ebx)
 1f0:	00 00                	add    %al,(%eax)
 1f2:	18 34 00             	sbb    %dh,(%eax,%eax,1)
 1f5:	03 08                	add    (%eax),%ecx
 1f7:	3a 0b                	cmp    (%ebx),%cl
 1f9:	3b 0b                	cmp    (%ebx),%ecx
 1fb:	87 40 0e             	xchg   %eax,0xe(%eax)
 1fe:	49                   	dec    %ecx
 1ff:	13 3f                	adc    (%edi),%edi
 201:	0c 3c                	or     $0x3c,%al
 203:	0c 00                	or     $0x0,%al
 205:	00 19                	add    %bl,(%ecx)
 207:	13 01                	adc    (%ecx),%eax
 209:	47                   	inc    %edi
 20a:	13 0b                	adc    (%ebx),%ecx
 20c:	0b 3a                	or     (%edx),%edi
 20e:	0b 3b                	or     (%ebx),%edi
 210:	0b 1d 13 01 13 00    	or     0x130113,%ebx
 216:	00 1a                	add    %bl,(%edx)
 218:	0d 00 03 0e 49       	or     $0x490e0300,%eax
 21d:	13 38                	adc    (%eax),%edi
 21f:	0a 34 0c             	or     (%esp,%ecx,1),%dh
 222:	00 00                	add    %al,(%eax)
 224:	1b 2e                	sbb    (%esi),%ebp
 226:	01 3f                	add    %edi,(%edi)
 228:	0c 03                	or     $0x3,%al
 22a:	0e                   	push   %cs
 22b:	34 0c                	xor    $0xc,%al
 22d:	3c 0c                	cmp    $0xc,%al
 22f:	64 13 01             	adc    %fs:(%ecx),%eax
 232:	13 00                	adc    (%eax),%eax
 234:	00 1c 2e             	add    %bl,(%esi,%ebp,1)
 237:	01 3f                	add    %edi,(%edi)
 239:	0c 03                	or     $0x3,%al
 23b:	08 3a                	or     %bh,(%edx)
 23d:	0b 3b                	or     (%ebx),%edi
 23f:	0b 87 40 0e 4c 0b    	or     0xb4c0e40(%edi),%eax
 245:	4d                   	dec    %ebp
 246:	0a 1d 13 3c 0c 64    	or     0x640c3c13,%bl
 24c:	13 00                	adc    (%eax),%eax
 24e:	00 1d 15 01 49 13    	add    %bl,0x13490115
 254:	01 13                	add    %edx,(%ebx)
 256:	00 00                	add    %al,(%eax)
 258:	1e                   	push   %ds
 259:	18 00                	sbb    %al,(%eax)
 25b:	00 00                	add    %al,(%eax)
 25d:	1f                   	pop    %ds
 25e:	0f 00 0b             	str    (%ebx)
 261:	0b 03                	or     (%ebx),%eax
 263:	0e                   	push   %cs
 264:	49                   	dec    %ecx
 265:	13 00                	adc    (%eax),%eax
 267:	00 20                	add    %ah,(%eax)
 269:	10 00                	adc    %al,(%eax)
 26b:	0b 0b                	or     (%ebx),%ecx
 26d:	49                   	dec    %ecx
 26e:	13 00                	adc    (%eax),%eax
 270:	00 21                	add    %ah,(%ecx)
 272:	2e 01 47 13          	add    %eax,%cs:0x13(%edi)
 276:	11 01                	adc    %eax,(%ecx)
 278:	12 01                	adc    (%ecx),%al
 27a:	40                   	inc    %eax
 27b:	06                   	push   %es
 27c:	64 13 01             	adc    %fs:(%ecx),%eax
 27f:	13 00                	adc    (%eax),%eax
 281:	00 22                	add    %ah,(%edx)
 283:	05 00 03 0e 49       	add    $0x490e0300,%eax
 288:	13 34 0c             	adc    (%esp,%ecx,1),%esi
 28b:	02 0a                	add    (%edx),%cl
 28d:	00 00                	add    %al,(%eax)
 28f:	23 2e                	and    (%esi),%ebp
 291:	01 47 13             	add    %eax,0x13(%edi)
 294:	3a 0b                	cmp    (%ebx),%cl
 296:	3b 0b                	cmp    (%ebx),%ecx
 298:	20 0b                	and    %cl,(%ebx)
 29a:	64 13 01             	adc    %fs:(%ecx),%eax
 29d:	13 00                	adc    (%eax),%eax
 29f:	00 24 05 00 03 0e 49 	add    %ah,0x490e0300(,%eax,1)
 2a6:	13 34 0c             	adc    (%esp,%ecx,1),%esi
 2a9:	00 00                	add    %al,(%eax)
 2ab:	25 2e 01 31 13       	and    $0x1331012e,%eax
 2b0:	11 01                	adc    %eax,(%ecx)
 2b2:	12 01                	adc    (%ecx),%al
 2b4:	40                   	inc    %eax
 2b5:	06                   	push   %es
 2b6:	64 13 01             	adc    %fs:(%ecx),%eax
 2b9:	13 00                	adc    (%eax),%eax
 2bb:	00 26                	add    %ah,(%esi)
 2bd:	05 00 31 13 02       	add    $0x2133100,%eax
 2c2:	0a 00                	or     (%eax),%al
 2c4:	00 27                	add    %ah,(%edi)
 2c6:	2e 01 3f             	add    %edi,%cs:(%edi)
 2c9:	0c 03                	or     $0x3,%al
 2cb:	0e                   	push   %cs
 2cc:	3a 0b                	cmp    (%ebx),%cl
 2ce:	3b 0b                	cmp    (%ebx),%ecx
 2d0:	49                   	dec    %ecx
 2d1:	13 11                	adc    (%ecx),%edx
 2d3:	01 12                	add    %edx,(%edx)
 2d5:	01 40 06             	add    %eax,0x6(%eax)
 2d8:	01 13                	add    %edx,(%ebx)
 2da:	00 00                	add    %al,(%eax)
 2dc:	28 05 00 03 0e 3a    	sub    %al,0x3a0e0300
 2e2:	0b 3b                	or     (%ebx),%edi
 2e4:	0b 49 13             	or     0x13(%ecx),%ecx
 2e7:	02 0a                	add    (%edx),%cl
 2e9:	00 00                	add    %al,(%eax)
 2eb:	29 2e                	sub    %ebp,(%esi)
 2ed:	01 3f                	add    %edi,(%edi)
 2ef:	0c 03                	or     $0x3,%al
 2f1:	0e                   	push   %cs
 2f2:	3a 0b                	cmp    (%ebx),%cl
 2f4:	3b 0b                	cmp    (%ebx),%ecx
 2f6:	11 01                	adc    %eax,(%ecx)
 2f8:	12 01                	adc    (%ecx),%al
 2fa:	40                   	inc    %eax
 2fb:	06                   	push   %es
 2fc:	01 13                	add    %edx,(%ebx)
 2fe:	00 00                	add    %al,(%eax)
 300:	2a 0b                	sub    (%ebx),%cl
 302:	01 11                	add    %edx,(%ecx)
 304:	01 12                	add    %edx,(%edx)
 306:	01 00                	add    %eax,(%eax)
 308:	00 2b                	add    %ch,(%ebx)
 30a:	34 00                	xor    $0x0,%al
 30c:	03 0e                	add    (%esi),%ecx
 30e:	3a 0b                	cmp    (%ebx),%cl
 310:	3b 0b                	cmp    (%ebx),%ecx
 312:	49                   	dec    %ecx
 313:	13 02                	adc    (%edx),%eax
 315:	0a 00                	or     (%eax),%al
 317:	00 2c 2e             	add    %ch,(%esi,%ebp,1)
 31a:	00 3f                	add    %bh,(%edi)
 31c:	0c 03                	or     $0x3,%al
 31e:	0e                   	push   %cs
 31f:	3a 0b                	cmp    (%ebx),%cl
 321:	3b 0b                	cmp    (%ebx),%ecx
 323:	11 01                	adc    %eax,(%ecx)
 325:	12 01                	adc    (%ecx),%al
 327:	40                   	inc    %eax
 328:	06                   	push   %es
 329:	00 00                	add    %al,(%eax)
 32b:	2d 2e 01 47 13       	sub    $0x1347012e,%eax
 330:	20 0b                	and    %cl,(%ebx)
 332:	64 13 01             	adc    %fs:(%ecx),%eax
 335:	13 00                	adc    (%eax),%eax
 337:	00 2e                	add    %ch,(%esi)
 339:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 33e:	0b 3b                	or     (%ebx),%edi
 340:	0b 49 13             	or     0x13(%ecx),%ecx
 343:	00 00                	add    %al,(%eax)
 345:	2f                   	das    
 346:	0b 01                	or     (%ecx),%eax
 348:	00 00                	add    %al,(%eax)
 34a:	30 34 00             	xor    %dh,(%eax,%eax,1)
 34d:	03 0e                	add    (%esi),%ecx
 34f:	3a 0b                	cmp    (%ebx),%cl
 351:	3b 0b                	cmp    (%ebx),%ecx
 353:	49                   	dec    %ecx
 354:	13 00                	adc    (%eax),%eax
 356:	00 31                	add    %dh,(%ecx)
 358:	34 00                	xor    $0x0,%al
 35a:	31 13                	xor    %edx,(%ebx)
 35c:	02 0a                	add    (%edx),%cl
 35e:	00 00                	add    %al,(%eax)
 360:	32 34 00             	xor    (%eax,%eax,1),%dh
 363:	03 08                	add    (%eax),%ecx
 365:	3a 0b                	cmp    (%ebx),%cl
 367:	3b 0b                	cmp    (%ebx),%ecx
 369:	49                   	dec    %ecx
 36a:	13 02                	adc    (%edx),%eax
 36c:	0a 00                	or     (%eax),%al
 36e:	00 33                	add    %dh,(%ebx)
 370:	2e 01 03             	add    %eax,%cs:(%ebx)
 373:	0e                   	push   %cs
 374:	34 0c                	xor    $0xc,%al
 376:	11 01                	adc    %eax,(%ecx)
 378:	12 01                	adc    (%ecx),%al
 37a:	40                   	inc    %eax
 37b:	06                   	push   %es
 37c:	01 13                	add    %edx,(%ebx)
 37e:	00 00                	add    %al,(%eax)
 380:	34 05                	xor    $0x5,%al
 382:	00 03                	add    %al,(%ebx)
 384:	0e                   	push   %cs
 385:	3a 0b                	cmp    (%ebx),%cl
 387:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 38d:	00 00                	add    %al,(%eax)
 38f:	35 2e 00 03 0e       	xor    $0xe03002e,%eax
 394:	34 0c                	xor    $0xc,%al
 396:	11 01                	adc    %eax,(%ecx)
 398:	12 01                	adc    (%ecx),%al
 39a:	40                   	inc    %eax
 39b:	06                   	push   %es
 39c:	00 00                	add    %al,(%eax)
 39e:	36 01 01             	add    %eax,%ss:(%ecx)
 3a1:	49                   	dec    %ecx
 3a2:	13 01                	adc    (%ecx),%eax
 3a4:	13 00                	adc    (%eax),%eax
 3a6:	00 37                	add    %dh,(%edi)
 3a8:	21 00                	and    %eax,(%eax)
 3aa:	49                   	dec    %ecx
 3ab:	13 2f                	adc    (%edi),%ebp
 3ad:	0b 00                	or     (%eax),%eax
 3af:	00 38                	add    %bh,(%eax)
 3b1:	34 00                	xor    $0x0,%al
 3b3:	03 0e                	add    (%esi),%ecx
 3b5:	3a 0b                	cmp    (%ebx),%cl
 3b7:	3b 0b                	cmp    (%ebx),%ecx
 3b9:	49                   	dec    %ecx
 3ba:	13 3f                	adc    (%edi),%edi
 3bc:	0c 02                	or     $0x2,%al
 3be:	0a 00                	or     (%eax),%al
 3c0:	00 39                	add    %bh,(%ecx)
 3c2:	34 00                	xor    $0x0,%al
 3c4:	47                   	inc    %edi
 3c5:	13 02                	adc    (%edx),%eax
 3c7:	0a 00                	or     (%eax),%al
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	33 00                	xor    (%eax),%eax
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	1d 00 00 00 01       	sbb    $0x1000000,%eax
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 6d 61             	add    %ch,0x61(%ebp)
  1e:	69 6e 2e 63 00 00 00 	imul   $0x63,0x2e(%esi),%ebp
  25:	00 00                	add    %al,(%eax)
  27:	00 05 02 44 86 04    	add    %al,0x4864402
  2d:	08 15 67 59 59 02    	or     %dl,0x2595967
  33:	02 00                	add    (%eax),%al
  35:	01 01                	add    %eax,(%ecx)
  37:	65 00 00             	add    %al,%gs:(%eax)
  3a:	00 02                	add    %al,(%edx)
  3c:	00 2b                	add    %ch,(%ebx)
  3e:	00 00                	add    %al,(%eax)
  40:	00 01                	add    %al,(%ecx)
  42:	01 fb                	add    %edi,%ebx
  44:	0e                   	push   %cs
  45:	0d 00 01 01 01       	or     $0x1010100,%eax
  4a:	01 00                	add    %eax,(%eax)
  4c:	00 00                	add    %al,(%eax)
  4e:	01 00                	add    %eax,(%eax)
  50:	00 01                	add    %al,(%ecx)
  52:	00 74 68 72          	add    %dh,0x72(%eax,%ebp,2)
  56:	6f                   	outsl  %ds:(%esi),(%dx)
  57:	77 2e                	ja     87 <_init-0x8048405>
  59:	63 70 70             	arpl   %si,0x70(%eax)
  5c:	00 00                	add    %al,(%eax)
  5e:	00 00                	add    %al,(%eax)
  60:	74 68                	je     ca <_init-0x80483c2>
  62:	72 6f                	jb     d3 <_init-0x80483b9>
  64:	77 2e                	ja     94 <_init-0x80483f8>
  66:	68 00 00 00 00       	push   $0x0
  6b:	00 00                	add    %al,(%eax)
  6d:	05 02 58 86 04       	add    $0x4865802,%eax
  72:	08 17                	or     %dl,(%edi)
  74:	67 02 24             	add    (%si),%ah
  77:	15 76 c0 5d bb       	adc    $0xbb5dc076,%eax
  7c:	03 75 82             	add    -0x7e(%ebp),%esi
  7f:	02 27                	add    (%edi),%ah
  81:	13 b9 96 02 27 13    	adc    0x13270296(%ecx),%edi
  87:	b9 a5 76 5f bb       	mov    $0xbb5f76a5,%ecx
  8c:	03 79 82             	add    -0x7e(%ecx),%edi
  8f:	08 14 08             	or     %dl,(%eax,%ecx,1)
  92:	f0 ad                	lock lods %ds:(%esi),%eax
  94:	b9 76 ad b9 a6       	mov    $0xa6b9ad76,%ecx
  99:	67 59                	addr16 pop %ecx
  9b:	02 02                	add    (%edx),%al
  9d:	00 01                	add    %al,(%ecx)
  9f:	01 b5 01 00 00 02    	add    %esi,0x2000001(%ebp)
  a5:	00 ab 00 00 00 01    	add    %ch,0x1000000(%ebx)
  ab:	01 fb                	add    %edi,%ebx
  ad:	0e                   	push   %cs
  ae:	0d 00 01 01 01       	or     $0x1010100,%eax
  b3:	01 00                	add    %eax,(%eax)
  b5:	00 00                	add    %al,(%eax)
  b7:	01 00                	add    %eax,(%eax)
  b9:	00 01                	add    %al,(%ecx)
  bb:	2f                   	das    
  bc:	75 73                	jne    131 <_init-0x804835b>
  be:	72 2f                	jb     ef <_init-0x804839d>
  c0:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
  c7:	2f                   	das    
  c8:	63 2b                	arpl   %bp,(%ebx)
  ca:	2b 2f                	sub    (%edi),%ebp
  cc:	34 2e                	xor    $0x2e,%al
  ce:	36 00 2f             	add    %ch,%ss:(%edi)
  d1:	75 73                	jne    146 <_init-0x8048346>
  d3:	72 2f                	jb     104 <_init-0x8048388>
  d5:	6c                   	insb   (%dx),%es:(%edi)
  d6:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%edx),%esp
  dd:	69 36 38 36 2d 6c    	imul   $0x6c2d3638,(%esi),%esi
  e3:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%esi),%ebp
  ea:	75 2f                	jne    11b <_init-0x8048371>
  ec:	34 2e                	xor    $0x2e,%al
  ee:	36                   	ss
  ef:	2f                   	das    
  f0:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
  f7:	00 2f                	add    %ch,(%edi)
  f9:	75 73                	jne    16e <_init-0x804831e>
  fb:	72 2f                	jb     12c <_init-0x8048360>
  fd:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 104:	00 00                	add    %al,(%eax)
 106:	6d                   	insl   (%dx),%es:(%edi)
 107:	79 63                	jns    16c <_init-0x8048320>
 109:	70 70                	jo     17b <_init-0x8048311>
 10b:	61                   	popa   
 10c:	62 69 2e             	bound  %ebp,0x2e(%ecx)
 10f:	63 70 70             	arpl   %si,0x70(%eax)
 112:	00 00                	add    %al,(%eax)
 114:	00 00                	add    %al,(%eax)
 116:	74 79                	je     191 <_init-0x80482fb>
 118:	70 65                	jo     17f <_init-0x804830d>
 11a:	69 6e 66 6f 00 01 00 	imul   $0x1006f,0x66(%esi),%ebp
 121:	00 73 74             	add    %dh,0x74(%ebx)
 124:	64                   	fs
 125:	64                   	fs
 126:	65                   	gs
 127:	66                   	data16
 128:	2e                   	cs
 129:	68 00 02 00 00       	push   $0x200
 12e:	73 74                	jae    1a4 <_init-0x80482e8>
 130:	64 69 6e 74 2e 68 00 	imul   $0x300682e,%fs:0x74(%esi),%ebp
 137:	03 
 138:	00 00                	add    %al,(%eax)
 13a:	75 6e                	jne    1aa <_init-0x80482e2>
 13c:	77 69                	ja     1a7 <_init-0x80482e5>
 13e:	6e                   	outsb  %ds:(%esi),(%dx)
 13f:	64                   	fs
 140:	2e                   	cs
 141:	68 00 02 00 00       	push   $0x200
 146:	3c 62                	cmp    $0x62,%al
 148:	75 69                	jne    1b3 <_init-0x80482d9>
 14a:	6c                   	insb   (%dx),%es:(%edi)
 14b:	74 2d                	je     17a <_init-0x8048312>
 14d:	69 6e 3e 00 00 00 00 	imul   $0x0,0x3e(%esi),%ebp
 154:	00 00                	add    %al,(%eax)
 156:	05 02 b4 8a 04       	add    $0x48ab402,%eax
 15b:	08 1a                	or     %bl,(%edx)
 15d:	3c 02                	cmp    $0x2,%al
 15f:	02 00                	add    (%eax),%al
 161:	01 01                	add    %eax,(%ecx)
 163:	00 05 02 ba 8a 04    	add    %al,0x48aba02
 169:	08 19                	or     %bl,(%ecx)
 16b:	3c 02                	cmp    $0x2,%al
 16d:	0b 00                	or     (%eax),%eax
 16f:	01 01                	add    %eax,(%ecx)
 171:	00 05 02 c8 87 04    	add    %al,0x487c802
 177:	08 03                	or     %al,(%ebx)
 179:	12 01                	adc    (%ecx),%al
 17b:	67 08 2f             	or     %ch,(%bx)
 17e:	00 02                	add    %al,(%edx)
 180:	04 01                	add    $0x1,%al
 182:	06                   	push   %es
 183:	90                   	nop
 184:	06                   	push   %es
 185:	bb 59 03 1f 2e       	mov    $0x2e1f0359,%ebx
 18a:	67 bc 94 84 d9 bb    	addr16 mov $0xbbd98494,%esp
 190:	bf 67 bb 31 67       	mov    $0x6731bb67,%edi
 195:	bb 03 d4 00 2e       	mov    $0x2e00d403,%ebx
 19a:	08 21                	or     %ah,(%ecx)
 19c:	a0 bb 9f d7 be       	mov    0xbed79fbb,%al
 1a1:	08 15 d9 08 25 e7    	or     %dl,0xe72508d9
 1a7:	08 23                	or     %ah,(%ebx)
 1a9:	e7 03                	out    %eax,$0x3
 1ab:	0e                   	push   %cs
 1ac:	66 5a                	pop    %dx
 1ae:	08 23                	or     %ah,(%ebx)
 1b0:	bc db c9 08 77       	mov    $0x7708c9db,%esp
 1b5:	bb bd 86 c9 b0       	mov    $0xb0c986bd,%ebx
 1ba:	bb d8 67 08 32       	mov    $0x320867d8,%ebx
 1bf:	83 84 08 83 08 bc 08 	addl   $0xffffff83,0x8bc0883(%eax,%ecx,1)
 1c6:	83 
 1c7:	03 59 2e             	add    0x2e(%ecx),%ebx
 1ca:	03 0b                	add    (%ebx),%ecx
 1cc:	3c 3d                	cmp    $0x3d,%al
 1ce:	00 02                	add    %al,(%edx)
 1d0:	04 01                	add    $0x1,%al
 1d2:	03 6f 20             	add    0x20(%edi),%ebp
 1d5:	03 2f                	add    (%edi),%ebp
 1d7:	08 12                	or     %dl,(%edx)
 1d9:	76 bb                	jbe    196 <_init-0x80482f6>
 1db:	5a                   	pop    %edx
 1dc:	30 66 00             	xor    %ah,0x0(%esi)
 1df:	02 04 01             	add    (%ecx,%eax,1),%al
 1e2:	06                   	push   %es
 1e3:	66 06                	pushw  %es
 1e5:	03 85 7e 90 03 fb    	add    -0x4fc6f82(%ebp),%eax
 1eb:	01 ba 2e 66 02 16    	add    %edi,0x1602662e(%edx)
 1f1:	00 01                	add    %al,(%ecx)
 1f3:	01 04 02             	add    %eax,(%edx,%eax,1)
 1f6:	00 05 02 c8 8a 04    	add    %al,0x48ac802
 1fc:	08 03                	or     %al,(%ebx)
 1fe:	e5 00                	in     $0x0,%eax
 200:	01 3d 00 02 04 01    	add    %edi,0x1040200
 206:	06                   	push   %es
 207:	c8 00 02 04          	enter  $0x200,$0x4
 20b:	02 ac 00 02 04 03 66 	add    0x66030402(%eax,%eax,1),%ch
 212:	02 02                	add    (%edx),%al
 214:	00 01                	add    %al,(%ecx)
 216:	01 00                	add    %eax,(%eax)
 218:	05 02 ec 8a 04       	add    $0x48aec02,%eax
 21d:	08 03                	or     %al,(%ebx)
 21f:	e1 00                	loope  221 <_init-0x804826b>
 221:	01 67 85             	add    %esp,-0x7b(%edi)
 224:	ad                   	lods   %ds:(%esi),%eax
 225:	e5 e7                	in     $0xe7,%eax
 227:	ad                   	lods   %ds:(%esi),%eax
 228:	02 02                	add    (%edx),%al
 22a:	00 01                	add    %al,(%ecx)
 22c:	01 00                	add    %eax,(%eax)
 22e:	05 02 30 8b 04       	add    $0x48b3002,%eax
 233:	08 03                	or     %al,(%ebx)
 235:	f4                   	hlt    
 236:	00 01                	add    %al,(%ecx)
 238:	67 83 ad e5 ad 02    	subl   $0x2,-0x521b(%di)
 23e:	02 00                	add    (%eax),%al
 240:	01 01                	add    %eax,(%ecx)
 242:	00 05 02 66 8b 04    	add    %al,0x48b6602
 248:	08 03                	or     %al,(%ebx)
 24a:	81 01 01 67 83 ad    	addl   $0xad836701,(%ecx)
 250:	e5 e5                	in     $0xe5,%eax
 252:	e5 ad                	in     $0xad,%eax
 254:	02 02                	add    (%edx),%al
 256:	00 01                	add    %al,(%ecx)
 258:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	47                   	inc    %edi
   1:	4e                   	dec    %esi
   2:	55                   	push   %ebp
   3:	20 43 20             	and    %al,0x20(%ebx)
   6:	34 2e                	xor    $0x2e,%al
   8:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
   c:	2f                   	das    
   d:	68 6f 6d 65 2f       	push   $0x2f656d6f
  12:	6e                   	outsb  %ds:(%esi),(%dx)
  13:	69 63 6f 2f 64 65 76 	imul   $0x7665642f,0x6f(%ebx),%esp
  1a:	2f                   	das    
  1b:	73 72                	jae    8f <_init-0x80483fd>
  1d:	63 2f                	arpl   %bp,(%edi)
  1f:	63 70 70             	arpl   %si,0x70(%eax)
  22:	5f                   	pop    %edi
  23:	65                   	gs
  24:	78 63                	js     89 <_init-0x8048403>
  26:	65                   	gs
  27:	70 74                	jo     9d <_init-0x80483ef>
  29:	69 6f 6e 5f 68 61 6e 	imul   $0x6e61685f,0x6e(%edi),%ebp
  30:	64                   	fs
  31:	6c                   	insb   (%dx),%es:(%edi)
  32:	69 6e 67 5f 61 62 69 	imul   $0x6962615f,0x67(%esi),%ebp
  39:	2f                   	das    
  3a:	73 74                	jae    b0 <_init-0x80483dc>
  3c:	65                   	gs
  3d:	70 5f                	jo     9e <_init-0x80483ee>
  3f:	38 00                	cmp    %al,(%eax)
  41:	6d                   	insl   (%dx),%es:(%edi)
  42:	61                   	popa   
  43:	69 6e 2e 63 00 6d 61 	imul   $0x616d0063,0x2e(%esi),%ebp
  4a:	69 6e 00 6c 6f 6e 67 	imul   $0x676e6f6c,0x0(%esi),%ebp
  51:	20 6c 6f 6e          	and    %ch,0x6e(%edi,%ebp,2)
  55:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
  59:	74 00                	je     5b <_init-0x8048431>
  5b:	5f                   	pop    %edi
  5c:	5a                   	pop    %edx
  5d:	35 72 61 69 73       	xor    $0x73696172,%eax
  62:	65                   	gs
  63:	76 00                	jbe    65 <_init-0x8048427>
  65:	74 72                	je     d9 <_init-0x80483b3>
  67:	79 5f                	jns    c8 <_init-0x80483c4>
  69:	62 75 74             	bound  %esi,0x74(%ebp)
  6c:	5f                   	pop    %edi
  6d:	64 6f                	outsl  %fs:(%esi),(%dx)
  6f:	6e                   	outsb  %ds:(%esi),(%dx)
  70:	74 5f                	je     d1 <_init-0x80483bb>
  72:	63 61 74             	arpl   %sp,0x74(%ecx)
  75:	63 68 00             	arpl   %bp,0x0(%eax)
  78:	6c                   	insb   (%dx),%es:(%edi)
  79:	6f                   	outsl  %ds:(%esi),(%dx)
  7a:	6e                   	outsb  %ds:(%esi),(%dx)
  7b:	67 20 6c 6f          	and    %ch,0x6f(%si)
  7f:	6e                   	outsb  %ds:(%esi),(%dx)
  80:	67 20 75 6e          	and    %dh,0x6e(%di)
  84:	73 69                	jae    ef <_init-0x804839d>
  86:	67 6e                	outsb  %ds:(%si),(%dx)
  88:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  8d:	74 00                	je     8f <_init-0x80483fd>
  8f:	74 68                	je     f9 <_init-0x8048393>
  91:	72 6f                	jb     102 <_init-0x804838a>
  93:	77 2e                	ja     c3 <_init-0x80483c9>
  95:	63 70 70             	arpl   %si,0x70(%eax)
  98:	00 5f 5a             	add    %bl,0x5a(%edi)
  9b:	37                   	aaa    
  9c:	63 61 74             	arpl   %sp,0x74(%ecx)
  9f:	63 68 69             	arpl   %bp,0x69(%eax)
  a2:	74 76                	je     11a <_init-0x8048372>
  a4:	00 75 6e             	add    %dh,0x6e(%ebp)
  a7:	73 69                	jae    112 <_init-0x804837a>
  a9:	67 6e                	outsb  %ds:(%si),(%dx)
  ab:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%ebx)
  b0:	61                   	popa   
  b1:	72 00                	jb     b3 <_init-0x80483d9>
  b3:	47                   	inc    %edi
  b4:	4e                   	dec    %esi
  b5:	55                   	push   %ebp
  b6:	20 43 2b             	and    %al,0x2b(%ebx)
  b9:	2b 20                	sub    (%eax),%esp
  bb:	34 2e                	xor    $0x2e,%al
  bd:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
  c1:	5f                   	pop    %edi
  c2:	5a                   	pop    %edx
  c3:	31 38                	xor    %edi,(%eax)
  c5:	74 72                	je     139 <_init-0x8048353>
  c7:	79 5f                	jns    128 <_init-0x8048364>
  c9:	62 75 74             	bound  %esi,0x74(%ebp)
  cc:	5f                   	pop    %edi
  cd:	64 6f                	outsl  %fs:(%esi),(%dx)
  cf:	6e                   	outsb  %ds:(%esi),(%dx)
  d0:	74 5f                	je     131 <_init-0x804835b>
  d2:	63 61 74             	arpl   %sp,0x74(%ecx)
  d5:	63 68 76             	arpl   %bp,0x76(%eax)
  d8:	00 73 68             	add    %dh,0x68(%ebx)
  db:	6f                   	outsl  %ds:(%esi),(%dx)
  dc:	72 74                	jb     152 <_init-0x804833a>
  de:	20 75 6e             	and    %dh,0x6e(%ebp)
  e1:	73 69                	jae    14c <_init-0x8048340>
  e3:	67 6e                	outsb  %ds:(%si),(%dx)
  e5:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  ea:	74 00                	je     ec <_init-0x80483a0>
  ec:	73 65                	jae    153 <_init-0x8048339>
  ee:	70 70                	jo     160 <_init-0x804832c>
  f0:	75 6b                	jne    15d <_init-0x804832f>
  f2:	75 00                	jne    f4 <_init-0x8048398>
  f4:	46                   	inc    %esi
  f5:	61                   	popa   
  f6:	6b 65 5f 45          	imul   $0x45,0x5f(%ebp),%esp
  fa:	78 63                	js     15f <_init-0x804832d>
  fc:	65                   	gs
  fd:	70 74                	jo     173 <_init-0x8048319>
  ff:	69 6f 6e 00 72 61 69 	imul   $0x69617200,0x6e(%edi),%ebp
 106:	73 65                	jae    16d <_init-0x804831f>
 108:	00 73 68             	add    %dh,0x68(%ebx)
 10b:	6f                   	outsl  %ds:(%esi),(%dx)
 10c:	72 74                	jb     182 <_init-0x804830a>
 10e:	20 69 6e             	and    %ch,0x6e(%ecx)
 111:	74 00                	je     113 <_init-0x8048379>
 113:	63 61 74             	arpl   %sp,0x74(%ecx)
 116:	63 68 69             	arpl   %bp,0x69(%eax)
 119:	74 00                	je     11b <_init-0x8048371>
 11b:	74 79                	je     196 <_init-0x80482f6>
 11d:	70 65                	jo     184 <_init-0x8048308>
 11f:	5f                   	pop    %edi
 120:	69 6e 64 65 78 00 75 	imul   $0x75007865,0x64(%esi),%ebp
 127:	6e                   	outsb  %ds:(%esi),(%dx)
 128:	65                   	gs
 129:	78 70                	js     19b <_init-0x80482f1>
 12b:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
 130:	5f                   	pop    %edi
 131:	68 61 6e 64 6c       	push   $0x6c646e61
 136:	65                   	gs
 137:	72 00                	jb     139 <_init-0x8048353>
 139:	76 65                	jbe    1a0 <_init-0x80482ec>
 13b:	72 73                	jb     1b0 <_init-0x80482dc>
 13d:	69 6f 6e 00 65 78 63 	imul   $0x63786500,0x6e(%edi),%ebp
 144:	65                   	gs
 145:	70 74                	jo     1bb <_init-0x80482d1>
 147:	69 6f 6e 5f 62 75 66 	imul   $0x6675625f,0x6e(%edi),%ebp
 14e:	66                   	data16
 14f:	00 64 65 73          	add    %ah,0x73(%ebp,%eiz,2)
 153:	74 00                	je     155 <_init-0x8048337>
 155:	74 79                	je     1d0 <_init-0x80482bc>
 157:	70 65                	jo     1be <_init-0x80482ce>
 159:	5f                   	pop    %edi
 15a:	65 6e                	outsb  %gs:(%esi),(%dx)
 15c:	63 6f 64             	arpl   %bp,0x64(%edi)
 15f:	69 6e 67 00 5f 5f 63 	imul   $0x635f5f00,0x67(%esi),%ebp
 166:	78 78                	js     1e0 <_init-0x80482ac>
 168:	61                   	popa   
 169:	62 69 76             	bound  %ebp,0x76(%ecx)
 16c:	31 00                	xor    %eax,(%eax)
 16e:	75 69                	jne    1d9 <_init-0x80482b3>
 170:	6e                   	outsb  %ds:(%esi),(%dx)
 171:	74 36                	je     1a9 <_init-0x80482e3>
 173:	34 5f                	xor    $0x5f,%al
 175:	74 00                	je     177 <_init-0x8048315>
 177:	6c                   	insb   (%dx),%es:(%edi)
 178:	73 64                	jae    1de <_init-0x80482ae>
 17a:	61                   	popa   
 17b:	5f                   	pop    %edi
 17c:	63 73 5f             	arpl   %si,0x5f(%ebx)
 17f:	74 61                	je     1e2 <_init-0x80482aa>
 181:	62 6c 65 5f          	bound  %ebp,0x5f(%ebp,%eiz,2)
 185:	65 6e                	outsb  %gs:(%esi),(%dx)
 187:	64 00 73 69          	add    %dh,%fs:0x69(%ebx)
 18b:	7a 65                	jp     1f2 <_init-0x804829a>
 18d:	5f                   	pop    %edi
 18e:	74 00                	je     190 <_init-0x80482fc>
 190:	5f                   	pop    %edi
 191:	5f                   	pop    %edi
 192:	63 78 61             	arpl   %di,0x61(%eax)
 195:	5f                   	pop    %edi
 196:	65                   	gs
 197:	78 63                	js     1fc <_init-0x8048290>
 199:	65                   	gs
 19a:	70 74                	jo     210 <_init-0x804827c>
 19c:	69 6f 6e 00 74 72 79 	imul   $0x79727400,0x6e(%edi),%ebp
 1a3:	5f                   	pop    %edi
 1a4:	73 74                	jae    21a <_init-0x8048272>
 1a6:	61                   	popa   
 1a7:	72 74                	jb     21d <_init-0x804826f>
 1a9:	00 5f 55             	add    %bl,0x55(%edi)
 1ac:	52                   	push   %edx
 1ad:	43                   	inc    %ebx
 1ae:	5f                   	pop    %edi
 1af:	49                   	dec    %ecx
 1b0:	4e                   	dec    %esi
 1b1:	53                   	push   %ebx
 1b2:	54                   	push   %esp
 1b3:	41                   	inc    %ecx
 1b4:	4c                   	dec    %esp
 1b5:	4c                   	dec    %esp
 1b6:	5f                   	pop    %edi
 1b7:	43                   	inc    %ebx
 1b8:	4f                   	dec    %edi
 1b9:	4e                   	dec    %esi
 1ba:	54                   	push   %esp
 1bb:	45                   	inc    %ebp
 1bc:	58                   	pop    %eax
 1bd:	54                   	push   %esp
 1be:	00 5f 5a             	add    %bl,0x5a(%edi)
 1c1:	4e                   	dec    %esi
 1c2:	4b                   	dec    %ebx
 1c3:	53                   	push   %ebx
 1c4:	74 39                	je     1ff <_init-0x804828d>
 1c6:	74 79                	je     241 <_init-0x804824b>
 1c8:	70 65                	jo     22f <_init-0x804825d>
 1ca:	5f                   	pop    %edi
 1cb:	69 6e 66 6f 34 6e 61 	imul   $0x616e346f,0x66(%esi),%ebp
 1d2:	6d                   	insl   (%dx),%es:(%edi)
 1d3:	65                   	gs
 1d4:	45                   	inc    %ebp
 1d5:	76 00                	jbe    1d7 <_init-0x80482b5>
 1d7:	65                   	gs
 1d8:	78 63                	js     23d <_init-0x804824f>
 1da:	65                   	gs
 1db:	70 74                	jo     251 <_init-0x804823b>
 1dd:	69 6f 6e 43 6c 61 73 	imul   $0x73616c43,0x6e(%edi),%ebp
 1e4:	73 00                	jae    1e6 <_init-0x80482a6>
 1e6:	5f                   	pop    %edi
 1e7:	55                   	push   %ebp
 1e8:	52                   	push   %edx
 1e9:	43                   	inc    %ebx
 1ea:	5f                   	pop    %edi
 1eb:	46                   	inc    %esi
 1ec:	41                   	inc    %ecx
 1ed:	54                   	push   %esp
 1ee:	41                   	inc    %ecx
 1ef:	4c                   	dec    %esp
 1f0:	5f                   	pop    %edi
 1f1:	50                   	push   %eax
 1f2:	48                   	dec    %eax
 1f3:	41                   	inc    %ecx
 1f4:	53                   	push   %ebx
 1f5:	45                   	inc    %ebp
 1f6:	32 5f 45             	xor    0x45(%edi),%bl
 1f9:	52                   	push   %edx
 1fa:	52                   	push   %edx
 1fb:	4f                   	dec    %edi
 1fc:	52                   	push   %edx
 1fd:	00 6d 79             	add    %ch,0x79(%ebp)
 200:	63 70 70             	arpl   %si,0x70(%eax)
 203:	61                   	popa   
 204:	62 69 2e             	bound  %ebp,0x2e(%ecx)
 207:	63 70 70             	arpl   %si,0x70(%eax)
 20a:	00 5f 55             	add    %bl,0x55(%edi)
 20d:	52                   	push   %edx
 20e:	43                   	inc    %ebx
 20f:	5f                   	pop    %edi
 210:	48                   	dec    %eax
 211:	41                   	inc    %ecx
 212:	4e                   	dec    %esi
 213:	44                   	inc    %esp
 214:	4c                   	dec    %esp
 215:	45                   	inc    %ebp
 216:	52                   	push   %edx
 217:	5f                   	pop    %edi
 218:	46                   	inc    %esi
 219:	4f                   	dec    %edi
 21a:	55                   	push   %ebp
 21b:	4e                   	dec    %esi
 21c:	44                   	inc    %esp
 21d:	00 65 78             	add    %ah,0x78(%ebp)
 220:	63 65 70             	arpl   %sp,0x70(%ebp)
 223:	74 69                	je     28e <_init-0x80481fe>
 225:	6f                   	outsl  %ds:(%esi),(%dx)
 226:	6e                   	outsb  %ds:(%esi),(%dx)
 227:	44                   	inc    %esp
 228:	65                   	gs
 229:	73 74                	jae    29f <_init-0x80481ed>
 22b:	72 75                	jb     2a2 <_init-0x80481ea>
 22d:	63 74 6f 72          	arpl   %si,0x72(%edi,%ebp,2)
 231:	00 5f 76             	add    %bl,0x76(%edi)
 234:	70 74                	jo     2aa <_init-0x80481e2>
 236:	72 2e                	jb     266 <_init-0x8048226>
 238:	5f                   	pop    %edi
 239:	5f                   	pop    %edi
 23a:	63 6c 61 73          	arpl   %bp,0x73(%ecx,%eiz,2)
 23e:	73 5f                	jae    29f <_init-0x80481ed>
 240:	74 79                	je     2bb <_init-0x80481d1>
 242:	70 65                	jo     2a9 <_init-0x80481e3>
 244:	5f                   	pop    %edi
 245:	69 6e 66 6f 00 68 61 	imul   $0x6168006f,0x66(%esi),%ebp
 24c:	6e                   	outsb  %ds:(%esi),(%dx)
 24d:	64                   	fs
 24e:	6c                   	insb   (%dx),%es:(%edi)
 24f:	65                   	gs
 250:	72 43                	jb     295 <_init-0x80481f7>
 252:	6f                   	outsl  %ds:(%esi),(%dx)
 253:	75 6e                	jne    2c3 <_init-0x80481c9>
 255:	74 00                	je     257 <_init-0x8048235>
 257:	75 69                	jne    2c2 <_init-0x80481ca>
 259:	6e                   	outsb  %ds:(%esi),(%dx)
 25a:	74 38                	je     294 <_init-0x80481f8>
 25c:	5f                   	pop    %edi
 25d:	74 00                	je     25f <_init-0x804822d>
 25f:	75 69                	jne    2ca <_init-0x80481c2>
 261:	6e                   	outsb  %ds:(%esi),(%dx)
 262:	74 70                	je     2d4 <_init-0x80481b8>
 264:	74 72                	je     2d8 <_init-0x80481b4>
 266:	5f                   	pop    %edi
 267:	74 00                	je     269 <_init-0x8048223>
 269:	5f                   	pop    %edi
 26a:	55                   	push   %ebp
 26b:	52                   	push   %edx
 26c:	43                   	inc    %ebx
 26d:	5f                   	pop    %edi
 26e:	45                   	inc    %ebp
 26f:	4e                   	dec    %esi
 270:	44                   	inc    %esp
 271:	5f                   	pop    %edi
 272:	4f                   	dec    %edi
 273:	46                   	inc    %esi
 274:	5f                   	pop    %edi
 275:	53                   	push   %ebx
 276:	54                   	push   %esp
 277:	41                   	inc    %ecx
 278:	43                   	inc    %ebx
 279:	4b                   	dec    %ebx
 27a:	00 75 6e             	add    %dh,0x6e(%ebp)
 27d:	77 69                	ja     2e8 <_init-0x80481a4>
 27f:	6e                   	outsb  %ds:(%esi),(%dx)
 280:	64                   	fs
 281:	48                   	dec    %eax
 282:	65                   	gs
 283:	61                   	popa   
 284:	64                   	fs
 285:	65                   	gs
 286:	72 00                	jb     288 <_init-0x8048204>
 288:	65                   	gs
 289:	78 63                	js     2ee <_init-0x804819e>
 28b:	65                   	gs
 28c:	70 74                	jo     302 <_init-0x804818a>
 28e:	69 6f 6e 5f 63 6c 65 	imul   $0x656c635f,0x6e(%edi),%ebp
 295:	61                   	popa   
 296:	6e                   	outsb  %ds:(%esi),(%dx)
 297:	75 70                	jne    309 <_init-0x8048183>
 299:	00 6c 65 6e          	add    %ch,0x6e(%ebp,%eiz,2)
 29d:	67 74 68             	addr16 je 308 <_init-0x8048184>
 2a0:	00 74 68 72          	add    %dh,0x72(%eax,%ebp,2)
 2a4:	6f                   	outsl  %ds:(%esi),(%dx)
 2a5:	77 6e                	ja     315 <_init-0x8048177>
 2a7:	5f                   	pop    %edi
 2a8:	65                   	gs
 2a9:	78 63                	js     30e <_init-0x804817e>
 2ab:	65                   	gs
 2ac:	70 74                	jo     322 <_init-0x804816a>
 2ae:	69 6f 6e 00 61 63 74 	imul   $0x74636100,0x6e(%edi),%ebp
 2b5:	69 6f 6e 00 61 63 74 	imul   $0x74636100,0x6e(%edi),%ebp
 2bc:	69 6f 6e 5f 74 62 6c 	imul   $0x6c62745f,0x6e(%edi),%ebp
 2c3:	5f                   	pop    %edi
 2c4:	73 74                	jae    33a <_init-0x8048152>
 2c6:	61                   	popa   
 2c7:	72 74                	jb     33d <_init-0x804814f>
 2c9:	00 74 69 6e          	add    %dh,0x6e(%ecx,%ebp,2)
 2cd:	66 6f                	outsw  %ds:(%esi),(%dx)
 2cf:	00 5f 55             	add    %bl,0x55(%edi)
 2d2:	52                   	push   %edx
 2d3:	43                   	inc    %ebx
 2d4:	5f                   	pop    %edi
 2d5:	4e                   	dec    %esi
 2d6:	4f                   	dec    %edi
 2d7:	52                   	push   %edx
 2d8:	4d                   	dec    %ebp
 2d9:	41                   	inc    %ecx
 2da:	4c                   	dec    %esp
 2db:	5f                   	pop    %edi
 2dc:	53                   	push   %ebx
 2dd:	54                   	push   %esp
 2de:	4f                   	dec    %edi
 2df:	50                   	push   %eax
 2e0:	00 74 65 72          	add    %dh,0x72(%ebp,%eiz,2)
 2e4:	6d                   	insl   (%dx),%es:(%edi)
 2e5:	69 6e 61 74 65 48 61 	imul   $0x61486574,0x61(%esi),%ebp
 2ec:	6e                   	outsb  %ds:(%esi),(%dx)
 2ed:	64                   	fs
 2ee:	6c                   	insb   (%dx),%es:(%edi)
 2ef:	65                   	gs
 2f0:	72 00                	jb     2f2 <_init-0x804819a>
 2f2:	63 6f 6e             	arpl   %bp,0x6e(%edi)
 2f5:	74 65                	je     35c <_init-0x8048130>
 2f7:	78 74                	js     36d <_init-0x804811f>
 2f9:	00 61 63             	add    %ah,0x63(%ecx)
 2fc:	74 69                	je     367 <_init-0x8048125>
 2fe:	6f                   	outsl  %ds:(%esi),(%dx)
 2ff:	6e                   	outsb  %ds:(%esi),(%dx)
 300:	5f                   	pop    %edi
 301:	6f                   	outsl  %ds:(%esi),(%dx)
 302:	66                   	data16
 303:	66                   	data16
 304:	73 65                	jae    36b <_init-0x8048121>
 306:	74 00                	je     308 <_init-0x8048184>
 308:	6c                   	insb   (%dx),%es:(%edi)
 309:	73 64                	jae    36f <_init-0x804811d>
 30b:	61                   	popa   
 30c:	00 74 68 72          	add    %dh,0x72(%eax,%ebp,2)
 310:	6f                   	outsl  %ds:(%esi),(%dx)
 311:	77 5f                	ja     372 <_init-0x804811a>
 313:	69 70 00 65 78 63 65 	imul   $0x65637865,0x0(%eax),%esi
 31a:	70 74                	jo     390 <_init-0x80480fc>
 31c:	69 6f 6e 54 79 70 65 	imul   $0x65707954,0x6e(%edi),%ebp
 323:	00 5f 5f             	add    %bl,0x5f(%edi)
 326:	69 6e 69 74 69 61 6c 	imul   $0x6c616974,0x69(%esi),%ebp
 32d:	69 7a 65 5f 70 00 6e 	imul   $0x6e00705f,0x65(%edx),%edi
 334:	61                   	popa   
 335:	6d                   	insl   (%dx),%es:(%edi)
 336:	65 00 5f 55          	add    %bl,%gs:0x55(%edi)
 33a:	6e                   	outsb  %ds:(%esi),(%dx)
 33b:	77 69                	ja     3a6 <_init-0x80480e6>
 33d:	6e                   	outsb  %ds:(%esi),(%dx)
 33e:	64                   	fs
 33f:	5f                   	pop    %edi
 340:	45                   	inc    %ebp
 341:	78 63                	js     3a6 <_init-0x80480e6>
 343:	65                   	gs
 344:	70 74                	jo     3ba <_init-0x80480d2>
 346:	69 6f 6e 00 74 65 72 	imul   $0x72657400,0x6e(%edi),%ebp
 34d:	6d                   	insl   (%dx),%es:(%edi)
 34e:	69 6e 61 74 65 5f 68 	imul   $0x685f6574,0x61(%esi),%ebp
 355:	61                   	popa   
 356:	6e                   	outsb  %ds:(%esi),(%dx)
 357:	64                   	fs
 358:	6c                   	insb   (%dx),%es:(%edi)
 359:	65                   	gs
 35a:	72 00                	jb     35c <_init-0x8048130>
 35c:	70 72                	jo     3d0 <_init-0x80480bc>
 35e:	69 76 61 74 65 5f 31 	imul   $0x315f6574,0x61(%esi),%esi
 365:	00 5f 55             	add    %bl,0x55(%edi)
 368:	52                   	push   %edx
 369:	43                   	inc    %ebx
 36a:	5f                   	pop    %edi
 36b:	43                   	inc    %ebx
 36c:	4f                   	dec    %edi
 36d:	4e                   	dec    %esi
 36e:	54                   	push   %esp
 36f:	49                   	dec    %ecx
 370:	4e                   	dec    %esi
 371:	55                   	push   %ebp
 372:	45                   	inc    %ebp
 373:	5f                   	pop    %edi
 374:	55                   	push   %ebp
 375:	4e                   	dec    %esi
 376:	57                   	push   %edi
 377:	49                   	dec    %ecx
 378:	4e                   	dec    %esi
 379:	44                   	inc    %esp
 37a:	00 5f 5a             	add    %bl,0x5a(%edi)
 37d:	4e                   	dec    %esi
 37e:	31 30                	xor    %esi,(%eax)
 380:	5f                   	pop    %edi
 381:	5f                   	pop    %edi
 382:	63 78 78             	arpl   %di,0x78(%eax)
 385:	61                   	popa   
 386:	62 69 76             	bound  %ebp,0x76(%ecx)
 389:	31 31                	xor    %esi,(%ecx)
 38b:	37                   	aaa    
 38c:	5f                   	pop    %edi
 38d:	5f                   	pop    %edi
 38e:	63 6c 61 73          	arpl   %bp,0x73(%ecx,%eiz,2)
 392:	73 5f                	jae    3f3 <_init-0x8048099>
 394:	74 79                	je     40f <_init-0x804807d>
 396:	70 65                	jo     3fd <_init-0x804808f>
 398:	5f                   	pop    %edi
 399:	69 6e 66 6f 33 66 6f 	imul   $0x6f66336f,0x66(%esi),%ebp
 3a0:	6f                   	outsl  %ds:(%esi),(%dx)
 3a1:	45                   	inc    %ebp
 3a2:	76 00                	jbe    3a4 <_init-0x80480e8>
 3a4:	74 79                	je     41f <_init-0x804806d>
 3a6:	70 65                	jo     40d <_init-0x804807f>
 3a8:	73 5f                	jae    409 <_init-0x8048083>
 3aa:	74 61                	je     40d <_init-0x804807f>
 3ac:	62 6c 65 5f          	bound  %ebp,0x5f(%ebp,%eiz,2)
 3b0:	73 74                	jae    426 <_init-0x8048066>
 3b2:	61                   	popa   
 3b3:	72 74                	jb     429 <_init-0x8048063>
 3b5:	00 5f 47             	add    %bl,0x47(%edi)
 3b8:	4c                   	dec    %esp
 3b9:	4f                   	dec    %edi
 3ba:	42                   	inc    %edx
 3bb:	41                   	inc    %ecx
 3bc:	4c                   	dec    %esp
 3bd:	5f                   	pop    %edi
 3be:	5f                   	pop    %edi
 3bf:	73 75                	jae    436 <_init-0x8048056>
 3c1:	62 5f 49             	bound  %ebx,0x49(%edi)
 3c4:	5f                   	pop    %edi
 3c5:	5f                   	pop    %edi
 3c6:	5a                   	pop    %edx
 3c7:	4e                   	dec    %esi
 3c8:	31 30                	xor    %esi,(%eax)
 3ca:	5f                   	pop    %edi
 3cb:	5f                   	pop    %edi
 3cc:	63 78 78             	arpl   %di,0x78(%eax)
 3cf:	61                   	popa   
 3d0:	62 69 76             	bound  %ebp,0x76(%ecx)
 3d3:	31 32                	xor    %esi,(%edx)
 3d5:	74 69                	je     440 <_init-0x804804c>
 3d7:	45                   	inc    %ebp
 3d8:	00 63 61             	add    %ah,0x61(%ebx)
 3db:	74 63                	je     440 <_init-0x804804c>
 3dd:	68 5f 74 79 70       	push   $0x7079745f
 3e2:	65 00 70 72          	add    %dh,%gs:0x72(%eax)
 3e6:	69 76 61 74 65 5f 32 	imul   $0x325f6574,0x61(%esi),%esi
 3ed:	00 5f 55             	add    %bl,0x55(%edi)
 3f0:	6e                   	outsb  %ds:(%esi),(%dx)
 3f1:	77 69                	ja     45c <_init-0x8048030>
 3f3:	6e                   	outsb  %ds:(%esi),(%dx)
 3f4:	64                   	fs
 3f5:	5f                   	pop    %edi
 3f6:	57                   	push   %edi
 3f7:	6f                   	outsl  %ds:(%esi),(%dx)
 3f8:	72 64                	jb     45e <_init-0x804802e>
 3fa:	00 63 61             	add    %ah,0x61(%ebx)
 3fd:	74 63                	je     462 <_init-0x804802a>
 3ff:	68 5f 74 69 00       	push   $0x69745f
 404:	5f                   	pop    %edi
 405:	55                   	push   %ebp
 406:	52                   	push   %edx
 407:	43                   	inc    %ebx
 408:	5f                   	pop    %edi
 409:	46                   	inc    %esi
 40a:	4f                   	dec    %edi
 40b:	52                   	push   %edx
 40c:	45                   	inc    %ebp
 40d:	49                   	dec    %ecx
 40e:	47                   	inc    %edi
 40f:	4e                   	dec    %esi
 410:	5f                   	pop    %edi
 411:	45                   	inc    %ebp
 412:	58                   	pop    %eax
 413:	43                   	inc    %ebx
 414:	45                   	inc    %ebp
 415:	50                   	push   %eax
 416:	54                   	push   %esp
 417:	49                   	dec    %ecx
 418:	4f                   	dec    %edi
 419:	4e                   	dec    %esi
 41a:	5f                   	pop    %edi
 41b:	43                   	inc    %ebx
 41c:	41                   	inc    %ecx
 41d:	55                   	push   %ebp
 41e:	47                   	inc    %edi
 41f:	48                   	dec    %eax
 420:	54                   	push   %esp
 421:	00 4c 53 44          	add    %cl,0x44(%ebx,%edx,2)
 425:	41                   	inc    %ecx
 426:	5f                   	pop    %edi
 427:	43                   	inc    %ebx
 428:	53                   	push   %ebx
 429:	00 73 74             	add    %dh,0x74(%ebx)
 42c:	61                   	popa   
 42d:	72 74                	jb     4a3 <_init-0x8047fe9>
 42f:	5f                   	pop    %edi
 430:	65 6e                	outsb  %gs:(%esi),(%dx)
 432:	63 6f 64             	arpl   %bp,0x64(%edi)
 435:	69 6e 67 00 75 6e 65 	imul   $0x656e7500,0x67(%esi),%ebp
 43c:	78 70                	js     4ae <_init-0x8047fde>
 43e:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
 443:	48                   	dec    %eax
 444:	61                   	popa   
 445:	6e                   	outsb  %ds:(%esi),(%dx)
 446:	64                   	fs
 447:	6c                   	insb   (%dx),%es:(%edi)
 448:	65                   	gs
 449:	72 00                	jb     44b <_init-0x8048041>
 44b:	72 65                	jb     4b2 <_init-0x8047fda>
 44d:	61                   	popa   
 44e:	64                   	fs
 44f:	5f                   	pop    %edi
 450:	70 74                	jo     4c6 <_init-0x8047fc6>
 452:	72 00                	jb     454 <_init-0x8048038>
 454:	61                   	popa   
 455:	64                   	fs
 456:	6a 75                	push   $0x75
 458:	73 74                	jae    4ce <_init-0x8047fbe>
 45a:	65                   	gs
 45b:	64                   	fs
 45c:	50                   	push   %eax
 45d:	74 72                	je     4d1 <_init-0x8047fbb>
 45f:	00 66 75             	add    %ah,0x75(%esi)
 462:	6e                   	outsb  %ds:(%esi),(%dx)
 463:	63 5f 73             	arpl   %bx,0x73(%edi)
 466:	74 61                	je     4c9 <_init-0x8047fc3>
 468:	72 74                	jb     4de <_init-0x8047fae>
 46a:	00 65 78             	add    %ah,0x78(%ebp)
 46d:	63 65 70             	arpl   %sp,0x70(%ebp)
 470:	74 69                	je     4db <_init-0x8047fb1>
 472:	6f                   	outsl  %ds:(%esi),(%dx)
 473:	6e                   	outsb  %ds:(%esi),(%dx)
 474:	5f                   	pop    %edi
 475:	63 6c 61 73          	arpl   %bp,0x73(%ecx,%eiz,2)
 479:	73 00                	jae    47b <_init-0x8048011>
 47b:	5f                   	pop    %edi
 47c:	5f                   	pop    %edi
 47d:	70 72                	jo     4f1 <_init-0x8047f9b>
 47f:	69 6f 72 69 74 79 00 	imul   $0x797469,0x72(%edi),%ebp
 486:	74 68                	je     4f0 <_init-0x8047f9c>
 488:	69 73 00 74 68 72 6f 	imul   $0x6f726874,0x0(%ebx),%esi
 48f:	77 6e                	ja     4ff <_init-0x8047f8d>
 491:	5f                   	pop    %edi
 492:	73 69                	jae    4fd <_init-0x8047f8f>
 494:	7a 65                	jp     4fb <_init-0x8047f91>
 496:	00 5f 5f             	add    %bl,0x5f(%edi)
 499:	67 78 78             	addr16 js 514 <_init-0x8047f78>
 49c:	5f                   	pop    %edi
 49d:	70 65                	jo     504 <_init-0x8047f88>
 49f:	72 73                	jb     514 <_init-0x8047f78>
 4a1:	6f                   	outsl  %ds:(%esi),(%dx)
 4a2:	6e                   	outsb  %ds:(%esi),(%dx)
 4a3:	61                   	popa   
 4a4:	6c                   	insb   (%dx),%es:(%edi)
 4a5:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%ecx,%edi,2),%esi
 4ac:	5f 
 4ad:	5f                   	pop    %edi
 4ae:	73 74                	jae    524 <_init-0x8047f68>
 4b0:	61                   	popa   
 4b1:	74 69                	je     51c <_init-0x8047f70>
 4b3:	63 5f 69             	arpl   %bx,0x69(%edi)
 4b6:	6e                   	outsb  %ds:(%esi),(%dx)
 4b7:	69 74 69 61 6c 69 7a 	imul   $0x617a696c,0x61(%ecx,%ebp,2),%esi
 4be:	61 
 4bf:	74 69                	je     52a <_init-0x8047f62>
 4c1:	6f                   	outsl  %ds:(%esi),(%dx)
 4c2:	6e                   	outsb  %ds:(%esi),(%dx)
 4c3:	5f                   	pop    %edi
 4c4:	61                   	popa   
 4c5:	6e                   	outsb  %ds:(%esi),(%dx)
 4c6:	64                   	fs
 4c7:	5f                   	pop    %edi
 4c8:	64                   	fs
 4c9:	65                   	gs
 4ca:	73 74                	jae    540 <_init-0x8047f4c>
 4cc:	72 75                	jb     543 <_init-0x8047f49>
 4ce:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 4d2:	6e                   	outsb  %ds:(%esi),(%dx)
 4d3:	5f                   	pop    %edi
 4d4:	30 00                	xor    %al,(%eax)
 4d6:	68 61 6e 64 6c       	push   $0x6c646e61
 4db:	65                   	gs
 4dc:	72 53                	jb     531 <_init-0x8047f5b>
 4de:	77 69                	ja     549 <_init-0x8047f43>
 4e0:	74 63                	je     545 <_init-0x8047f47>
 4e2:	68 56 61 6c 75       	push   $0x756c6156
 4e7:	65 00 61 63          	add    %ah,%gs:0x63(%ecx)
 4eb:	74 69                	je     556 <_init-0x8047f36>
 4ed:	6f                   	outsl  %ds:(%esi),(%dx)
 4ee:	6e                   	outsb  %ds:(%esi),(%dx)
 4ef:	52                   	push   %edx
 4f0:	65 63 6f 72          	arpl   %bp,%gs:0x72(%edi)
 4f4:	64 00 4c 53 44       	add    %cl,%fs:0x44(%ebx,%edx,2)
 4f9:	41                   	inc    %ecx
 4fa:	5f                   	pop    %edi
 4fb:	70 74                	jo     571 <_init-0x8047f1b>
 4fd:	72 00                	jb     4ff <_init-0x8047f8d>
 4ff:	5f                   	pop    %edi
 500:	55                   	push   %ebp
 501:	6e                   	outsb  %ds:(%esi),(%dx)
 502:	77 69                	ja     56d <_init-0x8047f1f>
 504:	6e                   	outsb  %ds:(%esi),(%dx)
 505:	64                   	fs
 506:	5f                   	pop    %edi
 507:	45                   	inc    %ebp
 508:	78 63                	js     56d <_init-0x8047f1f>
 50a:	65                   	gs
 50b:	70 74                	jo     581 <_init-0x8047f0b>
 50d:	69 6f 6e 5f 43 6c 61 	imul   $0x616c435f,0x6e(%edi),%ebp
 514:	73 73                	jae    589 <_init-0x8047f03>
 516:	00 5f 55             	add    %bl,0x55(%edi)
 519:	52                   	push   %edx
 51a:	43                   	inc    %ebx
 51b:	5f                   	pop    %edi
 51c:	4e                   	dec    %esi
 51d:	4f                   	dec    %edi
 51e:	5f                   	pop    %edi
 51f:	52                   	push   %edx
 520:	45                   	inc    %ebp
 521:	41                   	inc    %ecx
 522:	53                   	push   %ebx
 523:	4f                   	dec    %edi
 524:	4e                   	dec    %esi
 525:	00 4c 53 44          	add    %cl,0x44(%ebx,%edx,2)
 529:	41                   	inc    %ecx
 52a:	5f                   	pop    %edi
 52b:	43                   	inc    %ebx
 52c:	53                   	push   %ebx
 52d:	5f                   	pop    %edi
 52e:	48                   	dec    %eax
 52f:	65                   	gs
 530:	61                   	popa   
 531:	64                   	fs
 532:	65                   	gs
 533:	72 00                	jb     535 <_init-0x8047f57>
 535:	75 6e                	jne    5a5 <_init-0x8047ee7>
 537:	77 69                	ja     5a2 <_init-0x8047eea>
 539:	6e                   	outsb  %ds:(%esi),(%dx)
 53a:	64                   	fs
 53b:	5f                   	pop    %edi
 53c:	65                   	gs
 53d:	78 63                	js     5a2 <_init-0x8047eea>
 53f:	65                   	gs
 540:	70 74                	jo     5b6 <_init-0x8047ed6>
 542:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%edi),%ebp
 549:	78 61                	js     5ac <_init-0x8047ee0>
 54b:	5f                   	pop    %edi
 54c:	65 6e                	outsb  %gs:(%esi),(%dx)
 54e:	64                   	fs
 54f:	5f                   	pop    %edi
 550:	63 61 74             	arpl   %sp,0x74(%ecx)
 553:	63 68 00             	arpl   %bp,0x0(%eax)
 556:	5f                   	pop    %edi
 557:	5f                   	pop    %edi
 558:	63 78 61             	arpl   %di,0x61(%eax)
 55b:	5f                   	pop    %edi
 55c:	61                   	popa   
 55d:	6c                   	insb   (%dx),%es:(%edi)
 55e:	6c                   	insb   (%dx),%es:(%edi)
 55f:	6f                   	outsl  %ds:(%esi),(%dx)
 560:	63 61 74             	arpl   %sp,0x74(%ecx)
 563:	65                   	gs
 564:	5f                   	pop    %edi
 565:	65                   	gs
 566:	78 63                	js     5cb <_init-0x8047ec1>
 568:	65                   	gs
 569:	70 74                	jo     5df <_init-0x8047ead>
 56b:	69 6f 6e 00 74 72 79 	imul   $0x79727400,0x6e(%edi),%ebp
 572:	5f                   	pop    %edi
 573:	65 6e                	outsb  %gs:(%esi),(%dx)
 575:	64 00 61 63          	add    %ah,%fs:0x63(%ecx)
 579:	74 69                	je     5e4 <_init-0x8047ea8>
 57b:	6f                   	outsl  %ds:(%esi),(%dx)
 57c:	6e                   	outsb  %ds:(%esi),(%dx)
 57d:	73 00                	jae    57f <_init-0x8047f0d>
 57f:	31 39                	xor    %edi,(%ecx)
 581:	5f                   	pop    %edi
 582:	55                   	push   %ebp
 583:	6e                   	outsb  %ds:(%esi),(%dx)
 584:	77 69                	ja     5ef <_init-0x8047e9d>
 586:	6e                   	outsb  %ds:(%esi),(%dx)
 587:	64                   	fs
 588:	5f                   	pop    %edi
 589:	52                   	push   %edx
 58a:	65                   	gs
 58b:	61                   	popa   
 58c:	73 6f                	jae    5fd <_init-0x8047e8f>
 58e:	6e                   	outsb  %ds:(%esi),(%dx)
 58f:	5f                   	pop    %edi
 590:	43                   	inc    %ebx
 591:	6f                   	outsl  %ds:(%esi),(%dx)
 592:	64 65 00 5f 55       	fs add %bl,%fs:%gs:0x55(%edi)
 597:	6e                   	outsb  %ds:(%esi),(%dx)
 598:	77 69                	ja     603 <_init-0x8047e89>
 59a:	6e                   	outsb  %ds:(%esi),(%dx)
 59b:	64                   	fs
 59c:	5f                   	pop    %edi
 59d:	43                   	inc    %ebx
 59e:	6f                   	outsl  %ds:(%esi),(%dx)
 59f:	6e                   	outsb  %ds:(%esi),(%dx)
 5a0:	74 65                	je     607 <_init-0x8047e85>
 5a2:	78 74                	js     618 <_init-0x8047e74>
 5a4:	00 4c 53 44          	add    %cl,0x44(%ebx,%edx,2)
 5a8:	41                   	inc    %ecx
 5a9:	5f                   	pop    %edi
 5aa:	48                   	dec    %eax
 5ab:	65                   	gs
 5ac:	61                   	popa   
 5ad:	64                   	fs
 5ae:	65                   	gs
 5af:	72 00                	jb     5b1 <_init-0x8047edb>
 5b1:	5f                   	pop    %edi
 5b2:	5f                   	pop    %edi
 5b3:	76 74                	jbe    629 <_init-0x8047e63>
 5b5:	62 6c 5f 70          	bound  %ebp,0x70(%edi,%ebx,2)
 5b9:	74 72                	je     62d <_init-0x8047e5f>
 5bb:	5f                   	pop    %edi
 5bc:	74 79                	je     637 <_init-0x8047e55>
 5be:	70 65                	jo     625 <_init-0x8047e67>
 5c0:	00 5f 55             	add    %bl,0x55(%edi)
 5c3:	52                   	push   %edx
 5c4:	43                   	inc    %ebx
 5c5:	5f                   	pop    %edi
 5c6:	46                   	inc    %esi
 5c7:	41                   	inc    %ecx
 5c8:	54                   	push   %esp
 5c9:	41                   	inc    %ecx
 5ca:	4c                   	dec    %esp
 5cb:	5f                   	pop    %edi
 5cc:	50                   	push   %eax
 5cd:	48                   	dec    %eax
 5ce:	41                   	inc    %ecx
 5cf:	53                   	push   %ebx
 5d0:	45                   	inc    %ebp
 5d1:	31 5f 45             	xor    %ebx,0x45(%edi)
 5d4:	52                   	push   %edx
 5d5:	52                   	push   %edx
 5d6:	4f                   	dec    %edi
 5d7:	52                   	push   %edx
 5d8:	00 63 61             	add    %ah,0x61(%ebx)
 5db:	74 63                	je     640 <_init-0x8047e4c>
 5dd:	68 54 65 6d 70       	push   $0x706d6554
 5e2:	00 5f 55             	add    %bl,0x55(%edi)
 5e5:	6e                   	outsb  %ds:(%esi),(%dx)
 5e6:	77 69                	ja     651 <_init-0x8047e3b>
 5e8:	6e                   	outsb  %ds:(%esi),(%dx)
 5e9:	64                   	fs
 5ea:	5f                   	pop    %edi
 5eb:	45                   	inc    %ebp
 5ec:	78 63                	js     651 <_init-0x8047e3b>
 5ee:	65                   	gs
 5ef:	70 74                	jo     665 <_init-0x8047e27>
 5f1:	69 6f 6e 5f 43 6c 65 	imul   $0x656c435f,0x6e(%edi),%ebp
 5f8:	61                   	popa   
 5f9:	6e                   	outsb  %ds:(%esi),(%dx)
 5fa:	75 70                	jne    66c <_init-0x8047e20>
 5fc:	5f                   	pop    %edi
 5fd:	46                   	inc    %esi
 5fe:	6e                   	outsb  %ds:(%esi),(%dx)
 5ff:	00 63 73             	add    %ah,0x73(%ebx)
 602:	5f                   	pop    %edi
 603:	68 65 61 64 65       	push   $0x65646165
 608:	72 00                	jb     60a <_init-0x8047e82>
 60a:	6e                   	outsb  %ds:(%esi),(%dx)
 60b:	65                   	gs
 60c:	78 74                	js     682 <_init-0x8047e0a>
 60e:	45                   	inc    %ebp
 60f:	78 63                	js     674 <_init-0x8047e18>
 611:	65                   	gs
 612:	70 74                	jo     688 <_init-0x8047e04>
 614:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%edi),%ebp
 61b:	78 61                	js     67e <_init-0x8047e0e>
 61d:	5f                   	pop    %edi
 61e:	74 68                	je     688 <_init-0x8047e04>
 620:	72 6f                	jb     691 <_init-0x8047dfb>
 622:	77 00                	ja     624 <_init-0x8047e68>
 624:	5f                   	pop    %edi
 625:	5f                   	pop    %edi
 626:	63 78 61             	arpl   %di,0x61(%eax)
 629:	5f                   	pop    %edi
 62a:	62 65 67             	bound  %esp,0x67(%ebp)
 62d:	69 6e 5f 63 61 74 63 	imul   $0x63746163,0x5f(%esi),%ebp
 634:	68 00 6c 61 6e       	push   $0x6e616c00
 639:	67 75 61             	addr16 jne 69d <_init-0x8047def>
 63c:	67                   	addr16
 63d:	65                   	gs
 63e:	53                   	push   %ebx
 63f:	70 65                	jo     6a6 <_init-0x8047de6>
 641:	63 69 66             	arpl   %bp,0x66(%ecx)
 644:	69 63 44 61 74 61 00 	imul   $0x617461,0x44(%ebx),%esp
 64b:	74 79                	je     6c6 <_init-0x8047dc6>
 64d:	70 65                	jo     6b4 <_init-0x8047dd8>
 64f:	5f                   	pop    %edi
 650:	74 61                	je     6b3 <_init-0x8047dd9>
 652:	62 6c 65 5f          	bound  %ebp,0x5f(%ebp,%eiz,2)
 656:	6f                   	outsl  %ds:(%esi),(%dx)
 657:	66                   	data16
 658:	66                   	data16
 659:	73 65                	jae    6c0 <_init-0x8047dcc>
 65b:	74 00                	je     65d <_init-0x8047e2f>
 65d:	5f                   	pop    %edi
 65e:	55                   	push   %ebp
 65f:	6e                   	outsb  %ds:(%esi),(%dx)
 660:	77 69                	ja     6cb <_init-0x8047dc1>
 662:	6e                   	outsb  %ds:(%esi),(%dx)
 663:	64                   	fs
 664:	5f                   	pop    %edi
 665:	41                   	inc    %ecx
 666:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 66a:	6e                   	outsb  %ds:(%esi),(%dx)
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	01 00                	add    %eax,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	02 00                	add    (%eax),%al
   a:	74 04                	je     10 <_init-0x804847c>
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	03 00                	add    (%eax),%eax
  12:	00 00                	add    %al,(%eax)
  14:	02 00                	add    (%eax),%al
  16:	74 08                	je     20 <_init-0x804846c>
  18:	03 00                	add    (%eax),%eax
  1a:	00 00                	add    %al,(%eax)
  1c:	11 00                	adc    %eax,(%eax)
  1e:	00 00                	add    %al,(%eax)
  20:	02 00                	add    (%eax),%al
  22:	75 08                	jne    2c <_init-0x8048460>
  24:	11 00                	adc    %eax,(%eax)
  26:	00 00                	add    %al,(%eax)
  28:	12 00                	adc    (%eax),%al
  2a:	00 00                	add    %al,(%eax)
  2c:	02 00                	add    (%eax),%al
  2e:	74 04                	je     34 <_init-0x8048458>
	...
  3c:	01 00                	add    %eax,(%eax)
  3e:	00 00                	add    %al,(%eax)
  40:	02 00                	add    (%eax),%al
  42:	74 04                	je     48 <_init-0x8048444>
  44:	01 00                	add    %eax,(%eax)
  46:	00 00                	add    %al,(%eax)
  48:	03 00                	add    (%eax),%eax
  4a:	00 00                	add    %al,(%eax)
  4c:	02 00                	add    (%eax),%al
  4e:	74 08                	je     58 <_init-0x8048434>
  50:	03 00                	add    (%eax),%eax
  52:	00 00                	add    %al,(%eax)
  54:	2a 00                	sub    (%eax),%al
  56:	00 00                	add    %al,(%eax)
  58:	02 00                	add    (%eax),%al
  5a:	75 08                	jne    64 <_init-0x8048428>
	...
  64:	2a 00                	sub    (%eax),%al
  66:	00 00                	add    %al,(%eax)
  68:	2b 00                	sub    (%eax),%eax
  6a:	00 00                	add    %al,(%eax)
  6c:	02 00                	add    (%eax),%al
  6e:	74 04                	je     74 <_init-0x8048418>
  70:	2b 00                	sub    (%eax),%eax
  72:	00 00                	add    %al,(%eax)
  74:	2d 00 00 00 02       	sub    $0x2000000,%eax
  79:	00 74 08 2d          	add    %dh,0x2d(%eax,%ecx,1)
  7d:	00 00                	add    %al,(%eax)
  7f:	00 53 00             	add    %dl,0x0(%ebx)
  82:	00 00                	add    %al,(%eax)
  84:	02 00                	add    (%eax),%al
  86:	75 08                	jne    90 <_init-0x80483fc>
  88:	53                   	push   %ebx
  89:	00 00                	add    %al,(%eax)
  8b:	00 54 00 00          	add    %dl,0x0(%eax,%eax,1)
  8f:	00 02                	add    %al,(%edx)
  91:	00 74 04 54          	add    %dh,0x54(%esp,%eax,1)
  95:	00 00                	add    %al,(%eax)
  97:	00 cf                	add    %cl,%bh
  99:	00 00                	add    %al,(%eax)
  9b:	00 02                	add    %al,(%edx)
  9d:	00 75 08             	add    %dh,0x8(%ebp)
	...
  a8:	cf                   	iret   
  a9:	00 00                	add    %al,(%eax)
  ab:	00 d0                	add    %dl,%al
  ad:	00 00                	add    %al,(%eax)
  af:	00 02                	add    %al,(%edx)
  b1:	00 74 04 d0          	add    %dh,-0x30(%esp,%eax,1)
  b5:	00 00                	add    %al,(%eax)
  b7:	00 d2                	add    %dl,%dl
  b9:	00 00                	add    %al,(%eax)
  bb:	00 02                	add    %al,(%edx)
  bd:	00 74 08 d2          	add    %dh,-0x2e(%eax,%ecx,1)
  c1:	00 00                	add    %al,(%eax)
  c3:	00 ec                	add    %ch,%ah
  c5:	00 00                	add    %al,(%eax)
  c7:	00 02                	add    %al,(%edx)
  c9:	00 75 08             	add    %dh,0x8(%ebp)
  cc:	ec                   	in     (%dx),%al
  cd:	00 00                	add    %al,(%eax)
  cf:	00 ed                	add    %ch,%ch
  d1:	00 00                	add    %al,(%eax)
  d3:	00 02                	add    %al,(%edx)
  d5:	00 74 04 ed          	add    %dh,-0x13(%esp,%eax,1)
  d9:	00 00                	add    %al,(%eax)
  db:	00 60 01             	add    %ah,0x1(%eax)
  de:	00 00                	add    %al,(%eax)
  e0:	02 00                	add    (%eax),%al
  e2:	75 08                	jne    ec <_init-0x80483a0>
	...
  ec:	60                   	pusha  
  ed:	01 00                	add    %eax,(%eax)
  ef:	00 61 01             	add    %ah,0x1(%ecx)
  f2:	00 00                	add    %al,(%eax)
  f4:	02 00                	add    (%eax),%al
  f6:	74 04                	je     fc <_init-0x8048390>
  f8:	61                   	popa   
  f9:	01 00                	add    %eax,(%eax)
  fb:	00 63 01             	add    %ah,0x1(%ebx)
  fe:	00 00                	add    %al,(%eax)
 100:	02 00                	add    (%eax),%al
 102:	74 08                	je     10c <_init-0x8048380>
 104:	63 01                	arpl   %ax,(%ecx)
 106:	00 00                	add    %al,(%eax)
 108:	6c                   	insb   (%dx),%es:(%edi)
 109:	01 00                	add    %eax,(%eax)
 10b:	00 02                	add    %al,(%edx)
 10d:	00 75 08             	add    %dh,0x8(%ebp)
 110:	6c                   	insb   (%dx),%es:(%edi)
 111:	01 00                	add    %eax,(%eax)
 113:	00 6d 01             	add    %ch,0x1(%ebp)
 116:	00 00                	add    %al,(%eax)
 118:	02 00                	add    (%eax),%al
 11a:	74 04                	je     120 <_init-0x804836c>
	...
 124:	b4 8a                	mov    $0x8a,%ah
 126:	04 08                	add    $0x8,%al
 128:	b5 8a                	mov    $0x8a,%ch
 12a:	04 08                	add    $0x8,%al
 12c:	02 00                	add    (%eax),%al
 12e:	74 04                	je     134 <_init-0x8048358>
 130:	b5 8a                	mov    $0x8a,%ch
 132:	04 08                	add    $0x8,%al
 134:	b7 8a                	mov    $0x8a,%bh
 136:	04 08                	add    $0x8,%al
 138:	02 00                	add    (%eax),%al
 13a:	74 08                	je     144 <_init-0x8048348>
 13c:	b7 8a                	mov    $0x8a,%bh
 13e:	04 08                	add    $0x8,%al
 140:	b8 8a 04 08 02       	mov    $0x208048a,%eax
 145:	00 75 08             	add    %dh,0x8(%ebp)
 148:	b8 8a 04 08 b9       	mov    $0xb908048a,%eax
 14d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 150:	02 00                	add    (%eax),%al
 152:	74 04                	je     158 <_init-0x8048334>
	...
 15c:	ba 8a 04 08 bb       	mov    $0xbb08048a,%edx
 161:	8a 04 08             	mov    (%eax,%ecx,1),%al
 164:	02 00                	add    (%eax),%al
 166:	74 04                	je     16c <_init-0x8048320>
 168:	bb 8a 04 08 bd       	mov    $0xbd08048a,%ebx
 16d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 170:	02 00                	add    (%eax),%al
 172:	74 08                	je     17c <_init-0x8048310>
 174:	bd 8a 04 08 c7       	mov    $0xc708048a,%ebp
 179:	8a 04 08             	mov    (%eax,%ecx,1),%al
 17c:	02 00                	add    (%eax),%al
 17e:	75 08                	jne    188 <_init-0x8048304>
 180:	c7                   	(bad)  
 181:	8a 04 08             	mov    (%eax,%ecx,1),%al
 184:	c8 8a 04 08          	enter  $0x48a,$0x8
 188:	02 00                	add    (%eax),%al
 18a:	74 04                	je     190 <_init-0x80482fc>
	...
 194:	c8 87 04 08          	enter  $0x487,$0x8
 198:	c9                   	leave  
 199:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 19c:	02 00                	add    (%eax),%al
 19e:	74 04                	je     1a4 <_init-0x80482e8>
 1a0:	c9                   	leave  
 1a1:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1a4:	cb                   	lret   
 1a5:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1a8:	02 00                	add    (%eax),%al
 1aa:	74 08                	je     1b4 <_init-0x80482d8>
 1ac:	cb                   	lret   
 1ad:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1b0:	fc                   	cld    
 1b1:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1b4:	02 00                	add    (%eax),%al
 1b6:	75 08                	jne    1c0 <_init-0x80482cc>
 1b8:	fc                   	cld    
 1b9:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1bc:	fd                   	std    
 1bd:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 1c0:	02 00                	add    (%eax),%al
 1c2:	74 04                	je     1c8 <_init-0x80482c4>
	...
 1cc:	c8 8a 04 08          	enter  $0x48a,$0x8
 1d0:	c9                   	leave  
 1d1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1d4:	02 00                	add    (%eax),%al
 1d6:	74 04                	je     1dc <_init-0x80482b0>
 1d8:	c9                   	leave  
 1d9:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1dc:	cb                   	lret   
 1dd:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1e0:	02 00                	add    (%eax),%al
 1e2:	74 08                	je     1ec <_init-0x80482a0>
 1e4:	cb                   	lret   
 1e5:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1e8:	ea 8a 04 08 02 00 75 	ljmp   $0x7500,$0x208048a
 1ef:	08 ea                	or     %ch,%dl
 1f1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1f4:	eb 8a                	jmp    180 <_init-0x804830c>
 1f6:	04 08                	add    $0x8,%al
 1f8:	02 00                	add    (%eax),%al
 1fa:	74 04                	je     200 <_init-0x804828c>
	...
 204:	fd                   	std    
 205:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 208:	fe 87 04 08 02 00    	incb   0x20804(%edi)
 20e:	74 04                	je     214 <_init-0x8048278>
 210:	fe 87 04 08 00 88    	incb   -0x77fff7fc(%edi)
 216:	04 08                	add    $0x8,%al
 218:	02 00                	add    (%eax),%al
 21a:	74 08                	je     224 <_init-0x8048268>
 21c:	00 88 04 08 46 88    	add    %cl,-0x77b9f7fc(%eax)
 222:	04 08                	add    $0x8,%al
 224:	02 00                	add    (%eax),%al
 226:	75 08                	jne    230 <_init-0x804825c>
	...
 230:	46                   	inc    %esi
 231:	88 04 08             	mov    %al,(%eax,%ecx,1)
 234:	47                   	inc    %edi
 235:	88 04 08             	mov    %al,(%eax,%ecx,1)
 238:	02 00                	add    (%eax),%al
 23a:	74 04                	je     240 <_init-0x804824c>
 23c:	47                   	inc    %edi
 23d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 240:	49                   	dec    %ecx
 241:	88 04 08             	mov    %al,(%eax,%ecx,1)
 244:	02 00                	add    (%eax),%al
 246:	74 08                	je     250 <_init-0x804823c>
 248:	49                   	dec    %ecx
 249:	88 04 08             	mov    %al,(%eax,%ecx,1)
 24c:	59                   	pop    %ecx
 24d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 250:	02 00                	add    (%eax),%al
 252:	75 08                	jne    25c <_init-0x8048230>
 254:	59                   	pop    %ecx
 255:	88 04 08             	mov    %al,(%eax,%ecx,1)
 258:	5a                   	pop    %edx
 259:	88 04 08             	mov    %al,(%eax,%ecx,1)
 25c:	02 00                	add    (%eax),%al
 25e:	74 04                	je     264 <_init-0x8048228>
	...
 268:	5a                   	pop    %edx
 269:	88 04 08             	mov    %al,(%eax,%ecx,1)
 26c:	5b                   	pop    %ebx
 26d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 270:	02 00                	add    (%eax),%al
 272:	74 04                	je     278 <_init-0x8048214>
 274:	5b                   	pop    %ebx
 275:	88 04 08             	mov    %al,(%eax,%ecx,1)
 278:	5d                   	pop    %ebp
 279:	88 04 08             	mov    %al,(%eax,%ecx,1)
 27c:	02 00                	add    (%eax),%al
 27e:	74 08                	je     288 <_init-0x8048204>
 280:	5d                   	pop    %ebp
 281:	88 04 08             	mov    %al,(%eax,%ecx,1)
 284:	6d                   	insl   (%dx),%es:(%edi)
 285:	88 04 08             	mov    %al,(%eax,%ecx,1)
 288:	02 00                	add    (%eax),%al
 28a:	75 08                	jne    294 <_init-0x80481f8>
 28c:	6d                   	insl   (%dx),%es:(%edi)
 28d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 290:	6e                   	outsb  %ds:(%esi),(%dx)
 291:	88 04 08             	mov    %al,(%eax,%ecx,1)
 294:	02 00                	add    (%eax),%al
 296:	74 04                	je     29c <_init-0x80481f0>
	...
 2a0:	ec                   	in     (%dx),%al
 2a1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 2a4:	ed                   	in     (%dx),%eax
 2a5:	8a 04 08             	mov    (%eax,%ecx,1),%al
 2a8:	02 00                	add    (%eax),%al
 2aa:	74 04                	je     2b0 <_init-0x80481dc>
 2ac:	ed                   	in     (%dx),%eax
 2ad:	8a 04 08             	mov    (%eax,%ecx,1),%al
 2b0:	ef                   	out    %eax,(%dx)
 2b1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 2b4:	02 00                	add    (%eax),%al
 2b6:	74 08                	je     2c0 <_init-0x80481cc>
 2b8:	ef                   	out    %eax,(%dx)
 2b9:	8a 04 08             	mov    (%eax,%ecx,1),%al
 2bc:	2f                   	das    
 2bd:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 2c0:	02 00                	add    (%eax),%al
 2c2:	75 08                	jne    2cc <_init-0x80481c0>
 2c4:	2f                   	das    
 2c5:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 2c8:	30 8b 04 08 02 00    	xor    %cl,0x20804(%ebx)
 2ce:	74 04                	je     2d4 <_init-0x80481b8>
	...
 2d8:	30 8b 04 08 31 8b    	xor    %cl,-0x74cef7fc(%ebx)
 2de:	04 08                	add    $0x8,%al
 2e0:	02 00                	add    (%eax),%al
 2e2:	74 04                	je     2e8 <_init-0x80481a4>
 2e4:	31 8b 04 08 33 8b    	xor    %ecx,-0x74ccf7fc(%ebx)
 2ea:	04 08                	add    $0x8,%al
 2ec:	02 00                	add    (%eax),%al
 2ee:	74 08                	je     2f8 <_init-0x8048194>
 2f0:	33 8b 04 08 64 8b    	xor    -0x749bf7fc(%ebx),%ecx
 2f6:	04 08                	add    $0x8,%al
 2f8:	02 00                	add    (%eax),%al
 2fa:	75 08                	jne    304 <_init-0x8048188>
 2fc:	64 8b 04 08          	mov    %fs:(%eax,%ecx,1),%eax
 300:	65 8b 04 08          	mov    %gs:(%eax,%ecx,1),%eax
 304:	02 00                	add    (%eax),%al
 306:	74 04                	je     30c <_init-0x8048180>
	...
 310:	66 8b 04 08          	mov    (%eax,%ecx,1),%ax
 314:	67 8b 04             	mov    (%si),%eax
 317:	08 02                	or     %al,(%edx)
 319:	00 74 04 67          	add    %dh,0x67(%esp,%eax,1)
 31d:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 320:	69 8b 04 08 02 00 74 	imul   $0x8b690874,0x20804(%ebx),%ecx
 327:	08 69 8b 
 32a:	04 08                	add    $0x8,%al
 32c:	b8 8b 04 08 02       	mov    $0x208048b,%eax
 331:	00 75 08             	add    %dh,0x8(%ebp)
 334:	b8 8b 04 08 b9       	mov    $0xb908048b,%eax
 339:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 33c:	02 00                	add    (%eax),%al
 33e:	74 04                	je     344 <_init-0x8048148>
	...
 348:	6e                   	outsb  %ds:(%esi),(%dx)
 349:	88 04 08             	mov    %al,(%eax,%ecx,1)
 34c:	6f                   	outsl  %ds:(%esi),(%dx)
 34d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 350:	02 00                	add    (%eax),%al
 352:	74 04                	je     358 <_init-0x8048134>
 354:	6f                   	outsl  %ds:(%esi),(%dx)
 355:	88 04 08             	mov    %al,(%eax,%ecx,1)
 358:	71 88                	jno    2e2 <_init-0x80481aa>
 35a:	04 08                	add    $0x8,%al
 35c:	02 00                	add    (%eax),%al
 35e:	74 08                	je     368 <_init-0x8048124>
 360:	71 88                	jno    2ea <_init-0x80481a2>
 362:	04 08                	add    $0x8,%al
 364:	74 8a                	je     2f0 <_init-0x804819c>
 366:	04 08                	add    $0x8,%al
 368:	02 00                	add    (%eax),%al
 36a:	75 08                	jne    374 <_init-0x8048118>
 36c:	74 8a                	je     2f8 <_init-0x8048194>
 36e:	04 08                	add    $0x8,%al
 370:	75 8a                	jne    2fc <_init-0x8048190>
 372:	04 08                	add    $0x8,%al
 374:	02 00                	add    (%eax),%al
 376:	74 04                	je     37c <_init-0x8048110>
	...
 380:	75 8a                	jne    30c <_init-0x8048180>
 382:	04 08                	add    $0x8,%al
 384:	76 8a                	jbe    310 <_init-0x804817c>
 386:	04 08                	add    $0x8,%al
 388:	02 00                	add    (%eax),%al
 38a:	74 04                	je     390 <_init-0x80480fc>
 38c:	76 8a                	jbe    318 <_init-0x8048174>
 38e:	04 08                	add    $0x8,%al
 390:	78 8a                	js     31c <_init-0x8048170>
 392:	04 08                	add    $0x8,%al
 394:	02 00                	add    (%eax),%al
 396:	74 08                	je     3a0 <_init-0x80480ec>
 398:	78 8a                	js     324 <_init-0x8048168>
 39a:	04 08                	add    $0x8,%al
 39c:	97                   	xchg   %eax,%edi
 39d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3a0:	02 00                	add    (%eax),%al
 3a2:	75 08                	jne    3ac <_init-0x80480e0>
 3a4:	97                   	xchg   %eax,%edi
 3a5:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3a8:	98                   	cwtl   
 3a9:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3ac:	02 00                	add    (%eax),%al
 3ae:	74 04                	je     3b4 <_init-0x80480d8>
	...
 3b8:	98                   	cwtl   
 3b9:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3bc:	99                   	cltd   
 3bd:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3c0:	02 00                	add    (%eax),%al
 3c2:	74 04                	je     3c8 <_init-0x80480c4>
 3c4:	99                   	cltd   
 3c5:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3c8:	9b                   	fwait
 3c9:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3cc:	02 00                	add    (%eax),%al
 3ce:	74 08                	je     3d8 <_init-0x80480b4>
 3d0:	9b                   	fwait
 3d1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 3d4:	b3 8a                	mov    $0x8a,%bl
 3d6:	04 08                	add    $0x8,%al
 3d8:	02 00                	add    (%eax),%al
 3da:	75 08                	jne    3e4 <_init-0x80480a8>
 3dc:	b3 8a                	mov    $0x8a,%bl
 3de:	04 08                	add    $0x8,%al
 3e0:	b4 8a                	mov    $0x8a,%ah
 3e2:	04 08                	add    $0x8,%al
 3e4:	02 00                	add    (%eax),%al
 3e6:	74 04                	je     3ec <_init-0x80480a0>
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ef                   	out    %eax,(%dx)
   1:	00 00                	add    %al,(%eax)
   3:	00 00                	add    %al,(%eax)
   5:	01 00                	add    %eax,(%eax)
   7:	00 21                	add    %ah,(%ecx)
   9:	01 00                	add    %eax,(%eax)
   b:	00 3f                	add    %bh,(%edi)
   d:	01 00                	add    %eax,(%eax)
	...
  17:	00 00                	add    %al,(%eax)
  19:	01 00                	add    %eax,(%eax)
  1b:	00 21                	add    %ah,(%ecx)
  1d:	01 00                	add    %eax,(%eax)
  1f:	00 3f                	add    %bh,(%edi)
  21:	01 00                	add    %eax,(%eax)
  23:	00 60 01             	add    %ah,0x1(%eax)
	...
  2e:	00 00                	add    %al,(%eax)
  30:	c8 87 04 08          	enter  $0x487,$0x8
  34:	b4 8a                	mov    $0x8a,%ah
  36:	04 08                	add    $0x8,%al
  38:	b4 8a                	mov    $0x8a,%ah
  3a:	04 08                	add    $0x8,%al
  3c:	b9 8a 04 08 ba       	mov    $0xba08048a,%ecx
  41:	8a 04 08             	mov    (%eax,%ecx,1),%al
  44:	c8 8a 04 08          	enter  $0x48a,$0x8
  48:	c8 8a 04 08          	enter  $0x48a,$0x8
  4c:	eb 8a                	jmp    ffffffd8 <_end+0xf7fb4e58>
  4e:	04 08                	add    $0x8,%al
  50:	ec                   	in     (%dx),%al
  51:	8a 04 08             	mov    (%eax,%ecx,1),%al
  54:	30 8b 04 08 30 8b    	xor    %cl,-0x74cff7fc(%ebx)
  5a:	04 08                	add    $0x8,%al
  5c:	65 8b 04 08          	mov    %gs:(%eax,%ecx,1),%eax
  60:	66 8b 04 08          	mov    (%eax,%ecx,1),%ax
  64:	b9 8b 04 08 00       	mov    $0x8048b,%ecx
  69:	00 00                	add    %al,(%eax)
  6b:	00 00                	add    %al,(%eax)
  6d:	00 00                	add    %al,(%eax)
	...
